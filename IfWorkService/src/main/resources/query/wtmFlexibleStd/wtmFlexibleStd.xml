<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmFlexibleStdMapper">
    <select id="getWtmFlexibleStd" parameterType="map" resultType="wtmFlexibleStd">
        <![CDATA[
			SELECT C.APPL_NM AS WORK_TYPE_NM 
			     , S.*
			     , C.*
			  FROM WTM_FLEXIBLE_STD_MGR S 
			  JOIN WTM_APPL_CODE C
			    ON C.ENTER_CD = S.ENTER_CD
			   AND C.TENANT_ID = S.TENANT_ID
			   AND S.WORK_TYPE_CD = C.APPL_CD
			 WHERE S.TENANT_ID = #{tenantId}
			   AND S.ENTER_CD = #{enterCd}
			   AND #{d} BETWEEN S.USE_SYMD AND S.USE_EYMD
			   AND S.WORK_TYPE_CD NOT IN ('BASE', 'WORKTEAM')
			 ORDER BY S.USE_SYMD DESC
        ]]>
    </select>
    <select id="checkRequestDate" parameterType="Long" resultType="map"> 
        <![CDATA[
        	SELECT SUM(XX.CNT) AS CNT FROM (
			SELECT COUNT(*) AS CNT
			  FROM WTM_APPL A
			  JOIN WTM_FLEXIBLE_APPL F
			   ON A.APPL_ID = F.APPL_ID
			  JOIN (
				SELECT A.TENANT_ID, A.ENTER_CD, A.APPL_ID, A.APPL_SABUN, F.SYMD, F.EYMD
				  FROM WTM_APPL A
				  JOIN WTM_FLEXIBLE_APPL F
				    ON A.APPL_ID = F.APPL_ID
				   AND A.APPL_ID = #{applId}
			  ) X
			   ON A.TENANT_ID = X.TENANT_ID AND A.ENTER_CD = X.ENTER_CD AND A.APPL_SABUN = X.APPL_SABUN
			WHERE A.APPL_STATUS_CD NOT IN ('11','22','44','32') 
			  AND (X.SYMD <= F.EYMD OR X.EYMD <= F.SYMD)
			  AND A.APPL_ID <> X.APPL_ID
			UNION
		   SELECT COUNT(*)
		     FROM WTM_FLEXIBLE_EMP A
		     JOIN WTM_FLEXIBLE_STD_MGR M
		       ON A.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			 JOIN (
				SELECT A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, F.SYMD, F.EYMD
				  FROM WTM_APPL A
				  JOIN WTM_FLEXIBLE_APPL F
				    ON A.APPL_ID = F.APPL_ID
				   AND A.APPL_ID = #{applId}
			  	) X
			   ON A.TENANT_ID = X.TENANT_ID AND A.ENTER_CD = X.ENTER_CD AND A.SABUN = X.APPL_SABUN
            WHERE  (X.SYMD <= A.EYMD OR X.EYMD <= A.SYMD)
              AND M.BASE_WORK_YN = 'N' 
            ) XX
        ]]>
    </select>
     
    <select id="getWtmFlexibleStdList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT FLEXIBLE_STD_MGR_ID as code
			     , FLEXIBLE_NM as codeNm
			  FROM WTM_FLEXIBLE_STD_MGR 
			 WHERE TENANT_ID = #{tenantId}
			   AND ENTER_CD = #{enterCd}
			 ORDER BY FLEXIBLE_STD_MGR_ID
        ]]>
    </select>
    
    <select id="getWtmFlexibleStdWorkTypeList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT FLEXIBLE_STD_MGR_ID as code
			     , FLEXIBLE_NM as codeNm
			  FROM WTM_FLEXIBLE_STD_MGR 
			 WHERE TENANT_ID = #{tenantId}
			   AND ENTER_CD = #{enterCd}
			   AND WORK_TYPE_CD = #{workTypeCd}
			 ORDER BY FLEXIBLE_STD_MGR_ID
        ]]>
    </select>
    
    <select id="getRangeWeekDay" parameterType="map" resultType="map">
    	<![CDATA[
    	SELECT X.FIRST_DAY AS symd
    		 , F_WTM_DATE_FORMAT(F_WTM_DATE_ADD(F_WTM_TO_DATE(X.FIRST_DAY,'%Y%m%d'), 6, 'D'), '%Y%m%d')  AS eymd
		  FROM (
		SELECT CASE WHEN  P.INFO_VALUE < F_WTM_WEEKDAY(#{d}) THEN MAX(D.SUN_YMD)
				  	WHEN  P.INFO_VALUE > F_WTM_WEEKDAY(#{d}) THEN MIN(D.SUN_YMD)
                    ELSE D.SUN_YMD END AS FIRST_DAY
		  FROM WTM_DAY_MGR D
		  JOIN WTM_PROPERTIE P
		    ON 1=1
		 WHERE 1=1
		   AND (
			( P.INFO_VALUE < F_WTM_WEEKDAY(#{d}) AND D.SUN_YMD BETWEEN F_WTM_DATE_ADD(F_WTM_TO_DATE(#{d},'%Y%m%d'), -6, 'D') AND  #{d}  AND D.DAY_NM = P.INFO_VALUE)
			OR
			( P.INFO_VALUE > F_WTM_WEEKDAY(#{d}) AND D.SUN_YMD BETWEEN  #{d} AND F_WTM_DATE_ADD(F_WTM_TO_DATE(#{d},'%Y%m%d'), 6, 'D')   AND D.DAY_NM = P.INFO_VALUE)
		    OR 
		    ( P.INFO_VALUE = F_WTM_WEEKDAY(#{d}) AND D.SUN_YMD =  #{d} )
		 	)
		   AND P.TENANT_ID = #{tenantId}
		   AND P.ENTER_CD = #{enterCd}
		   AND P.INFO_KEY = 'OPTION_FIRSTDAY_OF_WEEK'
		 ) X
		 ]]>
    </select>
</mapper>
