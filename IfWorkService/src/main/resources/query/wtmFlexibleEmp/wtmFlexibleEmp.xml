<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmFlexibleEmpMapper">
	<select id="getFlexibleEmpList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT E.TENANT_ID AS tenantId
			     , E.ENTER_CD AS enterCd
			     , E.SABUN AS sabun
			     , E.WORK_TYPE_CD AS workTypeCd
			     , E.FLEXIBLE_NM AS flexibleNm
			     , A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(E.TENANT_ID, E.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, E.SYMD) AS applStatusNm
			     , FA.SYMD AS sYmd
			     , FA.EYMD AS eYmd
			     , REASON AS reason
			  FROM WTM_APPL A
			  JOIN WTM_FLEXIBLE_APPL FA
			    ON A.APPL_ID = FA.APPL_ID
			  LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
			    ON E.TENANT_ID = A.TENANT_ID
			   AND E.ENTER_CD = A.ENTER_CD
			   AND E.SABUN = A.APPL_SABUN
			   AND E.WORK_TYPE_CD = A.APPL_CD
			   AND E.SYMD = FA.SYMD
			   AND E.EYMD = FA.EYMD
			 WHERE A.TENANT_ID =  #{tenantId}
			   AND A.ENTER_CD = #{enterCd}
			   AND A.APPL_SABUN = #{empNo}
			   AND (F_WTM_TO_DATE(#{sYmd}, '%Y%m%d') <= F_WTM_TO_DATE(FA.EYMD, '%Y%m%d') OR F_WTM_TO_DATE(FA.SYMD, '%Y%m%d') < F_WTM_TO_DATE(#{eYmd}, '%Y%m%d'))
        ]]>
    </select>

	<select id="getFlexibleEmp" parameterType="map" resultType="wtmFlexibleEmp">
        <![CDATA[
			SELECT E.*
			  FROM WTM_FLEXIBLE_EMP E
			 WHERE E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   AND E.SABUN = #{empNo}
			   AND F_WTM_DATE_FORMAT(F_WTM_TO_DATE(#{ymd}, '%Y%m%d'), '%Y%m%d') BETWEEN E.SYMD AND E.EYMD
        ]]>
    </select>
	
    <select id="getPrevFlexible" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT A.APPL_SABUN AS sabun
			     , MAX(FA.SYMD) AS sYmd
			     , MAX(FA.EYMD) AS eYmd
			  FROM WTM_APPL A
			  JOIN WTM_FLEXIBLE_APPL FA
			    ON A.APPL_ID = FA.APPL_ID 
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd}
			   AND A.APPL_SABUN = #{empNo}
			GROUP BY A.APPL_SABUN
        ]]>
    </select>
    
    <select id="getWorkTermTime" parameterType="map" resultType="wtmWorkTermTime">
        <![CDATA[
			SELECT T.*
			     , E.FLEXIBLE_NM AS filexibleNm
			  FROM WTM_WORK_TERM_TIME T
			  JOIN WTM_FLEXIBLE_EMP E
			    ON T.TENANT_ID = E.TENANT_ID
			   AND T.ENTER_CD = E.ENTER_CD
			   AND T.SABUN = E.SABUN
			   AND T.FLEXUBLE_SDATE = E.SYMD
			   AND T.FLEXUBLE_EDATE = E.EYMD
			 WHERE E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   AND E.SABUN = #{empNo}
			   AND F_WTM_TO_DATE(#{ymd},'%Y%m%d') BETWEEN F_WTM_TO_DATE(E.SYMD,'%Y%m%d') AND F_WTM_TO_DATE(E.EYMD,'%Y%m%d')
        ]]>
    </select>
    
    <update id="createWorkCalendar" parameterType="map">
    	INSERT INTO WTM_WORK_CALENDAR(TENANT_ID, ENTER_CD, SABUN, YMD, WORK_TYPE_CD, FLEXIBLE_EMP_ID, TIME_CD_MGR_ID, WORK_CLOSE_YN, UPDATE_ID)
			SELECT E.TENANT_ID, E.ENTER_CD, E.SABUN, D.SUN_YMD,  E.WORK_TYPE_CD, E.FLEXIBLE_EMP_ID, M.TIME_CD_MGR_ID, 'N',  #{userId}
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_FLEXIBLE_STD_MGR M
			    ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			  JOIN WTM_DAY_MGR D
			    ON D.SUN_YMD BETWEEN E.SYMD AND E.EYMD
			 WHERE E.FLEXIBLE_EMP_ID = #{flexibleEmpId}
			   AND NOT EXISTS 
				(
					SELECT * FROM WTM_WORK_CALENDAR C
			    	 WHERE C.YMD = D.SUN_YMD
			     	   AND C.SABUN = E.SABUN
				)
    </update>
    <update id="updateHolidayYnOFWorkCalendar" parameterType="map">
    	UPDATE WTM_WORK_CALENDAR C 
    	   SET C.HOLIDAY_YN = F_WTM_HOLIDAY_YN(C.YMD, #{1}, #{2}, #{3}, #{4}, #{5}, #{6}, #{7})
    	     , C.UPDATE_ID = #{userId}
		 WHERE C.FLEXIBLE_EMP_ID = #{flexibleEmpId} 
    </update>
    <update id="updatePlanMinute" parameterType="Long">
    	UPDATE WTM_WORK_DAY_RESULT X 
    	  JOIN (
			SELECT D.WORK_CALENDAR_ID  
				 , F_WTM_CALC_MINUTE( date_format(D.PLAN_SDATE, '%H%i') ,  date_format(D.PLAN_EDATE, '%H%i'), '','') -
				   SUM(F_WTM_CALC_MINUTE(B.SHM, B.EHM, date_format(D.PLAN_SDATE, '%H%i') ,  date_format(D.PLAN_EDATE, '%H%i') )) AS CM
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_WORK_CALENDAR C
			    ON E.TENANT_ID = C.TENANT_ID AND E.ENTER_CD = C.ENTER_CD
			   AND E.SABUN = C.SABUN
			  JOIN WTM_WORK_DAY_RESULT D 
			    ON C.WORK_CALENDAR_ID = D.WORK_CALENDAR_ID
			  JOIN WTM_TIME_CD_MGR T
			    ON C.TIME_CD_MGR_ID = T.TIME_CD_MGR_ID
			  JOIN WTM_TIME_BREAK_MGR B
			    ON T.TIME_CD_MGR_ID = B.TIME_CD_MGR_ID 
			 WHERE C.YMD BETWEEN E.SYMD AND E.EYMD
			   AND E.FLEXIBLE_EMP_ID = #{flexibleEmpId}
			   AND D.TIME_TYPE_CD = 'BASE'
			   AND (B.SHM BETWEEN date_format(D.PLAN_SDATE, '%H%i') AND date_format(D.PLAN_EDATE, '%H%i') 
			     OR B.EHM BETWEEN date_format(D.PLAN_SDATE, '%H%i') AND date_format(D.PLAN_EDATE, '%H%i'))
			 GROUP BY D.WORK_DAY_RESULT_ID
			) XX
			ON X.WORK_CALENDAR_ID = XX.WORK_CALENDAR_ID
		   SET X.PLAN_MINUTE = XX.CM
			;
    </update>
    
    <select id="checkBaseWorktime" parameterType="Long" resultType="map">
    	SELECT ( CEIL( F_WTM_TO_DAYS(E.SYMD, E.EYMD) * P.INFO_VALUE / 7) * 60  >=  SUM(CASE WHEN R.APPR_MINUTE IS NOT NULL AND R.APPR_MINUTE != '' THEN R.APPR_MINUTE ELSE R.PLAN_MINUTE END)) AS isValid
    		, CEIL( F_WTM_TO_DAYS(E.SYMD, E.EYMD) * P.INFO_VALUE / 7) * 60 as totalWorktime
    	  FROM WTM_FLEXIBLE_EMP E
		  JOIN WTM_WORK_CALENDAR C
		    ON E.FLEXIBLE_EMP_ID = C.FLEXIBLE_EMP_ID
		  JOIN  WTM_WORK_DAY_RESULT R
		    ON C.WORK_CALENDAR_ID = R.WORK_CALENDAR_ID
		  JOIN WTM_PROPERTIE P
		    ON P.TENANT_ID = C.TENANT_ID AND P.ENTER_CD = C.ENTER_CD AND P.INFO_KEY = 'OPTION_AVG_WORKTIME_1WEEK'
		 WHERE E.FLEXIBLE_EMP_ID = #{flexibleEmpId}
    </select>
    
    <select id="getWorktimePlan" parameterType="Long" resultType="map" >
    	SELECT C.YMD AS ymd
    	     , F_WTM_DATE_FORMAT(CASE WHEN R.APPR_SDATE IS NOT NULL AND R.APPR_SDATE != '' THEN R.APPR_SDATE ELSE R.PLAN_SDATE END, '%H:%i') AS shm
		     , F_WTM_DATE_FORMAT(CASE WHEN R.APPR_EDATE IS NOT NULL AND R.APPR_EDATE != '' THEN R.APPR_EDATE ELSE R.PLAN_EDATE END, '%H:%i') AS ehm
		     , CASE WHEN R.APPR_MINUTE IS NOT NULL AND R.APPR_MINUTE != '' THEN R.APPR_MINUTE ELSE R.PLAN_MINUTE END AS minute
		     , R.TAA_CD AS taaCd
		     , F_WTM_GET_CODE_NM(E.TENANT_ID, E.ENTER_CD, 'TAA_TYPE_CD', R.TAA_CD, C.YMD) AS taaNm
           	 , C.HOLIDAY_YN AS holidayYn
		  FROM WTM_FLEXIBLE_EMP E
		  JOIN WTM_WORK_CALENDAR C
		    ON E.FLEXIBLE_EMP_ID = C.FLEXIBLE_EMP_ID
		  LEFT OUTER JOIN  WTM_WORK_DAY_RESULT R
		    ON C.WORK_CALENDAR_ID = R.WORK_CALENDAR_ID
		 WHERE E.FLEXIBLE_EMP_ID = #{flexibleEmpId}
		 ORDER BY C.YMD
    </select>
</mapper>
