<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmOtApplMapper">
	 <update id="calcOtMinute" parameterType="map">
	 	UPDATE WTM_OT_APPL O
		   SET OT_MINUTE = (
			SELECT F_WTM_CALC_MINUTE(F_WTM_DATE_FORMAT(O.OT_SDATE, '%H%i') ,F_WTM_DATE_FORMAT(O.OT_EDATE, '%H%i'),  '','','') -  SUM(F_WTM_CALC_MINUTE(B.SHM, B.EHM,F_WTM_DATE_FORMAT(O.OT_SDATE, '%H%i') ,F_WTM_DATE_FORMAT(O.OT_EDATE, '%H%i'),  '')) 
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_WORK_CALENDAR C
			    ON E.FLEXIBLE_EMP_ID = C.FLEXIBLE_EMP_ID
			  JOIN WTM_TIME_CD_MGR T
			    ON C.TIME_CD_MGR_ID = T.TIME_CD_MGR_ID
			  JOIN WTM_TIME_BREAK_MGR B
			    ON T.TIME_CD_MGR_ID = B.TIME_CD_MGR_ID 
			 WHERE C.YMD BETWEEN E.SYMD AND E.EYMD
			   AND E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   AND E.SABUN = #{sabun}
			   AND C.YMD = #{ymd}
		)
		 WHERE O.APPL_ID = #{applId}
	 </update>
	 
	 <select id="otApplfindByApplId" parameterType="Long" resultType="hashmap">
        <![CDATA[
			SELECT O.OT_APPL_ID AS otApplId
			     , O.APPL_ID AS applId
			     , O.YMD AS ymd
			     , O.HOLIDAY_YN AS holidayYn
			     , O.OT_SDATE AS otSdate
			     , O.OT_EDATE AS otEdate
			     , O.OT_MINUTE AS otMinute
			     , O.RET_OT_MINUTE AS retOtMinute
			     , O.REASON_CD AS reasonCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'REASON_CD', O.REASON_CD, A.APPL_YMD) AS reasonNm
			     , O.REASON AS reason
			     , O.SUB_YN AS subYn
			     , O.OLD_OT_APPL_ID AS oldOtApplId
			     , O.CANCEL_YN AS cancelYn
			     , A.APPL_STATUS_CD AS applStatusCd
			  FROM WTM_APPL A
			  JOIN WTM_OT_APPL O
			    ON A.APPL_ID = O.APPL_ID
			 WHERE O.APPL_ID = #{applId}   
			 ORDER BY O.OT_SDATE
	        ]]>
    </select>
    
    <select id="getPrevOtSubsApplList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT O.OT_SDATE AS sDate
			     , O.OT_EDATE AS eDate
			     , O.OT_MINUTE AS otMinute
			     , S.SUBS_SDATE AS subsSdate
			     , S.SUBS_EDATE AS subsEdate
			     , CASE F_WTM_WEEKDAY(S.SUBS_SDATE) 
			  			WHEN 1 THEN '일' 
						WHEN 2 THEN '월'
						WHEN 3 THEN '화' 
						WHEN 4 THEN '수' 
						WHEN 5 THEN '목' 
						WHEN 6 THEN '금' 
						WHEN 7 THEN '토' END AS subsDay
			     , S.SUBS_MINUTE AS subsMinute
			     , F_WTM_NVL(R.APPR_SDATE, R.PLAN_SDATE) AS sDate
				  , F_WTM_NVL(R.APPR_EDATE, R.PLAN_EDATE) AS eDate
				  , CASE WHEN E.WORK_TYPE_CD IN ('BASE','WORKTEAM') THEN T.WORK_SHM ELSE M.WORK_SHM END AS workShm
				  , CASE WHEN E.WORK_TYPE_CD IN ('BASE','WORKTEAM') THEN T.WORK_EHM ELSE M.WORK_EHM END AS workEhm
			  FROM WTM_OT_APPL O
			  JOIN WTM_OT_SUBS_APPL S
			    ON O.OT_APPL_ID = S.OT_APPL_ID
			  LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			    ON O.APPL_ID = R.APPL_ID
			  LEFT OUTER JOIN WTM_WORK_CALENDAR C
			    ON R.YMD = C.YMD
			   AND R.SABUN = C.SABUN
			   AND R.ENTER_CD = C.ENTER_CD
			   AND R.TENANT_ID = C.TENANT_ID
			  LEFT OUTER JOIN WTM_TIME_CD_MGR T
			    ON C.TIME_CD_MGR_ID = T.TIME_CD_MGR_ID
			  LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
			    ON C.TENANT_ID = E.TENANT_ID
			   AND C.ENTER_CD = E.ENTER_CD
			   AND C.SABUN = E.SABUN
			   AND C.YMD BETWEEN E.SYMD AND E.EYMD
			  LEFT OUTER JOIN WTM_FLEXIBLE_STD_MGR M
			    ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			 WHERE C.TENANT_ID = #{tenantId}
			   AND C.ENTER_CD = #{enterCd}
			   AND C.SABUN = #{sabun}
			   AND O.HOLIDAY_YN = 'Y'
	        ]]>
    </select>
    
    <select id="getTotOtMinuteBySymdAndEymd" parameterType="map" resultType="map">
    <![CDATA[
    	SELECT SUM(X.OT_MINUTE) AS totOtMinute
		  FROM (
			SELECT SUM(F_WTM_NVL(O.OT_MINUTE,0)) - SUM(F_WTM_NVL(S.SUBS_MINUTE,0)) AS OT_MINUTE
			  FROM WTM_APPL A
			  JOIN WTM_OT_APPL O
			    ON A.APPL_ID = O.APPL_ID
			  LEFT OUTER JOIN WTM_OT_SUBS_APPL S
			    ON A.APPL_ID = S.APPL_ID
			   AND S.SUB_YMD BETWEEN #{symd} AND #{eymd}
			 WHERE A.APPL_STATUS_CD IN ('21','31')
			   AND O.YMD BETWEEN #{symd} AND #{eymd}
			   AND (A.APPL_ID <> #{applId} OR #{applId} IS NULL OR #{applId} = '') 
			 UNION ALL
			SELECT F_WTM_NVL(CASE WHEN R.APPR_MINUTE IS NULL THEN R.PLAN_MINUTE ELSE R.APPR_MINUTE END,0) AS OT_MINUTE
			  FROM WTM_WORK_DAY_RESULT R
			 WHERE R.TENANT_ID = #{tenantId}
			   AND R.ENTER_CD = #{enterCd}
			   AND R.YMD BETWEEN #{symd} AND #{eymd|
			   AND R.TIME_TYPE_CD = 'OT'
			   AND R.SABUN = #{sabun}
		) X
	]]>
    </select>
   
</mapper>
