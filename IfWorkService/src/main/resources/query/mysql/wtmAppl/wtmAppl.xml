<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmApplMapper">
	<select id="getWtmApplLine" parameterType="map" resultType="wtmApplLine">
        <![CDATA[
        	SELECT S.*
			     , @rownum := @rownum+1 AS APPR_SEQ
			  FROM (
        	SELECT 1 AS APPR_TYPE_CD
			    , 1 AS SEQ
			    , #{sabun} AS SABUN
			    , F_WTM_GET_EMP_NM(#{tenantId}, #{enterCd}, #{sabun}, #{d}) AS EMP_NM
			  FROM DUAL
			UNION ALL
			SELECT 2 AS APPR_TYPE_CD
			     , (@seq := @seq + 1) AS SEQ
				 , CASE WHEN EMP_HIS_ID IS NOT NULL THEN H.SABUN ELSE O.SABUN END AS SABUN
	     		 , F_WTM_GET_EMP_NM(#{tenantId}, #{enterCd}, CASE WHEN EMP_HIS_ID IS NOT NULL THEN H.SABUN ELSE O.SABUN END, #{d}) AS EMP_NM
			  FROM (
						SELECT TENANT_ID 
              				 , ENTER_CD 
						     , @org_cd AS ORG_CD
						     , (SELECT @org_cd := PRIOR_ORG_CD 
							       FROM ( SELECT C.TENANT_ID, C.ENTER_CD, D.*
												  FROM WTM_ORG_CHART C
												  JOIN WTM_ORG_CHART_DET D
												    ON C.ORG_CHART_ID = D.ORG_CHART_ID
												 WHERE C.TENANT_ID = #{tenantId}
												   AND C.ENTER_CD = #{enterCd}
												   AND #{d} BETWEEN C.SYMD AND C.EYMD
											) S
									WHERE ORG_CD = @org_cd limit 1) AS _PARENT_ID
						     , @seq := 0
						     , EMP_ORG
						     , LEADER_YN
						  FROM ( SELECT @org_cd := ORG_CD 
					              	  , ORG_CD AS EMP_ORG
					                  , LEADER_YN AS LEADER_YN
								   FROM WTM_EMP_HIS H 
								  WHERE H.TENANT_ID=#{tenantId} 
								    AND H.ENTER_CD=#{enterCd} 
								    AND H.SABUN=#{sabun} AND #{d} BETWEEN H.SYMD AND H.EYMD) AS vars,
						       ( SELECT C.TENANT_ID, C.ENTER_CD, D.*
									  FROM WTM_ORG_CHART C
									  JOIN WTM_ORG_CHART_DET D
									    ON C.ORG_CHART_ID = D.ORG_CHART_ID
									 WHERE C.TENANT_ID = #{tenantId}
									   AND C.ENTER_CD = #{enterCd}
									   AND #{d} BETWEEN C.SYMD AND C.EYMD
								 ) org
						 WHERE @org_cd IS NOT NULL 
					 ) X
			  LEFT OUTER JOIN WTM_EMP_HIS H
		       ON X.TENANT_ID = H.TENANT_ID
		      AND X.ENTER_CD = H.ENTER_CD
		      AND X.ORG_CD = H.ORG_CD
		      AND H.LEADER_YN = 'Y'
		      AND H.STATUS_CD = 'AA'
		      AND #{d} BETWEEN H.SYMD AND H.EYMD
		      LEFT OUTER JOIN WTM_ORG_CONC O
		       ON X.TENANT_ID = O.TENANT_ID
		      AND X.ENTER_CD = O.ENTER_CD
		      AND X.ORG_CD = O.ORG_CD
		      AND #{d} BETWEEN O.SYMD AND O.EYMD
			 WHERE _PARENT_ID IS NOT NULL
       		   AND (EMP_HIS_ID IS NOT NULL OR ORG_CONC_ID IS NOT NULL)
       		   AND (X.LEADER_YN = 'N' OR (X.LEADER_YN = 'Y' AND EMP_ORG <> X.ORG_CD))
       		   AND (CASE WHEN EMP_HIS_ID IS NOT NULL THEN H.SABUN ELSE O.SABUN END) <> #{sabun}
       	UNION ALL
		SELECT 3 AS APPR_TYPE_CD
		     , SEQ
		     , RL.SABUN AS SABUN
		     , F_WTM_GET_EMP_NM(AC.TENANT_ID, AC.ENTER_CD, RL.SABUN, #{d}) AS EMP_NM
		  FROM WTM_APPL_REC_LINE RL
		  JOIN WTM_APPL_CODE AC
		    ON RL.APPL_CODE_ID = AC.APPL_CODE_ID
		 WHERE (AC.TENANT_ID, AC.ENTER_CD, AC.APPL_CD) IN (SELECT #{tenantId}, #{enterCd}, #{applCd} FROM dual)
		ORDER BY APPR_TYPE_CD, SEQ                                                          
		) S, (SELECT @rownum:=0) TMP                                           
        ]]>
    </select>

    <select id="getWtmApplLineByApplId" parameterType="Long" resultType="wtmApplLine">
        <![CDATA[
			SELECT L.APPR_TYPE_CD
			     , L.APPR_SEQ
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPR_TYPE_CD', L.APPR_TYPE_CD, A.APPL_YMD) AS APPR_TYPE_NM
			     , L.APPR_SABUN AS SABUN
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, L.APPR_SABUN, A.APPL_YMD) AS EMP_NM
			     , F_WTM_DATE_FORMAT(L.APPR_DATE, 'YMD') AS APPR_DATE
			     , L.APPR_STATUS_CD
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPR_STATUS_CD', L.APPR_STATUS_CD, A.APPL_YMD) AS APPR_STATUS_NM
			     , L.APPR_OPINION
                 , DATE_FORMAT(L.APPR_DATE, '%Y-%m-%d %H:%i:%s') AS APPR_YMDHIS
			  FROM WTM_APPL_LINE L
			  JOIN WTM_APPL A
			    ON L.APPL_ID = A.APPL_ID
			 WHERE L.APPL_ID = #{applId}
			ORDER BY APPR_SEQ
        ]]>
    </select>
    
    <select id="calcWorkDay" parameterType="map" resultType="map">
        <![CDATA[
			SELECT SUM(CASE WHEN CASE X.HOL_EXCEPT_YN WHEN 'Y' THEN X.SUN_YN ELSE X.HOLIDAY_YN END = 'Y' THEN 0 ELSE 1 END) AS workCnt
			FROM (
				SELECT D.HOLIDAY_YN, CASE WHEN H.SUN_YN IS NULL THEN 'N' ELSE H.SUN_YN END AS SUN_YN, M.HOL_EXCEPT_YN
				FROM WTM_FLEXIBLE_STD_MGR M
				JOIN WTM_DAY_MGR D
				ON D.SUN_YMD BETWEEN M.USE_SYMD AND M.USE_EYMD
				LEFT OUTER JOIN WTM_HOLIDAY_MGR H
				ON D.SUN_YMD = H.HOLIDAY_YMD
				AND H.TENANT_ID = #{tenantId}
				AND H.ENTER_CD = #{enterCd}
				WHERE M.FLEXIBLE_STD_MGR_ID = #{flexibleStdMgrId}
				  AND D.SUN_YMD BETWEEN #{sYmd} AND #{eYmd} 
				ORDER BY D.SUN_YMD
			) X
        ]]>
    </select>
    
    <select id="getApprList01" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , C.APPL_NM AS applNm
			     , A.APPL_SABUN AS applSabun
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
			     , A.APPL_YMD AS applYmd
			     , A.APPL_IN_SABUN AS applInSabun
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
				 , CONCAT(A.ENTER_CD, '@', A.APPL_CD, '@', A.APPL_ID, '@', #{typeCd}, '@', A.APPL_SABUN, '@WTM') AS applKey
                 , CASE WHEN A.APPL_CD = 'OT' THEN 'view://W02View' 
                		WHEN A.APPL_CD = 'ENTRY_CHG' THEN 'view://W04View' 
                		WHEN A.APPL_CD = 'COMP' THEN 'view://W04View'
                		WHEN A.APPL_CD = 'COMP_CAN' THEN 'view://W04View'
                        WHEN A.APPL_CD = 'ANNUAL' THEN 'view://W10View'
                        WHEN A.APPL_CD = 'ANNUAL_CAN' THEN 'view://W10View'
                        WHEN A.APPL_CD = 'REGA' THEN 'view://W11View'
                        WHEN A.APPL_CD = 'REGA_CAN' THEN 'view://W11View'
             	     ELSE NULL END AS urlLink 
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			  LEFT OUTER JOIN (SELECT * FROM WTM_OT_APPL WHERE SABUN = #{empNo}) O 
			    ON A.APPL_ID = O.APPL_ID 
			  LEFT OUTER JOIN (SELECT * FROM WTM_OT_CAN_APPL WHERE SABUN = #{empNo}) OC 
			    ON A.APPL_ID = OC.APPL_ID 
			  LEFT OUTER JOIN (SELECT * FROM WTM_COMP_APPL WHERE SABUN = #{empNo}) CA 
			    ON A.APPL_ID = CA.APPL_ID
			  LEFT OUTER JOIN (SELECT * FROM WTM_TAA_APPL WHERE SABUN = #{empNo}) TA
			    ON A.APPL_ID = TA.APPL_ID
        	  LEFT OUTER JOIN WTM_TAA_CAN_APPL TAC
			    ON A.APPL_ID = TAC.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd} 
			   AND (A.APPL_SABUN = #{empNo} 
			    OR (A.APPL_CD = 'OT' AND O.SABUN = #{empNo})
			    OR (A.APPL_CD = 'OT_CAN' AND OC.SABUN = #{empNo})
			    OR (A.APPL_CD = 'COMP' AND CA.SABUN = #{empNo})
			    OR (A.APPL_CD = 'COMP_CAN' AND CA.SABUN = #{empNo})
                OR (A.APPL_CD IN ('REGA','ANNUAL') AND TA.SABUN = #{empNo})
                OR (A.APPL_CD IN ('REGA_CAN','ANNUAL_CAN') AND A.APPL_SABUN = #{empNo})
			    )
			ORDER BY A.APPL_YMD DESC
			]]>
		   <if test="startPage!=null and !startPage.equals('')">
				LIMIT #{startPage}, #{pageCount}
			</if>
    </select>
    
    <select id="getApprList02" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , C.APPL_NM AS applNm
			     , A.APPL_SABUN AS applSabun
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
			     , A.APPL_YMD AS applYmd
			     , A.APPL_IN_SABUN AS applInSabun
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
			     , L.APPR_SEQ AS apprSeq
			     , L.APPR_SABUN AS apprSabun
			     , L.APPR_DATE AS apprDate
			     , L.APPR_STATUS_CD AS apprStatusCd
			     , L.APPR_TYPE_CD AS apprTypeCd
			     , L.APPR_OPINION AS apprOpinion
				 , CONCAT(A.ENTER_CD, '@', A.APPL_CD, '@', A.APPL_ID, '@', #{typeCd}, '@', A.APPL_SABUN, '@WTM') AS applKey
                 , CASE WHEN A.APPL_CD = 'OT' THEN 'view://W02View' 
                   	    WHEN A.APPL_CD = 'ENTRY_CHG' THEN 'view://W04View' 
                   	    WHEN A.APPL_CD = 'COMP' THEN 'view://W04View'
                   	    WHEN A.APPL_CD = 'COMP_CAN' THEN 'view://W04View'
                        WHEN A.APPL_CD = 'ANNUAL' THEN 'view://W10View'
                        WHEN A.APPL_CD = 'ANNUAL_CAN' THEN 'view://W10View'
                        WHEN A.APPL_CD = 'REGA' THEN 'view://W11View'
                        WHEN A.APPL_CD = 'REGA_CAN' THEN 'view://W11View'
             	     ELSE NULL END AS urlLink
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			  JOIN WTM_APPL_LINE L
			    ON L.APPL_ID = A.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd} 
			   AND APPR_SABUN = #{empNo}
			   AND L.APPR_STATUS_CD = '10'
			   AND A.APPL_STATUS_CD IN ('21','31')
			ORDER BY A.APPL_YMD DESC
			]]>
		   <if test="startPage!=null and !startPage.equals('')">
				LIMIT #{startPage}, #{pageCount}
			</if>
	</select>
    
    <select id="getApprList03" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , C.APPL_NM AS applNm
			     , A.APPL_SABUN AS applSabun
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
			     , A.APPL_YMD AS applYmd
			     , A.APPL_IN_SABUN AS applInSabun
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
			     , L.APPR_SEQ AS apprSeq
			     , L.APPR_SABUN AS apprSabun
			     , L.APPR_DATE AS apprDate
			     , L.APPR_STATUS_CD AS apprStatusCd
			     , L.APPR_TYPE_CD AS apprTypeCd
			     , L.APPR_OPINION AS apprOpinion
				 , CONCAT(A.ENTER_CD, '@', A.APPL_CD, '@', A.APPL_ID, '@', #{typeCd}, '@', A.APPL_SABUN, '@WTM') AS applKey
                 , CASE WHEN A.APPL_CD = 'OT' THEN 'view://W02View'
                   		WHEN A.APPL_CD = 'ENTRY_CHG' THEN 'view://W04View' 
                   		WHEN A.APPL_CD = 'COMP' THEN 'view://W04View'
                   		WHEN A.APPL_CD = 'COMP_CAN' THEN 'view://W04View'
                        WHEN A.APPL_CD IN ('ANNUAL', 'ANNUAL_CAN') THEN 'view://W10View'
                        WHEN A.APPL_CD IN ('REGA', 'REGA_CAN') THEN 'view://W11View'

                     ELSE NULL END AS urlLink
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			  JOIN WTM_APPL_LINE L
			    ON L.APPL_ID = A.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd} 
			   AND APPR_SABUN = #{empNo}
			   AND L.APPR_TYPE_CD <> 1
			   AND L.APPR_DATE IS NOT NULL 
			   AND L.APPR_STATUS_CD IS NOT NULL AND L.APPR_STATUS_CD IN ('20', '30')
			ORDER BY A.APPL_YMD DESC
		]]>
		    <if test="startPage!=null and !startPage.equals('')">
				LIMIT #{startPage}, #{pageCount}
			</if>
    </select>
    
        <select id="getMobileApprList01" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , C.APPL_NM AS applNm
			     , A.APPL_SABUN AS applSabun
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
			     , A.APPL_YMD AS applYmd
			     , A.APPL_IN_SABUN AS applInSabun
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
				 , CONCAT(A.ENTER_CD, '@', A.APPL_CD, '@', A.APPL_ID, '@', #{typeCd}, '@', A.APPL_SABUN, '@WTM') AS applKey
                 , CASE WHEN A.APPL_CD = 'OT' THEN 'view://W02View' 
                		WHEN A.APPL_CD = 'ENTRY_CHG' THEN 'view://W04View'
                		WHEN A.APPL_CD = 'COMP' THEN 'view://W04View'
                		WHEN A.APPL_CD = 'COMP_CAN' THEN 'view://W04View'
                        WHEN A.APPL_CD IN ('ANNUAL', 'ANNUAL_CAN') THEN 'view://W10View'
                        WHEN A.APPL_CD IN ('REGA', 'REGA_CAN') THEN 'view://W11View'
             	     ELSE NULL END AS urlLink 
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.APPL_CD IN ('OT', 'OT_CAN', 'ENTRY_CHG', 'ANNUAL', 'REGA')
 			   AND A.ENTER_CD = #{enterCd} 
			   AND (A.APPL_SABUN = #{empNo}
			    )
			ORDER BY A.APPL_YMD DESC
			]]>
		   <if test="startPage!=null and !startPage.equals('')">
				LIMIT #{startPage}, #{pageCount}
			</if>
    </select>
    
    <select id="getMobileApprList02" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , C.APPL_NM AS applNm
			     , A.APPL_SABUN AS applSabun
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
			     , A.APPL_YMD AS applYmd
			     , A.APPL_IN_SABUN AS applInSabun
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
			     , L.APPR_SEQ AS apprSeq
			     , L.APPR_SABUN AS apprSabun
			     , L.APPR_DATE AS apprDate
			     , L.APPR_STATUS_CD AS apprStatusCd
			     , L.APPR_TYPE_CD AS apprTypeCd
			     , L.APPR_OPINION AS apprOpinion
				 , CONCAT(A.ENTER_CD, '@', A.APPL_CD, '@', A.APPL_ID, '@', #{typeCd}, '@', A.APPL_SABUN, '@WTM') AS applKey
                 , CASE WHEN A.APPL_CD = 'OT' THEN 'view://W02View' 
                   	    WHEN A.APPL_CD = 'ENTRY_CHG' THEN 'view://W04View'
                   	    WHEN A.APPL_CD = 'COMP' THEN 'view://W04View' 
                   	    WHEN A.APPL_CD = 'COMP_CAN' THEN 'view://W04View'
                        WHEN A.APPL_CD IN ('ANNUAL', 'ANNUAL_CAN') THEN 'view://W10View'
                        WHEN A.APPL_CD IN ('REGA', 'REGA_CAN') THEN 'view://W11View'
             	        ELSE NULL END AS urlLink
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			  JOIN WTM_APPL_LINE L
			    ON L.APPL_ID = A.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.APPL_CD IN ('OT', 'ENTRY_CHG','ANNUAL', 'REGA', 'ANNUAL_CAN', 'REGA_CAN')
			   AND A.ENTER_CD = #{enterCd} 
			   AND APPR_SABUN = #{empNo}
			   AND L.APPR_STATUS_CD = '10'
			   AND A.APPL_STATUS_CD IN ('21','31')
			ORDER BY A.APPL_YMD DESC
			]]>
		   <if test="startPage!=null and !startPage.equals('')">
				LIMIT #{startPage}, #{pageCount}
			</if>
	</select>
    
    <select id="getMobileApprList03" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.APPL_ID AS applId
			     , A.APPL_CD AS applCd
			     , C.APPL_NM AS applNm
			     , A.APPL_SABUN AS applSabun
			     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
			     , A.APPL_YMD AS applYmd
			     , A.APPL_IN_SABUN AS applInSabun
			     , A.APPL_STATUS_CD AS applStatusCd
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
			     , L.APPR_SEQ AS apprSeq
			     , L.APPR_SABUN AS apprSabun
			     , L.APPR_DATE AS apprDate
			     , L.APPR_STATUS_CD AS apprStatusCd
			     , L.APPR_TYPE_CD AS apprTypeCd
			     , L.APPR_OPINION AS apprOpinion
				 , CONCAT(A.ENTER_CD, '@', A.APPL_CD, '@', A.APPL_ID, '@', #{typeCd}, '@', A.APPL_SABUN, '@WTM') AS applKey
                 , CASE WHEN A.APPL_CD = 'OT' THEN 'view://W02View'
                   		WHEN A.APPL_CD = 'ENTRY_CHG' THEN 'view://W04View' 
                   		WHEN A.APPL_CD = 'COMP' THEN 'view://W04View'
                   		WHEN A.APPL_CD = 'COMP_CAN' THEN 'view://W04View'
                        WHEN A.APPL_CD IN ('ANNUAL', 'ANNUAL_CAN') THEN 'view://W10View'
                        WHEN A.APPL_CD IN ('REGA', 'REGA_CAN') THEN 'view://W11View'
                     ELSE NULL END AS urlLink
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			  JOIN WTM_APPL_LINE L
			    ON L.APPL_ID = A.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.APPL_CD IN ('OT', 'ENTRY_CHG', 'ANNUAL','REGA', 'ANNUAL_CAN', 'REGA_CAN')
			   AND A.ENTER_CD = #{enterCd} 
			   AND APPR_SABUN = #{empNo}
			   AND L.APPR_DATE IS NOT NULL
			   AND L.APPR_STATUS_CD IS NOT NULL AND L.APPR_STATUS_CD IN ('20', '30')
			ORDER BY A.APPL_YMD DESC
		]]>
		    <if test="startPage!=null and !startPage.equals('')">
				LIMIT #{startPage}, #{pageCount}
			</if>
    </select>
    
    <select id="countByApprList01" parameterType="map" resultType="int">
        <![CDATA[
        	SELECT count(*)
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd} 
			   AND (APPL_SABUN =#{sabun} OR APPL_IN_SABUN = #{sabun}) 
			   AND A.APPL_STATUS_CD IN ('21','31', '41')
			ORDER BY A.APPL_YMD DESC
		]]>
    </select>
    
    <select id="countByApprList02" parameterType="map" resultType="int">
        <![CDATA[
        	SELECT count(*)
			  FROM WTM_APPL A
			  JOIN WTM_APPL_CODE C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.APPL_CD = C.APPL_CD
			  JOIN WTM_APPL_LINE L
			    ON L.APPL_ID = A.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd} 
			   AND APPR_SABUN = #{sabun}
			   AND L.APPR_STATUS_CD = '10'
			   AND A.APPL_STATUS_CD IN ('21','31')
			ORDER BY A.APPL_YMD DESC
		]]>
    </select>
  
    <select id="getEdocCountForMobile" parameterType="map" resultType="map">
        <![CDATA[
			SELECT CONCAT('', A.myRequestCnt) as myRequestCnt, CONCAT('', B.requestCnt) as requestCnt, CONCAT('', myRequestcnt+requestCnt) as totRequestCnt 
			FROM (
			   	SELECT count(*) myRequestCnt
				  FROM WTM_APPL A
				  JOIN WTM_APPL_CODE C
				    ON A.TENANT_ID = C.TENANT_ID
				   AND A.ENTER_CD = C.ENTER_CD
				   AND A.APPL_CD = C.APPL_CD
				 WHERE A.TENANT_ID = #{tenantId}
				   AND A.ENTER_CD = #{enterCd} 
				   AND A.APPL_CD IN ('OT', 'ENTRY_CHG', 'ANNUAL', 'ANNUAL_CAN', 'REGA', 'REGA_CAN')
				   AND (APPL_SABUN = #{sabun} OR APPL_IN_SABUN = #{sabun})
				   AND A.APPL_STATUS_CD IN ('21','31', '41')
			) A
			inner join ( SELECT count(*) as requestCnt
				  FROM WTM_APPL A
				  JOIN WTM_APPL_CODE C
				    ON A.TENANT_ID = C.TENANT_ID
				   AND A.ENTER_CD = C.ENTER_CD
				   AND A.APPL_CD = C.APPL_CD
				  JOIN WTM_APPL_LINE L
				    ON L.APPL_ID = A.APPL_ID
				 WHERE A.TENANT_ID = #{tenantId}
				   AND A.ENTER_CD = #{enterCd} 
				   AND APPR_SABUN = #{sabun}
				   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_CD IN ('OT', 'ENTRY_CHG', 'ANNUAL', 'ANNUAL_CAN', 'REGA', 'REGA_CAN')
				   AND A.APPL_STATUS_CD IN ('21','31')) B
			ON 1=1
		]]>
    </select>
    
    <select id="getApplValidation" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT 
				CASE WHEN #{applCd} = 'ENTRY_CHG' AND X.ENTRY_LIMIT IS NOT NULL AND (REPLACE(#{ymd} ,'.','') < F_WTM_DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -(X.ENTRY_LIMIT - 1) DAY), 'YMD') OR (REPLACE(#{ymd} ,'.','') > F_WTM_DATE_FORMAT(NOW(), 'YMD'))) THEN 'N'
					ELSE 'Y' END AS entryYn,
				CASE WHEN #{applCd} = 'ENTRY_CHG' AND X.ENTRY_LIMIT IS NOT NULL THEN CONCAT(F_WTM_DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -(X.ENTRY_LIMIT -1) DAY), 'Y-M-D'), '~', F_WTM_DATE_FORMAT(NOW(), 'Y-M-D')) END AS entryDate,
				CASE WHEN X.YMD <= F_WTM_DATE_FORMAT(NOW(), 'YMD') AND X.SDAY IS NULL THEN 'Y'
						WHEN X.YMD <= F_WTM_DATE_FORMAT(NOW(), 'YMD') AND X.SDAY = '0' THEN 'N'
						WHEN X.YMD <= F_WTM_DATE_FORMAT(NOW(), 'YMD') AND X.YMD >= X.SDAY THEN 'Y' 
						WHEN X.YMD > F_WTM_DATE_FORMAT(NOW(), 'YMD') AND X.EDAY = '0' THEN 'N' 
						WHEN X.YMD > F_WTM_DATE_FORMAT(NOW(), 'YMD') AND X.YMD <= X.EDAY THEN 'Y' 
						ELSE 'N'
						END AS valDate,
				CASE WHEN X.SDAY IS NULL AND X.EDAY IS NULL THEN '1999-01-01 ~ 2999-12-31' 
				    WHEN X.SDAY = '0' AND X.EDAY = '0' THEN F_WTM_DATE_FORMAT(NOW(), 'YMD') 
 					WHEN X.SDAY = '0' AND X.EDAY != '0' THEN CONCAT(F_WTM_DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 1 DAY), 'Y-M-D'), ' ~ ', F_WTM_DATE_FORMAT(X.EDAY, 'Y-M-D'))
					WHEN X.SDAY != '0' AND X.EDAY = '0' THEN CONCAT(F_WTM_DATE_FORMAT(X.SDAY, 'Y-M-D'), '~')
					ELSE CONCAT(F_WTM_DATE_FORMAT(X.SDAY, 'Y-M-D'), ' ~ ', F_WTM_DATE_FORMAT(X.EDAY, 'Y-M-D')) END AS pDate,
				CASE WHEN X.HOLIDAY_YN = 'Y' AND X.HOL_IN_SHM = '' AND X.HOL_IN_EHM = '' THEN 'Y'
					WHEN X.HOLIDAY_YN = 'Y' AND REPLACE(#{shm},':','') != '' AND REPLACE(#{ehm},':','') != '' AND (REPLACE(#{shm},':','') < X.HOL_IN_SHM OR REPLACE(#{ehm},':','') > X.HOL_IN_EHM) THEN 'N' 
					WHEN X.HOLIDAY_YN = 'N' AND  X.IN_SHM = '' AND X.IN_EHM = '' THEN 'Y' 
					WHEN X.HOLIDAY_YN = 'N' AND REPLACE(#{shm},':','') != '' AND REPLACE(#{ehm},':','') != '' AND (REPLACE(#{shm},':','') < X.IN_SHM OR REPLACE(#{ehm},':','') > X.IN_EHM) THEN 'N'
					ELSE 'Y' END AS valTime,
				CASE WHEN X.HOLIDAY_YN = 'Y' THEN CONCAT(LEFT(X.HOL_IN_SHM, 2), ':', RIGHT(X.HOL_IN_SHM, 2), ' ~ ', LEFT(X.HOL_IN_EHM, 2), ':', RIGHT(X.HOL_IN_EHM, 2)) 
					ELSE CONCAT(LEFT(X.IN_SHM, 2), ':', RIGHT(X.IN_SHM, 2), ' ~ ', LEFT(X.IN_EHM, 2), ':', RIGHT(X.IN_EHM, 2)) END AS pTime,
				CASE WHEN REPLACE(#{ehm},':','') = '' OR REPLACE(#{shm},':','') = '' OR REPLACE(#{ehm},':','')  IS NULL OR REPLACE(#{shm},':','') IS NULL THEN 'Y' 
					WHEN X.HOLIDAY_YN = 'N' AND #{calcMinute} % X.TIME_UNIT = 0 THEN 'Y' 
					WHEN X.HOLIDAY_YN = 'Y' AND #{calcMinute} % X.HOL_APPL_TYPE_CD = 0 THEN 'Y'
					ELSE 'N' END AS valUnit,
				CASE WHEN X.HOLIDAY_YN = 'Y' THEN X.HOL_APPL_TYPE_CD ELSE X.TIME_UNIT END AS pUnit,
				CASE WHEN REPLACE(#{ehm},':','') = '' OR REPLACE(#{shm},':','') = '' THEN 'Y' 
					WHEN X.HOLIDAY_YN = 'N' THEN 'Y'
					WHEN X.HOLIDAY_YN = 'Y' AND  #{calcMinute} <= HOL_MAX_MINUTE THEN 'Y'
					ELSE 'N' END AS valHunit,
				X.HOL_MAX_MINUTE AS pHunit,
				CASE WHEN #{subYn} = 'Y' AND REPLACE(#{subsSymd},'.','') < F_WTM_DATE_FORMAT(X.SSDAY, 'YMD') OR REPLACE(#{subsSymd},'.','') > F_WTM_DATE_FORMAT(X.SEDAY, 'YMD') THEN 'N' ELSE 'Y' END AS valSdate,
				CONCAT(STR_TO_DATE(X.SSDAY, '%Y-%m-%d'), ' ~ ', STR_TO_DATE(X.SEDAY, '%Y-%m-%d')) AS pSdate
			FROM (SELECT C.HOLIDAY_YN, 
				C.YMD, 
				F_WTM_DATE_FORMAT(NOW(), 'YMD'),
				A.SUBS_SDAY,
				A.SUBS_EDAY,
				A.IN_SHM,
				A.IN_EHM,
				A.HOL_IN_SHM,
				A.HOL_IN_EHM,
				A.TIME_UNIT,
				A.HOL_APPL_TYPE_CD,
				A.HOL_MAX_MINUTE,
				A.ENTRY_LIMIT,
				CASE
					WHEN A.OT_APPL_SDAY = '0' THEN '0'
					WHEN A.OT_APPL_SDAY = '1' THEN F_WTM_DATE_FORMAT(NOW(), 'YMD')
					ELSE F_WTM_DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -(A.OT_APPL_SDAY-1) DAY), 'YMD') END AS SDAY,
				CASE 
					WHEN A.OT_APPL_EDAY = '0' THEN '0'
					ELSE F_WTM_DATE_FORMAT(DATE_ADD(NOW(), INTERVAL A.OT_APPL_EDAY DAY), 'YMD') END AS EDAY,
				CASE WHEN A.SUBS_SDAY IS NOT NULL THEN DATE_ADD(STR_TO_DATE(C.YMD, '%Y%m%d'), INTERVAL -A.SUBS_SDAY DAY) ELSE F_WTM_DATE_FORMAT(STR_TO_DATE(C.YMD, '%Y%m%d'), 'YMD') END AS SSDAY,
				CASE WHEN A.SUBS_EDAY IS NOT NULL THEN DATE_ADD(STR_TO_DATE(C.YMD, '%Y%m%d'), INTERVAL A.SUBS_EDAY DAY) ELSE F_WTM_DATE_FORMAT(STR_TO_DATE(C.YMD, '%Y%m%d'), 'YMD') END AS SEDAY
			FROM WTM_WORK_CALENDAR C
			JOIN WTM_APPL_CODE A 
				ON A.TENANT_ID = C.TENANT_ID 
				AND C.ENTER_CD=A.ENTER_CD 
				AND A.APPL_CD=#{applCd}
			WHERE C.TENANT_ID=#{tenantId}
				AND C.ENTER_CD=#{enterCd}
				AND C.SABUN=#{sabun}
				AND C.YMD=REPLACE(#{ymd} ,'.','') ) X
		]]>
    </select>
    
    <select id="getRecLine" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT L.SABUN AS sabun
				 , EMP_NM AS empNm
				 , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS orgNm
				 , EMP_ID AS empId
				 , APPL_REC_LINE_ID AS applRecLineId
				 , APPL_CODE_ID AS applCodeId
				 , SEQ AS seq
				 , L.NOTE AS note
			  FROM WTM_APPL_REC_LINE L
			  JOIN WTM_EMP_HIS H
			    ON L.SABUN = H.SABUN
			   AND #{d} BETWEEN H.SYMD AND H.EYMD
			 WHERE H.TENANT_ID = ${tenantId}
			   AND H.ENTER_CD = #{enterCd}
			   AND L.APPL_CODE_ID = ${applCodeId}
		]]>
    </select>


    <select id="getApprovalApplList01" parameterType="map" resultType="hashmap">
        SELECT T.applId
             , T.applCd
             , T.applSabun
             , T.applNm
             , T.empNm
             , T.applYmd
             , T.applInSabun
             , T.applStatusCd
             , T.applStatusNm
             , T.ymd
             , T.symd
             , T.eymd
             , T.reason
             , F_WTM_GET_ORG_NM(T2.TENANT_ID, T2.ENTER_CD, T2.ORG_CD, DATE_FORMAT(NOW(), '%Y%m%d')) AS orgNm
             , 0 AS applDetail
             , CONCAT(T.enterCd, '@', T.applCd, '@', T.applId, '@', '01', '@', T.applSabun, '@WTM') AS applKey
          FROM
                (SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , B.YMD AS symd
                     , B.YMD AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_ENTRY_APPL B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_SABUN = #{empNo}
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.OT_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.OT_EDATE,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN (SELECT DISTINCT  APPL_ID, OT_SDATE, OT_EDATE, REASON FROM WTM_OT_APPL ) B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_SABUN = #{empNo}
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.PLAN_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.PLAN_EDATE,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN (SELECT APPL_ID, MIN(PLAN_SDATE) AS PLAN_SDATE, MAX(PLAN_EDATE) AS PLAN_EDATE,  REASON FROM WTM_OT_CAN_APPL GROUP BY APPL_ID, REASON) B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_SABUN = #{empNo}
                 UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , C.SYMD AS symd
                     , C.EYMD AS eymd
                     , C.NOTE AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_TAA_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_TAA_APPL_DET C
                               ON B.TAA_APPL_ID = C.TAA_APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_SABUN = #{empNo}
                   AND A.APPL_CD IN ('REGA', 'ANNUAL')
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.SUBS_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.SUBS_EDATE,'YMD') AS eymd
                     , C.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_OT_SUBS_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_OT_APPL C
                               ON B.OT_APPL_ID = C.OT_APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_SABUN = #{empNo}
                   AND A.APPL_CD = 'SUBS_CHG'
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.SYMD,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.EYMD,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_FLEXIBLE_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                  WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_SABUN = #{empNo}
                ) T LEFT OUTER JOIN WTM_EMP_HIS T2
                                 ON T.tenantId = T2.TENANT_ID
                                AND T.enterCd = T2.ENTER_CD
                                AND T.applSabun = T2.SABUN
                                AND F_WTM_DATE_FORMAT(NOW(),'YMD') BETWEEN T2.SYMD AND T2.EYMD
    WHERE 1=1
        <if test="sYmd != null and !sYmd.equals('')">
            <![CDATA[
        AND T.applYmd >= #{sYmd}
        ]]>
        </if>
        <if test="eYmd != null and !eYmd.equals('')">
            <![CDATA[
        AND T.applYmd <= #{eYmd}
        ]]>
        </if>
        <if test="searchKeyword!=null and !searchKeyword.equals('')">
            AND T.applSabun LIKE CONCAT('%', #{searchKeyword}, '%') OR T2.EMP_NM LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
    GROUP BY T.applId
    ORDER BY T.ymd DESC, T.applId DESC
    </select>


    <select id="getApprovalApplList02" parameterType="map" resultType="hashmap">
        <![CDATA[
        SELECT T.applId
             , T.applCd
             , T.applSabun
             , T.applNm
             , T.empNm
             , T.applYmd
             , T.applInSabun
             , T.applStatusCd
             , T.applStatusNm
             , T.ymd
             , T.symd
             , T.eymd
             , T.reason
             , F_WTM_GET_ORG_NM(T2.TENANT_ID, T2.ENTER_CD, T2.ORG_CD, DATE_FORMAT(NOW(), '%Y%m%d')) AS orgNm
             , 0 AS applDetail
             , T.apprSeq
             , T.apprSabun
             , T.apprDate
             , T.apprStatusCd
             , T.apprTypeCd
             , T.apprOpinion
             , CONCAT(T.enterCd, '@', T.applCd, '@', T.applId, '@', '02', '@', T.applSabun, '@WTM') AS applKey
             ,CONCAT('<a class="button">승인</a>') AS applyImg
             ,CONCAT('<a class="basic">반려</a>') AS cancelImg
        ]]>
          FROM
                (SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , B.YMD AS symd
                     , B.YMD AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                     , L.APPR_SEQ AS apprSeq
                     , L.APPR_SABUN AS apprSabun
                     , L.APPR_DATE AS apprDate
                     , L.APPR_STATUS_CD AS apprStatusCd
                     , L.APPR_TYPE_CD AS apprTypeCd
                     , L.APPR_OPINION AS apprOpinion
                  FROM WTM_APPL A
                       INNER JOIN WTM_ENTRY_APPL B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                       INNER JOIN WTM_APPL_LINE L
                               ON A.APPL_ID = L.APPL_ID
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND L.APPR_SABUN = #{empNo}
                   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_STATUS_CD IN ('21','31')
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.OT_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.OT_EDATE,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                     , L.APPR_SEQ AS apprSeq
                     , L.APPR_SABUN AS apprSabun
                     , L.APPR_DATE AS apprDate
                     , L.APPR_STATUS_CD AS apprStatusCd
                     , L.APPR_TYPE_CD AS apprTypeCd
                     , L.APPR_OPINION AS apprOpinion
                  FROM WTM_APPL A
                       INNER JOIN (SELECT DISTINCT  APPL_ID, OT_SDATE, OT_EDATE, REASON FROM WTM_OT_APPL ) B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                       INNER JOIN WTM_APPL_LINE L
                               ON A.APPL_ID = L.APPL_ID
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND L.APPR_SABUN = #{empNo}
                   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_STATUS_CD IN ('21','31')
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.PLAN_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.PLAN_EDATE,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                     , L.APPR_SEQ AS apprSeq
                     , L.APPR_SABUN AS apprSabun
                     , L.APPR_DATE AS apprDate
                     , L.APPR_STATUS_CD AS apprStatusCd
                     , L.APPR_TYPE_CD AS apprTypeCd
                     , L.APPR_OPINION AS apprOpinion
                  FROM WTM_APPL A
                       INNER JOIN (SELECT APPL_ID, MIN(PLAN_SDATE) AS PLAN_SDATE, MAX(PLAN_EDATE) AS PLAN_EDATE,  REASON FROM WTM_OT_CAN_APPL GROUP BY APPL_ID, REASON) B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                       INNER JOIN WTM_APPL_LINE L
                               ON A.APPL_ID = L.APPL_ID
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND L.APPR_SABUN = #{empNo}
                   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_STATUS_CD IN ('21','31')
                 UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , C.SYMD AS symd
                     , C.EYMD AS eymd
                     , C.NOTE AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                     , L.APPR_SEQ AS apprSeq
                     , L.APPR_SABUN AS apprSabun
                     , L.APPR_DATE AS apprDate
                     , L.APPR_STATUS_CD AS apprStatusCd
                     , L.APPR_TYPE_CD AS apprTypeCd
                     , L.APPR_OPINION AS apprOpinion
                  FROM WTM_APPL A
                       INNER JOIN WTM_TAA_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_TAA_APPL_DET C
                               ON B.TAA_APPL_ID = C.TAA_APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                       INNER JOIN WTM_APPL_LINE L
                               ON A.APPL_ID = L.APPL_ID
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND L.APPR_SABUN = #{empNo}
                   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_STATUS_CD IN ('21','31')
                   AND A.APPL_CD IN ('REGA', 'ANNUAL')
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.SUBS_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.SUBS_EDATE,'YMD') AS eymd
                     , C.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                     , L.APPR_SEQ AS apprSeq
                     , L.APPR_SABUN AS apprSabun
                     , L.APPR_DATE AS apprDate
                     , L.APPR_STATUS_CD AS apprStatusCd
                     , L.APPR_TYPE_CD AS apprTypeCd
                     , L.APPR_OPINION AS apprOpinion
                  FROM WTM_APPL A
                       INNER JOIN WTM_OT_SUBS_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_OT_APPL C
                               ON B.OT_APPL_ID = C.OT_APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                       INNER JOIN WTM_APPL_LINE L
                               ON A.APPL_ID = L.APPL_ID
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND L.APPR_SABUN = #{empNo}
                   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_STATUS_CD IN ('21','31')
                   AND A.APPL_CD = 'SUBS_CHG'
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.SYMD,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.EYMD,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                     , L.APPR_SEQ AS apprSeq
                     , L.APPR_SABUN AS apprSabun
                     , L.APPR_DATE AS apprDate
                     , L.APPR_STATUS_CD AS apprStatusCd
                     , L.APPR_TYPE_CD AS apprTypeCd
                     , L.APPR_OPINION AS apprOpinion
                  FROM WTM_APPL A
                       INNER JOIN WTM_FLEXIBLE_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                       INNER JOIN WTM_APPL_LINE L
                               ON A.APPL_ID = L.APPL_ID
                  WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND L.APPR_SABUN = #{empNo}
                   AND L.APPR_STATUS_CD = '10'
                   AND A.APPL_STATUS_CD IN ('21','31')
                ) T LEFT OUTER JOIN WTM_EMP_HIS T2
                                 ON T.tenantId = T2.TENANT_ID
                                AND T.enterCd = T2.ENTER_CD
                                AND T.applSabun = T2.SABUN
                                AND F_WTM_DATE_FORMAT(NOW(),'YMD') BETWEEN T2.SYMD AND T2.EYMD
    WHERE 1=1
        <if test="sYmd != null and !sYmd.equals('')">
            <![CDATA[
        AND T.applYmd >= #{sYmd}
        ]]>
        </if>
        <if test="eYmd != null and !eYmd.equals('')">
            <![CDATA[
        AND T.applYmd <= #{eYmd}
        ]]>
        </if>
        <if test="searchKeyword!=null and !searchKeyword.equals('')">
            AND T.applSabun LIKE CONCAT('%', #{searchKeyword}, '%') OR T2.EMP_NM LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
    GROUP BY T.applId
    ORDER BY T.ymd DESC, T.applId DESC
    </select>

    <select id="getApprovalApplList03" parameterType="map" resultType="hashmap">
        <![CDATA[
        SELECT T.applId
             , T.applCd
             , T.applSabun
             , T.applNm
             , T.empNm
             , T.applYmd
             , T.applInSabun
             , T.applStatusCd
             , T.applStatusNm
             , T.ymd
             , T.symd
             , T.eymd
             , T.reason
             , F_WTM_GET_ORG_NM(T2.TENANT_ID, T2.ENTER_CD, T2.ORG_CD, DATE_FORMAT(NOW(), '%Y%m%d')) AS orgNm
             , 0 AS applDetail
             , CONCAT(T.enterCd, '@', T.applCd, '@', T.applId, '@', '01', '@', T.applSabun, '@WTM') AS applKey
          FROM
                (SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , B.YMD AS symd
                     , B.YMD AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_ENTRY_APPL B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.OT_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.OT_EDATE,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN (SELECT DISTINCT  APPL_ID, OT_SDATE, OT_EDATE, REASON FROM WTM_OT_APPL ) B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.PLAN_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.PLAN_EDATE,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN (SELECT APPL_ID, MIN(PLAN_SDATE) AS PLAN_SDATE, MAX(PLAN_EDATE) AS PLAN_EDATE,  REASON FROM WTM_OT_CAN_APPL GROUP BY APPL_ID, REASON) B
                                    ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                 UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , C.SYMD AS symd
                     , C.EYMD AS eymd
                     , C.NOTE AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_TAA_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_TAA_APPL_DET C
                               ON B.TAA_APPL_ID = C.TAA_APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_CD IN ('REGA', 'ANNUAL')
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.SUBS_SDATE,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.SUBS_EDATE,'YMD') AS eymd
                     , C.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_OT_SUBS_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_OT_APPL C
                               ON B.OT_APPL_ID = C.OT_APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                 WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                   AND A.APPL_CD = 'SUBS_CHG'
                UNION ALL
                SELECT A.APPL_ID AS applId
                     , A.APPL_CD AS applCd
                     , A.APPL_SABUN AS applSabun
                     , Z.APPL_NM AS applNm
                     , F_WTM_GET_EMP_NM(A.TENANT_ID, A.ENTER_CD, A.APPL_SABUN, A.APPL_YMD ) AS empNm
                     , A.APPL_YMD AS applYmd
                     , A.APPL_IN_SABUN AS applInSabun
                     , A.APPL_STATUS_CD AS applStatusCd
                     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS applStatusNm
                     , A.APPL_YMD AS ymd
                     , F_WTM_DATE_FORMAT(B.SYMD,'YMD') AS symd
                     , F_WTM_DATE_FORMAT(B.EYMD,'YMD') AS eymd
                     , B.REASON AS reason
                     , A.TENANT_ID AS tenantId
                     , A.ENTER_CD AS enterCd
                  FROM WTM_APPL A
                       INNER JOIN WTM_FLEXIBLE_APPL B
                               ON A.APPL_ID = B.APPL_ID
                       INNER JOIN WTM_APPL_CODE Z
                               ON A.TENANT_ID = Z.TENANT_ID
                              AND A.ENTER_CD = Z.ENTER_CD
                              AND A.APPL_CD = Z.APPL_CD
                  WHERE A.TENANT_ID = #{tenantId}
                   AND A.ENTER_CD = #{enterCd}
                ) T LEFT OUTER JOIN WTM_EMP_HIS T2
                                 ON T.tenantId = T2.TENANT_ID
                                AND T.enterCd = T2.ENTER_CD
                                AND T.applSabun = T2.SABUN
                                AND F_WTM_DATE_FORMAT(NOW(),'YMD') BETWEEN T2.SYMD AND T2.EYMD
                    INNER JOIN WTM_APPL_LINE L
                            ON T.applId = L.APPL_ID
    WHERE L.APPR_SABUN = #{empNo}
      AND L.APPR_TYPE_CD <> 1
      AND L.APPR_DATE IS NOT NULL
      AND L.APPR_STATUS_CD IS NOT NULL
      AND L.APPR_STATUS_CD IN ('20', '30')
    ]]>
        <if test="sYmd != null and !sYmd.equals('')">
        <![CDATA[
        AND T.applYmd >= #{sYmd}
        ]]>
        </if>
        <if test="eYmd != null and !eYmd.equals('')">
        <![CDATA[
        AND T.applYmd <= #{eYmd}
        ]]>
        </if>
        <if test="searchKeyword!=null and !searchKeyword.equals('')">
        AND T.applSabun LIKE CONCAT('%', #{searchKeyword}, '%') OR T2.EMP_NM LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
    GROUP BY T.applId
    ORDER BY T.ymd DESC, T.applId DESC
    </select>

</mapper>
