<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmHolidayMapper">
	<!--
   		공휴일 조회
     -->
	<select id="getHolidayList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT H.TENANT_ID AS tenantId
			     , H.ENTER_CD AS enterCd
			     , H.BISINESS_PLACE_CD AS bisinessPlaceCd
			     , H.HOLIDAY_YMD AS holidayYmd
			     , H.HOLIDAY_NM AS holidayNm
			     , H.SUN_YN AS sunYn
			     , H.FESTIVE_YN AS festiveYn
			     , H.PAY_YN AS payYn
			     , H.NOTE as note
			  FROM WTM_HOLIDAY_MGR H
			  WHERE H.TENANT_ID = ${tenantId}
			    AND H.ENTER_CD = #{enterCd}
			    AND H.HOLIDAY_YMD BETWEEN #{symd} AND #{eymd}
			 ORDER BY H.BISINESS_PLACE_CD, H.HOLIDAY_YMD
        ]]>
    </select>
    
    <update id="deleteHolidays" parameterType="map" >
       <if test="deleteList!=null">
          DELETE FROM WTM_HOLIDAY_MGR 
          WHERE (TENANT_ID, ENTER_CD, BISINESS_PLACE_CD, HOLIDAY_YMD) IN (
	       <foreach collection="deleteList" item="m" separator=", ">
			  (${tenantId}, #{enterCd}, #{m.bisinessPlaceCd}, #{m.holidayYmd})
		   </foreach>
		   )
	   </if>
    </update>
    
    <update id="insertHolidays" parameterType="map" >
       <if test="insertList!=null">
		    INSERT INTO WTM_HOLIDAY_MGR(TENANT_ID, ENTER_CD, BISINESS_PLACE_CD, HOLIDAY_YMD, HOLIDAY_NM, SUN_YN, FESTIVE_YN, PAY_YN, NOTE) 
	       <foreach collection="insertList" item="m" separator="UNION">
		    SELECT ${tenantId}, #{enterCd}, #{m.bisinessPlaceCd}, #{m.holidayYmd}, #{m.holidayNm}, #{m.sunYn}, #{m.festiveYn}, #{m.payYn}, #{m.note}
		      FROM DUAL
		   </foreach>
	   </if>
    </update>
    
    <update id="updateHolidays" parameterType="map" >
       <if test="updateList!=null">
		    UPDATE WTM_HOLIDAY_MGR M
		      JOIN ( 
		       <foreach collection="updateList" item="m" separator="UNION">
			    SELECT ${tenantId} AS TENANT_ID
			         , #{enterCd} AS ENTER_CD
			         , #{m.bisinessPlaceCd} AS BISINESS_PLACE_CD
			         , #{m.holidayYmd} AS HOLIDAY_YMD
			         , #{m.holidayNm} AS HOLIDAY_NM
			         , #{m.sunYn} AS SUN_YN
			         , #{m.festiveYn} AS FESTIVE_YN
			         , #{m.payYn} AS PAY_YN
			         , #{m.note} AS NOTE
			      FROM DUAL
			   </foreach>
			   ) T
			   ON M.TENANT_ID = T.TENANT_ID
			  AND M.ENTER_CD = T.ENTER_CD
			  AND M.BISINESS_PLACE_CD = T.BISINESS_PLACE_CD
			  AND M.HOLIDAY_YMD = T.HOLIDAY_YMD
			  SET M.HOLIDAY_NM = T.HOLIDAY_NM
			    , M.NOTE = T.NOTE
	   </if>
    </update>
    
    <select id="getWorkPlan" parameterType="map" resultType="hashmap">
		SELECT C.YMD AS ymd
			 , C.SABUN AS sabun
			 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS orgNm
			 , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS empNm
			 , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS flexibleNm
			 , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHIS') AS entrySdate
			 , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHIS') AS entryEdate
			 , C.TIME_CD_MGR_ID AS timeCdMgrId
			 , R.TIME_TYPE_CD AS timeTypeCd
			 , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHIS') AS planSdate
			 , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHIS') AS planEdate
			 , CONCAT(FLOOR(R.PLAN_MINUTE/60),':',LPAD(MOD(R.PLAN_MINUTE,60),2,'0')) AS planMinute
			 , E.WORK_TYPE_CD AS workTypeCd
		  FROM WTM_FLEXIBLE_EMP E
		  JOIN WTM_WORK_CALENDAR C
		    ON E.TENANT_ID = C.TENANT_ID
		   AND E.ENTER_CD = C.ENTER_CD
		   AND E.SABUN = C.SABUN
		   AND C.YMD BETWEEN E.SYMD AND E.EYMD
		  LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			ON C.TENANT_ID = R.TENANT_ID
		   AND C.ENTER_CD = R.ENTER_CD
		   AND C.SABUN = R.SABUN
		   AND C.YMD = R.YMD
		 WHERE E.TENANT_ID = ${tenantId}
		   AND E.ENTER_CD = #{enterCd}
		   AND C.YMD IN ( NULL
		<if test="updateList!=null">
			<foreach collection="updateList" item="holidayYmd" >
				, #{holidayYmd}
			</foreach>
		</if>
		)
		
		   AND E.WORK_TYPE_CD NOT IN ('ELAS')
		 ORDER BY ymd desc, sabun, planSdate
	</select>
	
	<select id="getTimeCdMgrId" parameterType="hashmap" resultType="hashmap">
		SELECT P.TIME_CD_MGR_ID
		  FROM WTM_FLEXIBLE_EMP A
		  JOIN WTM_FLEXIBLE_STD_MGR B
			ON A.ENTER_CD = B.ENTER_CD
		   AND A.TENANT_ID = B.TENANT_ID
		   AND A.FLEXIBLE_STD_MGR_ID = B.FLEXIBLE_STD_MGR_ID    
		  JOIN WTM_WORK_PATT_DET P
			ON P.FLEXIBLE_STD_MGR_ID = B.FLEXIBLE_STD_MGR_ID
		  JOIN WTM_TIME_CD_MGR T
			ON P.TIME_CD_MGR_ID = T.TIME_CD_MGR_ID   
		 WHERE A.TENANT_ID = ${tenantId}
		   AND A.ENTER_CD = #{enterCd}
		   AND #{holidayYmd} between A.SYMD AND A.EYMD
		   AND T.HOL_YN = 'N'
		 GROUP BY TIME_CD_MGR_ID  
	</select>
	
	<update id="deleteWorkCalendar" parameterType="map">
		UPDATE WTM_WORK_CALENDAR
		   SET ENTRY_SDATE = NULL
			 , ENTRY_STYPE_CD = NULL
			 , ENTRY_EDATE = NULL
			 , ENTRY_ETYPE_CD = NULL
			 , HOLIDAY_YN = 'N'
			 , TIME_CD_MGR_ID  = #{timeCdMgrId}
		 WHERE TENANT_ID = #{tenantId}
		   AND ENTER_CD = #{enterCd}
		   AND YMD IN ( NULL
		<if test="deleteList!=null">
			<foreach collection="deleteList" item="holidayYmd" >
				, #{holidayYmd.holidayYmd}
			</foreach>
		</if>
		)
		   AND HOLIDAY_YN = 'Y'
	</update>
	
	<update id="insertWorkResult" parameterType="map" >
       <if test="insertList!=null">
		    INSERT INTO WTM_WORK_RESULT(TENANT_ID, ENTER_CD, BISINESS_PLACE_CD, HOLIDAY_YMD, HOLIDAY_NM, SUN_YN, FESTIVE_YN, PAY_YN, NOTE) 
	       <foreach collection="insertList" item="m" separator="UNION">
		    SELECT ${tenantId}, #{enterCd}, #{m.bisinessPlaceCd}, #{m.holidayYmd}, #{m.holidayNm}, #{m.sunYn}, #{m.festiveYn}, #{m.payYn}, #{m.note}
		      FROM DUAL
		   </foreach>
	   </if>
    </update>
    
</mapper>
