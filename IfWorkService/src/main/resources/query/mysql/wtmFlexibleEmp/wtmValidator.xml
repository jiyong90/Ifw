<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmValidatorMapper">
	
  	<select id="checkDuplicateTaa" parameterType="map" resultType="map">
  		<![CDATA[ 
			SELECT COUNT(*) AS cnt FROM (
				SELECT R.*
				  FROM WTM_FLEXIBLE_EMP E
				  JOIN WTM_WORK_CALENDAR C
				    ON E.TENANT_ID = C.TENANT_ID
				   AND E.ENTER_CD = C.ENTER_CD
				   AND E.SABUN = C.SABUN
				   AND C.YMD BETWEEN E.SYMD AND E.EYMD
				  JOIN WTM_WORK_DAY_RESULT R
				    ON C.TENANT_ID = R.TENANT_ID
				   AND C.ENTER_CD = R.ENTER_CD
				   AND C.YMD = R.YMD
				   AND C.SABUN = R.SABUN 
				  JOIN WTM_TAA_CODE T
				    ON E.TENANT_ID = T.TENANT_ID
				   AND E.ENTER_CD = T.ENTER_CD
				   AND R.TAA_CD = T.TAA_CD
				 WHERE E.TENANT_ID = ${tenantId}
				   AND E.ENTER_CD = ${enterCd}
				   AND E.SABUN = ${sabun}
				   AND R.TIME_TYPE_CD = ${timeTypeCd}
				   AND T.REQUEST_TYPE_CD = ${requestTypeCd}
				   AND C.YMD BETWEEN ${symd} AND ${eymd}
				   -- AND ((F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_SDATE, R.PLAN_SDATE),'YMDHI') >= #{sdate} AND F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_SDATE, R.PLAN_SDATE),'YMDHI') < #{edate} ) OR ( F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_EDATE, R.PLAN_EDATE),'YMDHI') > #{sdate} AND  F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_EDATE, R.PLAN_EDATE),'YMDHI') <= #{edate} ))
				 UNION ALL
				SELECT O.*
				  FROM WTM_APPL A
				  JOIN WTM_TAA_APPL O
				    ON A.APPL_ID = O.APPL_ID
				 WHERE A.TENANT_ID = ${tenantId}
				   AND A.ENTER_CD = ${enterCd}
				   AND A.APPL_IN_SABUN = ${sabun}
				   AND (A.APPL_ID <> #{applId} OR #{applId} IS NULL OR #{applId} = '')
				   AND A.APPL_STATUS_CD IN ('21','31')
				   -- AND ((F_WTM_DATE_FORMAT(O.OT_SDATE,'YMDHI') >= #{sdate} AND F_WTM_DATE_FORMAT(O.OT_SDATE,'YMDHI') < #{edate}) OR (F_WTM_DATE_FORMAT(O.OT_EDATE,'YMDHI') > #{sdate} AND F_WTM_DATE_FORMAT(O.OT_EDATE,'YMDHI') <= #{edate}))
				) X
		]]>	
  	</select>
  	<select id="checkDuplicateTaaByTaaTypeH" parameterType="map" resultType="map">
  		<![CDATA[ 
			SELECT COUNT(*) AS cnt FROM (
				SELECT R.*
				  FROM WTM_FLEXIBLE_EMP E
				  JOIN WTM_WORK_CALENDAR C
				    ON E.TENANT_ID = C.TENANT_ID
				   AND E.ENTER_CD = C.ENTER_CD
				   AND E.SABUN = C.SABUN
				   AND C.YMD BETWEEN E.SYMD AND E.EYMD
				  JOIN WTM_WORK_DAY_RESULT R
				    ON C.TENANT_ID = R.TENANT_ID
				   AND C.ENTER_CD = R.ENTER_CD
				   AND C.YMD = R.YMD
				   AND C.SABUN = R.SABUN 
				 WHERE E.TENANT_ID = ${tenantId}
				   AND E.ENTER_CD = ${enterCd}
				   AND E.SABUN = ${sabun}
				   AND R.TIME_TYPE_CD = ${timeTypeCd} 
				   AND ((F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_SDATE, R.PLAN_SDATE),'YMDHI') >= #{sdate} AND F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_SDATE, R.PLAN_SDATE),'YMDHI') < #{edate} ) OR ( F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_EDATE, R.PLAN_EDATE),'YMDHI') > #{sdate} AND  F_WTM_DATE_FORMAT(F_WTM_NVL(R.APPR_EDATE, R.PLAN_EDATE),'YMDHI') <= #{edate} ))
				 UNION ALL
				SELECT O.*
				  FROM WTM_APPL A
				  JOIN WTM_TAA_APPL O
				    ON A.APPL_ID = O.APPL_ID
				 WHERE A.TENANT_ID = ${tenantId}
				   AND A.ENTER_CD = ${enterCd}
				   AND A.APPL_IN_SABUN = ${sabun}
				   AND (A.APPL_ID <> #{applId} OR #{applId} IS NULL OR #{applId} = '')
				   AND A.APPL_STATUS_CD IN ('21','31')
				   AND (CONCAT(O.SYMD, O.SHM) >= #{sdate} AND CONCAT(O.SYMD, O.SHM) < #{edate}) OR (CONCAT(O.EYMD, O.EHM) > #{sdate} AND CONCAT(O.EYMD, O.EHM) <= #{edate}))
				) X
		]]>	
  	</select>
  	
  	
  	<select id="getWorkCnt" parameterType="map" resultType="int">
  		<![CDATA[ 
			SELECT COUNT(*) AS work_day
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_WORK_CALENDAR C
			    ON E.TENANT_ID = C.TENANT_ID
			   AND E.ENTER_CD = C.ENTER_CD
			   AND E.SABUN = C.SABUN
			   AND C.YMD BETWEEN E.SYMD AND E.EYMD 
			 WHERE E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   AND E.SABUN = #{sabun}
			   AND C.HOLIDAY_YN != 'Y'
			   AND C.YMD BETWEEN {symd} AND {eymd}
		]]>	
  	</select>
  	
  	
  	<select id="checkDuplicateTaaAppl" parameterType="map" resultType="map">
  		<![CDATA[ 
			SELECT #{sabun} AS sabun
			     , F_WTM_GET_EMP_NM(${tenantId}, #{enterCd}, #{sabun}, #{symd}) AS empNm
			     , SUM(XX.CNT) AS cnt
			  FROM ( 
						SELECT COUNT(*) AS CNT
						  FROM WTM_APPL A
						  JOIN ( 
						  		SELECT APPL_ID, TENANT_ID, ENTER_CD, SABUN, TAA_CD, SYMD, EYMD, SHM, EHM
								     , CASE WHEN SHM IS NOT NULL AND SHM<>'' THEN F_WTM_TO_DATE(CONCAT(SYMD, SHM), 'YMDHIS') ELSE NULL END AS SDATE
								     , CASE WHEN EHM IS NOT NULL AND EHM<>'' THEN F_WTM_TO_DATE(CONCAT(EYMD, EHM), 'YMDHIS') ELSE NULL END AS EDATE
						        FROM WTM_TAA_APPL
								 WHERE TENANT_ID = ${tenantId} 
								   AND ENTER_CD = #{enterCd}
									AND SABUN = #{sabun}
							 ) T
						    ON A.APPL_ID = T.APPL_ID
						  LEFT OUTER JOIN ( SELECT NULL AS APPL_ID
						                         , ${tenantId} AS TENANT_ID
											     , #{enterCd} AS ENTER_CD
											     , #{sabun} AS SABUN
											     , #{symd} AS SYMD
											     , #{eymd} AS EYMD
											     , #{shm} AS SHM
											     , #{ehm} AS EHM
											     , CASE WHEN #{shm} IS NOT NULL AND #{shm}<>'' THEN F_WTM_TO_DATE(CONCAT(#{symd},#{shm}), 'YMDHIS') ELSE NULL END AS SDATE
								     			  , CASE WHEN #{ehm} IS NOT NULL AND #{ehm}<>'' THEN F_WTM_TO_DATE(CONCAT(#{eymd},#{ehm}), 'YMDHIS') ELSE NULL END AS EDATE
											  FROM DUAL
											 WHERE NOT EXISTS ( SELECT TENANT_ID, ENTER_CD, SABUN, TAA_CD, SYMD, EYMD, SHM, EHM
																		 FROM WTM_TAA_APPL
																		WHERE APPL_ID = #{applId} )
											UNION ALL
											SELECT APPL_ID, TENANT_ID, ENTER_CD, SABUN, SYMD, EYMD, SHM, EHM
											     , CASE WHEN SHM IS NOT NULL AND SHM<>'' THEN F_WTM_TO_DATE(CONCAT(SYMD, SHM), 'YMDHIS') ELSE NULL END AS SDATE
								     			  , CASE WHEN EHM IS NOT NULL AND EHM<>'' THEN F_WTM_TO_DATE(CONCAT(EYMD, EHM), 'YMDHIS') ELSE NULL END AS EDATE
											  FROM WTM_TAA_APPL
											 WHERE APPL_ID = #{applId}
										  ) X
							 ON A.TENANT_ID = X.TENANT_ID
							AND A.ENTER_CD = X.ENTER_CD
							AND T.SABUN = X.SABUN
						 WHERE A.TENANT_ID = ${tenantId} 
						   AND A.ENTER_CD = #{enterCd}
							AND T.SABUN = #{sabun}
							AND A.APPL_STATUS_CD NOT IN ('11','22','44','32','99')  
							AND (X.APPL_ID IS NULL OR A.APPL_ID <> X.APPL_ID)
							AND (X.SYMD BETWEEN T.SYMD AND T.EYMD OR X.EYMD BETWEEN T.SYMD AND T.EYMD)
							AND (T.SDATE IS NULL AND T.EDATE IS NULL
							       OR (T.SDATE IS NOT NULL AND T.EDATE IS NOT NULL
											AND ((X.SDATE IS NULL AND X.EDATE IS NULL) 
											OR (T.SDATE<=X.SDATE AND X.SDATE<T.EDATE OR T.SDATE<X.EDATE AND X.EDATE<=T.EDATE OR X.SDATE<=T.SDATE AND T.EDATE<=X.EDATE))))
						UNION
						SELECT COUNT(*) AS CNT
						  FROM ( 
						  		SELECT TENANT_ID, ENTER_CD, SABUN, YMD, APPL_ID, TAA_CD
								     , CASE WHEN APPR_SDATE IS NOT NULL THEN APPR_SDATE ELSE PLAN_SDATE END AS SDATE
								     , CASE WHEN APPR_EDATE IS NOT NULL THEN APPR_EDATE ELSE PLAN_EDATE END AS EDATE
								     , CASE WHEN APPR_MINUTE IS NOT NULL OR APPR_MINUTE<>'' OR APPR_MINUTE<>0 THEN APPR_MINUTE ELSE PLAN_MINUTE END AS WORK_MINUTE
						        FROM WTM_WORK_DAY_RESULT
								 WHERE TENANT_ID = ${tenantId} 
								   AND ENTER_CD = #{enterCd}
									AND SABUN = #{sabun}
							) R
						  LEFT OUTER JOIN (
						      SELECT ${tenantId} AS TENANT_ID
								     , #{enterCd} AS ENTER_CD
								     , #{sabun} AS SABUN
								     , #{symd} AS SYMD
								     , #{eymd} AS EYMD
								     , #{shm} AS SHM
								     , #{ehm} AS EHM
								     , CASE WHEN #{shm} IS NOT NULL AND #{shm}<>'' THEN F_WTM_TO_DATE(CONCAT(#{symd},#{shm}), 'YMDHIS') ELSE NULL END AS SDATE
								     , CASE WHEN #{ehm} IS NOT NULL AND #{ehm}<>'' THEN F_WTM_TO_DATE(CONCAT(#{eymd},#{ehm}), 'YMDHIS') ELSE NULL END AS EDATE
								  FROM DUAL
								 WHERE NOT EXISTS ( SELECT TENANT_ID, ENTER_CD, SABUN, TAA_CD, SYMD, EYMD, SHM, EHM
															 FROM WTM_TAA_APPL
															WHERE APPL_ID = #{applId} )
								UNION ALL
								SELECT TENANT_ID, ENTER_CD, SABUN, SYMD, EYMD, SHM, EHM
								     , CASE WHEN SHM IS NOT NULL AND SHM<>'' THEN F_WTM_TO_DATE(CONCAT(SYMD, SHM), 'YMDHIS') ELSE NULL END AS SDATE
								     , CASE WHEN EHM IS NOT NULL AND EHM<>'' THEN F_WTM_TO_DATE(CONCAT(EYMD, EHM), 'YMDHIS') ELSE NULL END AS EDATE
								  FROM WTM_TAA_APPL
								 WHERE APPL_ID = #{applId}
						  ) X 
						   ON R.TENANT_ID = X.TENANT_ID
						  AND R.ENTER_CD = X.ENTER_CD
						  AND R.SABUN = X.SABUN
						 WHERE R.YMD BETWEEN X.SYMD AND X.EYMD
						   AND R.TAA_CD IS NOT NULL AND R.TAA_CD NOT LIKE '%BREAK%' AND R.TAA_CD <> 'GOOUT'
							AND (R.SDATE IS NULL AND R.EDATE IS NULL
							       OR (R.SDATE IS NOT NULL AND R.EDATE IS NOT NULL
											AND ((X.SDATE IS NULL AND X.EDATE IS NULL) 
											OR (R.SDATE<=X.SDATE AND X.SDATE<R.EDATE OR R.SDATE<X.EDATE AND X.EDATE<=R.EDATE OR X.SDATE<=R.SDATE AND R.EDATE<=X.EDATE))))
			) XX
		]]>	
  	</select>
  	
  	<select id="checkApplMinute" parameterType="map" resultType="map">
  		<![CDATA[ 
			SELECT SABUN AS sabun
			    , F_WTM_GET_EMP_NM(TENANT_ID, ENTER_CD, SABUN, YMD) AS empNm
			    , CASE WHEN SUM((CASE WHEN APPR_MINUTE IS NULL OR APPR_MINUTE=0 THEN CASE WHEN PLAN_MINUTE IS NULL OR PLAN_MINUTE=0 
				 		  THEN 0 ELSE PLAN_MINUTE END ELSE APPR_MINUTE END )) - CAST(${applMinute} AS unsigned) < 0 THEN 'N' ELSE 'Y' END AS isValid 
			  FROM WTM_WORK_DAY_RESULT
			 WHERE TENANT_ID = ${tenantId}
			   AND ENTER_CD = #{enterCd}
			   AND SABUN = #{sabun}
			   AND YMD = #{ymd}
			   AND 'Y' = CASE WHEN (TIME_TYPE_CD = 'BASE' AND (TAA_CD IS NULL OR TAA_CD = '')) 
						OR (TIME_TYPE_CD = 'EXCEPT' AND TAA_CD LIKE '%BREAK%') THEN 'Y' ELSE 'N' END
			GROUP BY TENANT_ID, ENTER_CD, SABUN, YMD
		]]>	
  	</select>
  	
  	<select id="checkTotalWorkMinuteForSele" parameterType="map" resultType="map">
  		<![CDATA[ 
			SELECT F.WORK_MINUTE AS workMinute
			     , SUM(T.WORK_MINUTE) AS totalWorkMinute
					, CASE WHEN F.WORK_MINUTE - SUM(T.WORK_MINUTE) < 0 THEN 'N' ELSE 'Y' END AS isValid
			  FROM WTM_FLEXIBLE_EMP F
			  JOIN ( SELECT CASE WHEN X.YMD IS NOT NULL THEN X.APPL_MINUTE 
									    ELSE SUM(CASE WHEN X.YMD IS NULL THEN CASE WHEN APPR_MINUTE IS NOT NULL AND APPR_MINUTE<>'' AND APPR_MINUTE<>0 THEN APPR_MINUTE ELSE PLAN_MINUTE END
									             ELSE 0 END) END AS WORK_MINUTE
						  FROM WTM_FLEXIBLE_EMP E
						  JOIN WTM_WORK_DAY_RESULT R
						    ON E.TENANT_ID = R.TENANT_ID
						   AND E.ENTER_CD = R.ENTER_CD
						   AND E.SABUN = R.SABUN
						   AND R.YMD BETWEEN E.SYMD AND E.EYMD
		]]>
						  LEFT OUTER JOIN (
						  		SELECT S.YMD
						  		     , SUM(APPL_MINUTE) AS APPL_MINUTE
						  		  FROM (
						  		  SELECT NULL AS YMD
						  		       , 0 AS APPL_MINUTE
						  		    FROM DUAL
						  		    UNION
						  		  <if test="applMinutes!=null">
						  		  <foreach collection="applMinutes" item="a" separator="UNION ">
									SELECT #{a.ymd} AS YMD
									     , #{a.applMinute} AS APPL_MINUTE
									  FROM DUAL
								  </foreach>
								  </if>
								) S
								GROUP BY YMD
						  ) X
						  ON R.YMD = X.YMD
						  
			<![CDATA[ 
						 WHERE E.TENANT_ID = ${tenantId}
						   AND E.ENTER_CD = #{enterCd}
						   AND E.SABUN = #{sabun}
						   AND #{symd} <= E.EYMD AND  #{eymd} >= E.SYMD
						   AND 'Y' = CASE WHEN (TIME_TYPE_CD = 'BASE' AND (TAA_CD IS NULL OR TAA_CD = '')) 
												OR (TIME_TYPE_CD = 'EXCEPT' AND TAA_CD LIKE '%BREAK%') THEN 'Y' ELSE 'N' END
						GROUP BY E.TENANT_ID, E.ENTER_CD, E.SABUN, R.YMD ) T
			 WHERE F.TENANT_ID = ${tenantId}
			   AND F.ENTER_CD = #{enterCd}
			   AND F.SABUN = #{sabun}
			   AND #{symd} <= F.EYMD AND #{eymd} >= F.SYMD
			   AND F.WORK_TYPE_CD LIKE '%SELE%'
			GROUP BY F.TENANT_ID, F.ENTER_CD, F.SABUN, F.SYMD
		]]>	
  	</select>
  	
</mapper>
