<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmInoutHisMapper">

	<select id="getMyUnplannedYn" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT F_WTM_GET_EMP_DAY_OPTION(#{tenantId}, #{enterCd}, #{sabun}, F_WTM_DATE_FORMAT(now(),'YMD'), 'UNPLANNED_YN') as unplannedYn
        ]]>
    </select>
    
	<select id="getInoutStatus" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT C.YMD AS ymd, 
				   F_WTM_DATE_FORMAT(C.YMD, 'Y.M.D') as ymds,
			       C.ENTRY_SDATE AS entrySdate, 
			       C.ENTRY_EDATE AS entryEdate,
			       C.HOLIDAY_YN AS holydayYn,
			       F_WTM_GET_EMP_DAY_OPTION(C.TENANT_ID, C.ENTER_CD, C.SABUN, F_WTM_DATE_FORMAT(now(),'YMD'), 'UNPLANNED_YN') as unplanedYn,
			       X.pSdate, 
			       X.pEdate,
			       F_WTM_DATE_FORMAT(X.pSdate,'YMD') AS pSymd, 
			       F_WTM_DATE_FORMAT(X.pEdate,'YMD') AS pEymd
			  FROM WTM_WORK_CALENDAR C
			  LEFT OUTER JOIN (SELECT A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD, MIN(A.PLAN_SDATE) AS pSdate, 
			                           MAX(A.PLAN_EDATE) AS pEdate
			                        FROM WTM_WORK_DAY_RESULT A 
			                        WHERE A.TENANT_ID = #{tenantId}
			                           AND A.ENTER_CD = #{enterCd}
			                           AND A.SABUN = #{sabun}
			                           AND A.TIME_TYPE_CD IN ('BASE', 'OT', 'FIXOT', 'NIGHT') 
			                           GROUP BY A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD
			                           ORDER BY A.YMD) X
			    ON X.YMD = C.YMD
			   AND F_WTM_DATE_FORMAT(X.pSdate, 'YMD') = F_WTM_DATE_FORMAT(now(),'YMD')
			 WHERE C.TENANT_ID = #{tenantId}
			      AND C.ENTER_CD = #{enterCd}
			      AND C.SABUN = #{sabun}
			      AND F_WTM_TO_DATE(C.YMD,'YMD') BETWEEN F_WTM_DATE_ADD(F_WTM_DATE_FORMAT(now(),'YMD'), -1, 'D') AND F_WTM_DATE_ADD(F_WTM_DATE_FORMAT(now(),'YMD'), 1, 'D')
        ]]>
    </select>
    
    <select id="getInoutStatus_old" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT X.YMD AS ymd, 
				X.P_SDATE AS pSdate, 
				X.P_EDATE AS pEdate, 
				F_WTM_DATE_FORMAT(X.P_SDATE,'YMD') AS pSymd, 
				F_WTM_DATE_FORMAT(X.P_EDATE,'YMD') AS pEymd, 
				C.ENTRY_SDATE AS entrySdate, 
				C.ENTRY_EDATE AS entryEdate 
			FROM 
				(SELECT A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD, MIN(A.PLAN_SDATE) AS P_SDATE, MAX(A.PLAN_EDATE) AS P_EDATE
					FROM WTM_WORK_DAY_RESULT A 
					WHERE A.TENANT_ID = #{tenantId}
						AND A.ENTER_CD = #{enterCd}
						AND A.SABUN = #{sabun}
						AND A.TIME_TYPE_CD IN ('BASE', 'OT') 
						GROUP BY YMD
						ORDER BY YMD) AS X
				JOIN WTM_WORK_CALENDAR C ON C.TENANT_ID = X.TENANT_ID AND C.ENTER_CD = X.ENTER_CD AND C.SABUN = X.SABUN AND C.YMD = X.YMD
				WHERE (F_WTM_DATE_FORMAT(X.P_SDATE, 'YMD') = F_WTM_DATE_FORMAT(now(),'YMD') 
					OR F_WTM_DATE_FORMAT(X.P_EDATE, 'YMD') = F_WTM_DATE_FORMAT(now(),'YMD'))
        ]]>
    </select>
    
    <select id="getContext" parameterType="map" resultType="hashmap">
        <![CDATA[
        	(SELECT F_WTM_DATE_FORMAT(INOUT_DATE,'Y-M-D H:I') as inoutDate, INOUT_TYPE_CD as inoutTypeCd
        	FROM WTM_INOUT_HIS
        	WHERE INOUT_TYPE_CD IN ('GO', 'BACK')
        		AND TENANT_ID = #{tenantId} AND ENTER_CD = #{enterCd} AND SABUN = #{sabun}
        	    AND DATE_FORMAT(INOUT_DATE, "%Y%c%d") = DATE_FORMAT(now(), "%Y%c%d")
        		ORDER BY INOUT_DATE DESC LIMIT 1)
        	UNION ALL 
        	(SELECT F_WTM_DATE_FORMAT(INOUT_DATE,'Y-M-D H:I') as inoutDate, INOUT_TYPE_CD as inoutTypeCd
        	FROM WTM_INOUT_HIS
        	WHERE INOUT_TYPE_CD IN ('IN')
        		AND TENANT_ID = #{tenantId} AND ENTER_CD = #{enterCd} AND SABUN = #{sabun}
        		ORDER BY INOUT_DATE DESC LIMIT 1)
        	UNION ALL 
        	(SELECT F_WTM_DATE_FORMAT(INOUT_DATE,'Y-M-D H:I') as inoutDate, INOUT_TYPE_CD as inoutTypeCd
        	FROM WTM_INOUT_HIS
        	WHERE INOUT_TYPE_CD IN ('OUT')
        		AND TENANT_ID = #{tenantId} AND ENTER_CD = #{enterCd} AND SABUN = #{sabun}
        		ORDER BY INOUT_DATE DESC LIMIT 1)
        ]]>
    </select>
    
	<update id="saveWtmInoutHis" parameterType="map">
        <![CDATA[ 
			INSERT INTO WTM_INOUT_HIS
				(TENANT_ID,
				ENTER_CD,
				SABUN,
				INOUT_TYPE_CD,
				ENTRY_TYPE_CD,
				YMD,
				INOUT_DATE,
				ENTRY_NOTE)
			VALUES
				(#{tenantId},
				#{enterCd} ,
				#{sabun} ,
				#{inoutType} ,
				#{entryType} ,
				now(), 
				#{inoutDate},
				#{entryNote}
				)
        ]]>
    </update>
    
    <select id="getMyInoutList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT A.YMD as key2, RIGHT(A.YMD, 2) as title, F_WTM_DATE_FORMAT(A.ENTRY_SDATE, 'H:I') as caption_lb, F_WTM_DATE_FORMAT(A.ENTRY_EDATE, 'H:I') as caption_rb, T.TIME_NM as status 
			FROM WTM_WORK_CALENDAR A 
				JOIN WTM_TIME_CD_MGR T
			 		ON T.TIME_CD_MGR_ID = A.TIME_CD_MGR_ID	
			WHERE A.TENANT_ID = #{tenantId}
				AND A.ENTER_CD = #{enterCd}
				AND A.SABUN = #{sabun}
				AND F_WTM_DATE_FORMAT(A.YMD,'YM') = #{month}
				ORDER BY A.YMD
	        ]]>
    </select>
    
     <select id="getInoutListTerm" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT RIGHT(X.YMD, 2) AS title,
				TIME_FORMAT(SEC_TO_TIME((MAX(WORK_HOUR) + MAX(OT_HOUR)) * 60), '%H:%i')    as status,
				--CONCAT(TIME_FORMAT(SEC_TO_TIME(MAX(WORK_HOUR)*60), '%H:%i'), '(', TIME_FORMAT(SEC_TO_TIME(MAX(OT_HOUR)*60), '%H:%i'), ')') as status,
				F_WTM_DATE_FORMAT(X.ENTRY_SDATE, 'H:I') as caption_lb, 
				F_WTM_DATE_FORMAT(X.ENTRY_EDATE, 'H:I') as caption_rb
			FROM ( SELECT R.TENANT_ID, R.ENTER_CD, R.SABUN, R.YMD, 
						CASE WHEN R.TIME_TYPE_CD = 'BASE' THEN R.APPR_MINUTE ELSE 0 END AS WORK_HOUR,
						CASE WHEN R.TIME_TYPE_CD IN ('OT', 'NIGHT', 'FIXOT') THEN R.APPR_MINUTE ELSE 0 END AS OT_HOUR,
						C.ENTRY_SDATE, C.ENTRY_EDATE
					FROM WTM_WORK_DAY_RESULT R
						JOIN WTM_WORK_CALENDAR C ON C.TENANT_ID=R.TENANT_ID AND C.ENTER_CD=R.ENTER_CD AND C.SABUN=R.SABUN AND C.YMD=R.YMD						
					WHERE R.TENANT_ID=#{tenantId} AND R.SABUN=#{sabun} AND R.ENTER_CD=#{enterCd} AND R.YMD >= #{sdate} AND R.YMD <= #{edate}
				) X	
			GROUP BY X.TENANT_ID, X.ENTER_CD, X.SABUN, X.YMD	
			ORDER BY X.YMD
	    ]]>
    </select>
    
    <select id="getMyInoutHistory" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT CONCAT_WS('@',F_WTM_DATE_FORMAT(A.INOUT_DATE, 'YMDHIS'),A.INOUT_TYPE_CD) AS key2,  
				F_WTM_GET_CODE_NM(#{tenantId},#{enterCd}, 'INOUT_TYPE_CD', A.INOUT_TYPE_CD, #{ymd}) AS title,
			 	F_WTM_DATE_FORMAT(A.INOUT_DATE, 'H:I') as caption_lb,
			 	F_WTM_GET_CODE_NM(#{tenantId},#{enterCd}, 'ENTRY_TYPE_CD', A.ENTRY_TYPE_CD, #{ymd}) AS caption_rb
			FROM WTM_INOUT_HIS A
			WHERE A.TENANT_ID = #{tenantId}
				AND A.ENTER_CD = #{enterCd}
				AND A.SABUN = #{sabun}
				AND F_WTM_DATE_FORMAT(A.YMD,'YMD') = #{ymd}
				ORDER BY A.INOUT_DATE DESC
	        ]]>
    </select>
    
    <select id="getMyInoutDetail" parameterType="map" resultType="hashmap">
        <![CDATA[ 
			SELECT F_WTM_DATE_FORMAT(INOUT_DATE, 'Y-M-D') as ymd,
				F_WTM_GET_CODE_NM(#{tenantId},#{enterCd},'INOUT_TYPE_CD', INOUT_TYPE_CD, F_WTM_DATE_FORMAT(INOUT_DATE, 'YMD')) AS inoutTypeCd,
				F_WTM_DATE_FORMAT(INOUT_DATE, 'HIS') as inoutDate,
				F_WTM_DATE_FORMAT(INOUT_DATE, 'YMDHIS') AS id
			FROM WTM_INOUT_HIS 
			WHERE TENANT_ID = #{tenantId}
				AND ENTER_CD = #{enterCd}
				AND SABUN = #{sabun}
				AND INOUT_TYPE_CD = #{inoutTypeCd}
				AND F_WTM_DATE_FORMAT(#{inoutDate}, 'YMDHIS') = F_WTM_DATE_FORMAT(INOUT_DATE, 'YMDHIS');
	        ]]>
    </select>
    
   	<select id="getEntryStatus" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT DATE_FORMAT(A.ENTRY_SDATE, "%Y%c%d%H%i%s") as entrySdate
				, DATE_FORMAT(A.ENTRY_EDATE, "%Y%c%d%H%i%s") as entryEdate
				, DATE_FORMAT((SELECT max(PLAN_EDATE) as ymd
					FROM WTM_WORK_DAY_RESULT 
					WHERE TENANT_ID = P_TENANT_ID AND ENTER_CD = P_ENTER_CD AND SABUN = P_SABUN 
					AND YMD = DATE_SUB(STR_TO_DATE(_ymd,"%Y%c%d"), interval 1 day)),"%Y%c%d")  AS SUB_YMD
			FROM WTM_WORK_CALENDAR A
			WHERE TENANT_ID = #{tenantId} AND ENTER_CD = #{enterCd} AND SABUN = #{sabun} AND YMD =LEFT(#{inoutDate}, 8);
	
        ]]>
    </select>
    
    <select id="getGoBackStatus" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT CASE WHEN INOUT_TYPE_CD = 'GO' THEN 'BACK' ELSE 'GO' END AS inoutType
        		, CONCAT(F_WTM_DATE_FORMAT(INOUT_DATE, "YMDHI"), '00') AS exceptSYmd
   	   		FROM WTM_INOUT_HIS 
       		WHERE TENANT_ID = #{tenantId} 
            	AND ENTER_CD = #{enterCd} 
                AND SABUN =  #{sabun}
                AND DATE_FORMAT(INOUT_DATE, "%Y%c%d") = DATE_FORMAT(now(), "%Y%c%d")
                AND INOUT_TYPE_CD IN ('GO', 'BACK') ORDER BY INOUT_DATE DESC LIMIT 1
        ]]>
    </select>
 
 
</mapper>
