<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmInOutChangeMapper">
	<select id="getInOutChangeList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
		        SELECT A.SABUN as sabun , 
					B.EMP_NM as empNm, 
					A.YMD as ymd, 
					F_WTM_GET_ORG_NM(A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD) AS orgNm,
					F_WTM_GET_FLEXIBLE_NM(A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD) AS flexibleNm,
					F_WTM_GET_TIME_NM(A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD) AS timeNm,
					F_WTM_DATE_FORMAT(A.ENTRY_SDATE, 'YMDHI') as entrySdate,
					A.ENTRY_STYPE_CD as entryStypeCd,
					F_WTM_DATE_FORMAT(A.ENTRY_EDATE, 'YMDHI') as entryEdate,
					A.ENTRY_ETYPE_CD as entryEtypeCd,
					F_WTM_DATE_FORMAT(A.CHG_SDATE, 'YMDHI') as chgSdate,
					F_WTM_DATE_FORMAT(A.CHG_EDATE, 'YMDHI') as chgEdate,
					A.REASON as reason,
					A.UPDATE_ID as updateId,
					A.UPDATE_DATE as updateDate,
					A.ENTRY_DELETE_YN as entryDeleteYn
				FROM WTM_INOUT_CHG_HIS A
				 INNER JOIN WTM_EMP_HIS B
				    ON A.TENANT_ID = B.TENANT_ID
				    AND A.ENTER_CD = B.ENTER_CD
				    AND A.SABUN = B.SABUN
				    AND A.YMD BETWEEN B.SYMD AND B.EYMD
				WHERE A.TENANT_ID=#{tenantId} 
					AND A.ENTER_CD=#{enterCd}
					AND A.YMD BETWEEN  REPLACE(#{sYmd}, '-', '') AND REPLACE(#{eYmd}, '-', '') 
				]]>
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					AND (A.SABUN LIKE CONCAT(#{searchKeyword}, '%') OR B.EMP_NM LIKE CONCAT('%', #{searchKeyword}, '%'))
				</if>
				<if test="orgList!=null">
				   AND ORG_CD IN (NULL, 
			       <foreach collection="orgList" item="org" separator=", ">
					   #{org}
				   </foreach>
				   )
			    </if>
	</select>
    
    <update id="setInOutChangeList" parameterType="map">
		        INSERT INTO WTM_INOUT_CHG_HIS 
					(TENANT_ID,
					ENTER_CD, 
					SABUN, 
					YMD, 
					ENTRY_SDATE, 
					ENTRY_STYPE_CD, 
					ENTRY_EDATE, 
					ENTRY_ETYPE_CD, 
					CHG_SDATE, 
					CHG_EDATE, 
					REASON, 
					UPDATE_DATE, 
					UPDATE_ID)
				VALUES 
			<if test="insertRows!=null and insertRows.size()>0">
			<foreach collection="insertRows" item="item" separator=", ">
					(#{tenantId}, 
					#{enterCd}, 
					#{item.sabun}, 
					#{item.ymd}, 
					IF(#{item.entrySdate}= '', NULL, F_WTM_TO_DATE(#{item.entrySdate}, 'YMDHIS')),
					#{item.entryStypeCd}, 
					IF(#{item.entryEdate}= '', NULL, F_WTM_TO_DATE(#{item.entryEdate}, 'YMDHIS')),
					#{item.entryEtypeCd}, 
					IF(#{item.chgSdate}= '', NULL, F_WTM_TO_DATE(#{item.chgSdate}, 'YMDHIS')), 
					IF(#{item.chgEdate}='', NULL, F_WTM_TO_DATE(#{item.chgEdate}, 'YMDHIS')),
					#{item.reason}, 
					now(), 
					#{userId})	
			</foreach>
			</if>
    </update>
    
    <update id="setInOutChange" parameterType="map">
       INSERT INTO WTM_INOUT_CHG_HIS 
		(TENANT_ID,
		ENTER_CD, 
		SABUN, 
		YMD, 
		ENTRY_SDATE, 
		ENTRY_STYPE_CD, 
		ENTRY_EDATE, 
		ENTRY_ETYPE_CD, 
		ENTRY_DELETE_YN, 		   
		CHG_SDATE, 
		CHG_EDATE, 
		REASON, 
		UPDATE_DATE, 
		UPDATE_ID)
	VALUES 
		(#{tenantId}, 
		#{enterCd}, 
		#{sabun}, 
		#{ymd}, 
		IF(#{entrySdate}= '', NULL, F_WTM_TO_DATE(#{entrySdate}, 'YMDHIS')),
		#{entryStypeCd}, 
		IF(#{entryEdate}= '', NULL, F_WTM_TO_DATE(#{entryEdate}, 'YMDHIS')),
		#{entryEtypeCd}, 
		#{entryDeleteYn}, 			
		IF(#{chgSdate}= '', NULL, F_WTM_TO_DATE(#{chgSdate}, 'YMDHIS')), 
		IF(#{chgEdate}='', NULL, F_WTM_TO_DATE(#{chgEdate}, 'YMDHIS')),
		#{reason}, 
		now(), 
		#{userId})	
    </update>
    
    <select id="getEntryInoutList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
	        SELECT F_WTM_DATE_FORMAT(H.INOUT_DATE, 'YMDHI')  AS inoutDate
	        	, CASE WHEN H.INOUT_TYPE_CD ='IN' THEN '출근' 
	        		WHEN H.INOUT_TYPE_CD ='OUT' THEN '퇴근' 
	        		WHEN H.INOUT_TYPE_CD ='GO' THEN '외출' 
	        		WHEN H.INOUT_TYPE_CD ='BACK' THEN '복귀' ELSE '' END AS inoutType
	        	, H.SABUN AS sabun
	        	, F_WTM_DATE_FORMAT(H.YMD, 'YMDHI') AS ymd
	        	, E.EMP_NM AS empNm
	        	, O.ORG_NM AS orgNm
			FROM WTM_INOUT_HIS H
			JOIN WTM_EMP_HIS E 
				ON E.TENANT_ID = H.TENANT_ID 
				AND E.ENTER_CD =  H.ENTER_CD 
				AND E.SABUN = H.SABUN
				AND #{ymd} BETWEEN E.SYMD AND E.EYMD
			JOIN WTM_ORG_CODE O 
				ON O.TENANT_ID = E.TENANT_ID 
				AND O.ENTER_CD = E.ENTER_CD
				AND O.ORG_CD = E.ORG_CD
				AND #{ymd} BETWEEN O.SYMD AND O.EYMD
			WHERE DATE_FORMAT(H.INOUT_DATE, '%Y%m%d') = #{ymd}
				AND H.TENANT_ID=#{tenantId}
				AND H.ENTER_CD=#{enterCd}
			]]>
			<if test="searchValue!=null and !searchValue.equals('')">
				AND (E.SABUN LIKE CONCAT(#{searchValue}, '%') OR E.EMP_NM LIKE CONCAT('%', #{searchValue}, '%'))
			</if>
			<if test="orgList!=null">
			   AND E.ORG_CD IN (NULL, 
		       <foreach collection="orgList" item="org" separator=", ">
				   #{org}
			   </foreach>
			   )
		    </if>
			<![CDATA[
		    ORDER BY H.INOUT_DATE DESC
		    ]]>
	</select>
    
    
    <update id="updateResultApprDate" parameterType="hashmap">
		UPDATE WTM_WORK_DAY_RESULT 
		SET APPR_SDATE = NULL, APPR_EDATE = NULL, APPR_MINUTE = NULL
		WHERE TENANT_ID = #{tenantId}
		   AND ENTER_CD = #{enterCd}
		   AND SABUN = #{sabun}
		   AND YMD = #{stdYmd}
		   AND TIME_TYPE_CD IN ('BASE','OT','FIXOT','NIGHT', 'GOBACK')
	</update>
</mapper>
