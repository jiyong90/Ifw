<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmEmpHisMapper">
	
	<select id="getEmpHisList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT *
        	  FROM (
			        	SELECT A.EMP_HIS_ID AS empHisId
							 , A.ENTER_CD AS enterCd
							 , A.SABUN AS sabun
							 , A.EMP_NM AS empNm
							 , A.EMP_ENG_NM AS empEngNm
							 , A.SYMD AS symd
							 , A.EYMD AS eymd
							 , A.STATUS_CD AS statusCd
							 , A.ORG_CD AS orgCd
							 , A.BUSINESS_PLACE_CD AS businessPlaceCd
							 , A.DUTY_CD AS dutyCd
							 , A.POS_CD AS posCd
							 , A.CLASS_CD AS classCd
							 , A.JOB_GROUP_CD AS jobGroupCd
							 , A.JOB_CD AS jobCd
							 , A.PAY_TYPE_CD AS payTypeCd
							 , A.LEADER_YN AS leaderYn
							 , A.NOTE AS note
							 , (SELECT MAX(WOC.ORG_NM)
								  FROM WTM_ORG_CODE WOC
								 WHERE WOC.TENANT_ID = A.TENANT_ID
								   AND WOC.ENTER_CD = A.ENTER_CD
								   AND WOC.ORG_CD = A.ORG_CD) AS orgNm
							 , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'DUTY_CD', A.DUTY_CD, A.SYMD) AS dutyNm
							 , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'POS_CD', A.POS_CD, A.SYMD) AS posNm
							 , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'CLASS_CD', A.CLASS_CD, A.SYMD) AS classNm
							 , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'JOB_CD', A.JOB_CD, A.SYMD) AS jobNm
							 , EMP_ID AS empId
							 , TENANT_ID AS tenantId
						  FROM WTM_EMP_HIS A
						 WHERE A.TENANT_ID = #{tenantId}
						   AND A.ENTER_CD = #{enterCd} 
							AND CASE WHEN #{sYmd} = '' THEN F_WTM_DATE_FORMAT(now(),'YMD')
							         ELSE REPLACE(#{sYmd}, '-', '') END BETWEEN A.SYMD AND A.EYMD
							AND A.STATUS_CD <> 'RA'
			        ]]>
			        		<if test="orgList!=null">
						   AND A.ORG_CD IN (NULL, 
					       <foreach collection="orgList" item="org" separator=", ">
							   #{org}
						   </foreach>
						   )
						   </if>
				) T
			WHERE 1=1
			  AND (sabun LIKE CONCAT(#{searchKeyword}, '%')
			    OR empNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR orgNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR dutyNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR posNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR classNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR jobNm LIKE CONCAT('%', #{searchKeyword}, '%'))
    </select>
    
    <select id="getEmpHis" parameterType="map" resultType="map">
        <![CDATA[
        	SELECT EMP_HIS_ID AS empHisId
				 , ENTER_CD AS enterCd
				 , SABUN AS sabun
				 , EMP_NM AS empNm
				 , EMP_ENG_NM AS empEngNm
				 , SYMD AS symd
				 , EYMD AS eymd
				 , STATUS_CD AS statusCd
				 , ORG_CD AS orgCd
				 , BUSINESS_PLACE_CD AS businessPlaceCd
				 , DUTY_CD AS dutyCd
				 , POS_CD AS posCd
				 , CLASS_CD AS classCd
				 , JOB_GROUP_CD AS jobGroupCd
				 , JOB_CD AS jobCd
				 , PAY_TYPE_CD AS payTypeCd
				 , LEADER_YN AS leaderYn
				 , NOTE AS note
				 , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS orgNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'DUTY_CD', DUTY_CD, SYMD) AS dutyNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'POS_CD', POS_CD, SYMD) AS posNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'CLASS_CD', CLASS_CD, SYMD) AS classNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'JOB_CD', JOB_CD, SYMD) AS jobNm
				 , EMP_ID AS empId
			  FROM WTM_EMP_HIS
			 WHERE EMP_HIS_ID = #{empHisId}
			 AND STATUS_CD <> 'RA'
        ]]>
        <if test="orgList!=null">
			   AND ORG_CD IN (NULL, 
		       <foreach collection="orgList" item="org" separator=", ">
				   #{org}
			   </foreach>
			   )
			   </if>
    </select>
    
    <update id="insertCommUser" parameterType="Long">
    	<![CDATA[
    		INSERT INTO comm_user(tenant_id, login_id, password, name, phone_no, update_date, login_failure_count, last_login, account_lockout_yn, emp_id, enter_cd)
			SELECT E.TENANT_ID
			     , F_WTM_AES_ENCRYPT(E.SABUN, I.AES_KEY)
			     , F_WTM_SHA_ENCRYPT(E.SABUN)
			     , E.EMP_NM
			     , CASE WHEN A.HAND_PHONE IS NOT NULL OR A.HAND_PHONE <> '' THEN A.HAND_PHONE ELSE '010' END 
			     , NOW()
			     , 0
			     , NOW()
			     , 'N'
			     , F_WTM_AES_ENCRYPT(CONCAT(E.TENANT_ID, E.ENTER_CD, E.SABUN), I.AES_KEY)
			     , F_WTM_AES_ENCRYPT(E.ENTER_CD, I.AES_KEY)
			  FROM WTM_EMP_HIS E
			  JOIN (SELECT tenant_id
			             , info_data AS AES_KEY
						 FROM comm_management_infomation 
						WHERE info_key = 'SECURITY.AES.KEY'
						  AND tenant_id = ${tenantId}
					  GROUP BY tenant_id) I
			    ON E.TENANT_ID = I.tenant_id
			  LEFT OUTER JOIN WTM_EMP_ADDR A
			    ON E.TENANT_ID = A.TENANT_ID
			   AND E.ENTER_CD = A.ENTER_CD
			   AND E.SABUN = A.SABUN
			  LEFT OUTER JOIN comm_user U
			    ON E.TENANT_ID = U.tenant_id
			   AND F_WTM_AES_ENCRYPT(E.ENTER_CD, I.AES_KEY) = U.enter_cd
			   AND F_WTM_AES_ENCRYPT(E.SABUN, I.AES_KEY) = U.login_id
			 WHERE E.TENANT_ID = ${tenantId}
			   AND F_WTM_DATE_FORMAT(NOW(),'YMD') BETWEEN E.SYMD AND E.EYMD
			   AND U.user_id IS NULL
    	]]>
    </update>
    
     <update id="updateCommUserPw" parameterType="map">
    		UPDATE comm_user A
			  JOIN ( SELECT NULL AS TENANT_ID
			              , NULL AS ENTER_CD
			              , NULL AS SABUN
			              , NULL AS PASSWORD
			           FROM DUAL
			          <if test="pwList!=null">
			          <foreach collection="pwList" item="m" separator="">
			          UNION 
			          SELECT ${tenantId} AS TENANT_ID
			               , F_WTM_AES_ENCRYPT(#{enterCd}, #{aesKey}) AS ENTER_CD 
			               , F_WTM_AES_ENCRYPT( #{m.sabun}, #{aesKey}) AS SABUN
						   , #{m.password} AS PASSWORD
						FROM DUAL
					  </foreach>
					  </if>
					) T
				 ON A.tenant_id = T.TENANT_ID
			   AND A.enter_Cd = T.ENTER_CD
			   AND A.login_id = T.SABUN
			 SET A.password = T.PASSWORD
			WHERE A.tenant_id = T.TENANT_ID
			  AND A.enter_Cd = T.ENTER_CD
			  AND A.login_id = T.SABUN
    </update>
    
    <update id="deleteCommUser" parameterType="map">
       DELETE FROM comm_user
	   WHERE (tenant_id, enter_cd, login_id) IN ( SELECT TENANT_ID
	                                                   , F_WTM_AES_ENCRYPT(ENTER_CD, #{aesKey})
	                                                   , F_WTM_AES_ENCRYPT(SABUN, #{aesKey})
	                                                FROM WTM_EMP_HIS
	                                               WHERE EMP_HIS_ID IN (NULL
		                                               <if test="empHisIds!=null">
		                                               <foreach collection="empHisIds" item="empHisId" separator=", ">
		                                               	#{empHisId}
		                                               </foreach>
		                                               </if>
		                                               )
													)
    </update>
    
    <select id="getCreateBaseTarget" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT H.TENANT_ID AS tenantId
        	     , H.ENTER_CD AS enterCd
        	     , H.SABUN AS sabun
        	     , H.SYMD AS symd
        	     , H.EYMD AS eymd
			  FROM WTM_EMP_HIS H
			  LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
			    ON H.TENANT_ID = E.TENANT_ID
			   AND H.ENTER_CD = E.ENTER_CD
			   AND H.SABUN = E.SABUN
			 WHERE H.TENANT_ID = #{tenantId}
			   AND H.ENTER_CD = #{enterCd}
			   AND F_WTM_DATE_FORMAT(NOW(),'YMD') BETWEEN H.SYMD AND H.EYMD
			   AND STATUS_CD = 'AA'
			   AND E.FLEXIBLE_STD_MGR_ID IS NULL
        ]]>
    </select>
    
    <select id="getRuleTargetBySql" parameterType="map" resultType="hashmap">
    	SELECT CASE WHEN COUNT(*) = 0 THEN 'N' ELSE 'Y' END AS isTarget
    	  FROM (
		 SELECT SABUN
		  FROM WTM_EMP_HIS
		 WHERE TENANT_ID = #{tenantId}
		   AND ENTER_CD = #{enterCd}
		   AND #{d} BETWEEN SYMD AND EYMD
		   <if test="sql!=null">
		   AND ( ${sql} )
		   </if> ) H
		 WHERE SABUN = #{sabun}
  	</select>
	
	<select id="getLeaderYn" parameterType="map" resultType="hashmap">
    	SELECT CASE WHEN H.LEADER_YN = 'Y' THEN 'Y' 
			WHEN COUNT(C.ORG_CD) > 0 THEN 'Y'
			ELSE 'N' END AS LEADER_YN
		FROM WTM_EMP_HIS H
		LEFT OUTER JOIN WTM_ORG_CONC C
			ON H.TENANT_ID=C.TENANT_ID 
			AND H.ENTER_CD=C.ENTER_CD 
			AND H.SABUN=C.SABUN
		WHERE H.TENANT_ID=#{tenantId}
			AND H.ENTER_CD=#{enterCd}
			AND H.SABUN=#{sabun}
			AND H.STATUS_CD='AA'
			AND H.EYMD='29991231'
  	</select>

	
	<select id="getWtmFlexibleEmp" parameterType="map" resultType="com.isu.ifw.entity.WtmEmpHis">
		<![CDATA[
			SELECT
				EMP_HIS_ID,
				TENANT_ID,
				ENTER_CD,
				SABUN,
				EMP_NM,
				EMP_ENG_NM,
				SYMD,
				EYMD,
				EMP_YMD,
				STATUS_CD,
				ORG_CD,
				BUSINESS_PLACE_CD,
				DUTY_CD,
				POS_CD,
				CLASS_CD,
				JOB_GROUP_CD,
				JOB_CD,
				PAY_TYPE_CD,
				ORG_PATH,
				LEADER_YN,
				NOTE,
				EMP_ID,
				UPDATE_DATE,
				UPDATE_ID
			FROM
				WTM_EMP_HIS E
			WHERE
				E.TENANT_ID = #{tenantId}
				AND E.ENTER_CD = #{enterCd}
				AND E.STATUS_CD = #{statusCd}
				AND E.EMP_YMD is not null
				AND #{ymd} BETWEEN E.SYMD AND E.EYMD
				AND NOT EXISTS(
					SELECT
						*
					FROM
						WTM_FLEXIBLE_EMP D
					WHERE
						D.SABUN = E.SABUN
						AND D.TENANT_ID = E.TENANT_ID
						AND D.ENTER_CD = E.ENTER_CD
						AND D.WORK_TYPE_CD = 'BASE'
				)
		]]>
	</select>
	
</mapper>
