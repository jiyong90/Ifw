<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmEmpHisMapper">
	
	<select id="getEmpHisList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT *
        	  FROM (
			        	SELECT EMP_HIS_ID AS empHisId
							 , ENTER_CD AS enterCd
							 , SABUN AS sabun
							 , EMP_NM AS empNm
							 , EMP_ENG_NM AS empEngNm
							 , SYMD AS symd
							 , EYMD AS eymd
							 , STATUS_CD AS statusCd
							 , ORG_CD AS orgCd
							 , BUSINESS_PLACE_CD AS businessPlaceCd
							 , DUTY_CD AS dutyCd
							 , POS_CD AS posCd
							 , CLASS_CD AS classCd
							 , JOB_GROUP_CD AS jobGroupCd
							 , JOB_CD AS jobCd
							 , PAY_TYPE_CD AS payTypeCd
							 , LEADER_YN AS leaderYn
							 , NOTE AS note
							 , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS orgNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'DUTY_CD', DUTY_CD, SYMD) AS dutyNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'POS_CD', POS_CD, SYMD) AS posNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'CLASS_CD', CLASS_CD, SYMD) AS classNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'JOB_CD', JOB_CD, SYMD) AS jobNm
							 , EMP_ID AS empId
						  FROM WTM_EMP_HIS
						 WHERE TENANT_ID = #{tenantId}
						   AND ENTER_CD = #{enterCd} 
							AND CASE WHEN #{sYmd} = '' THEN F_WTM_DATE_FORMAT(now(),'YMD')
							         ELSE REPLACE(#{sYmd}, '-', '') END BETWEEN SYMD AND EYMD
							AND STATUS_CD <> 'RA'
			        ]]>
			        		<if test="orgList!=null">
						   AND ORG_CD IN (NULL, 
					       <foreach collection="orgList" item="org" separator=", ">
							   #{org}
						   </foreach>
						   )
						   </if>
				) T
			WHERE 1=1
			  AND (sabun LIKE CONCAT(#{searchKeyword}, '%')
			    OR empNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR orgNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR dutyNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR posNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR classNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR jobNm LIKE CONCAT('%', #{searchKeyword}, '%'))
    </select>
    
    <select id="getEmpHis" parameterType="map" resultType="map">
        <![CDATA[
        	SELECT EMP_HIS_ID AS empHisId
				 , ENTER_CD AS enterCd
				 , SABUN AS sabun
				 , EMP_NM AS empNm
				 , EMP_ENG_NM AS empEngNm
				 , SYMD AS symd
				 , EYMD AS eymd
				 , STATUS_CD AS statusCd
				 , ORG_CD AS orgCd
				 , BUSINESS_PLACE_CD AS businessPlaceCd
				 , DUTY_CD AS dutyCd
				 , POS_CD AS posCd
				 , CLASS_CD AS classCd
				 , JOB_GROUP_CD AS jobGroupCd
				 , JOB_CD AS jobCd
				 , PAY_TYPE_CD AS payTypeCd
				 , LEADER_YN AS leaderYn
				 , NOTE AS note
				 , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS orgNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'DUTY_CD', DUTY_CD, SYMD) AS dutyNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'POS_CD', POS_CD, SYMD) AS posNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'CLASS_CD', CLASS_CD, SYMD) AS classNm
				 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'JOB_CD', JOB_CD, SYMD) AS jobNm
				 , EMP_ID AS empId
			  FROM WTM_EMP_HIS
			 WHERE EMP_HIS_ID = #{empHisId}
			 AND STATUS_CD <> 'RA'
        ]]>
        <if test="orgList!=null">
			   AND ORG_CD IN (NULL, 
		       <foreach collection="orgList" item="org" separator=", ">
				   #{org}
			   </foreach>
			   )
			   </if>
    </select>
    
    <update id="insertCommUser" parameterType="Long">
    	<![CDATA[
    		INSERT INTO comm_user(tenant_id, login_id, password, name, phone_no, update_date, login_failure_count, last_login, account_lockout_yn, emp_id, enter_cd)
			SELECT E.TENANT_ID
			     , F_WTM_AES_ENCRYPT(E.SABUN, I.AES_KEY)
			     , F_WTM_SHA_ENCRYPT(E.SABUN)
			     , E.EMP_NM
			     , CASE WHEN A.HAND_PHONE IS NOT NULL OR A.HAND_PHONE <> '' THEN A.HAND_PHONE ELSE '010' END 
			     , NOW()
			     , 0
			     , NOW()
			     , 'N'
			     , F_WTM_AES_ENCRYPT(CONCAT(E.TENANT_ID, E.ENTER_CD, E.SABUN), I.AES_KEY)
			     , F_WTM_AES_ENCRYPT(E.ENTER_CD, I.AES_KEY)
			  FROM WTM_EMP_HIS E
			  JOIN (SELECT tenant_id
			             , info_data AS AES_KEY
						 FROM comm_management_infomation 
						WHERE info_key = 'SECURITY.AES.KEY'
						  AND tenant_id = ${tenantId}
					  GROUP BY tenant_id) I
			    ON E.TENANT_ID = I.tenant_id
			  LEFT OUTER JOIN WTM_EMP_ADDR A
			    ON E.TENANT_ID = A.TENANT_ID
			   AND E.ENTER_CD = A.ENTER_CD
			   AND E.SABUN = A.SABUN
			  LEFT OUTER JOIN comm_user U
			    ON E.TENANT_ID = U.tenant_id
			   AND F_WTM_AES_ENCRYPT(E.ENTER_CD, I.AES_KEY) = U.enter_cd
			   AND F_WTM_AES_ENCRYPT(E.SABUN, I.AES_KEY) = U.login_id
			 WHERE E.TENANT_ID = ${tenantId}
			   AND F_WTM_DATE_FORMAT(NOW(),'YMD') BETWEEN E.SYMD AND E.EYMD
			   AND U.user_id IS NULL
    	]]>
    </update>
    
     <update id="updateCommUserPw" parameterType="map">
    		UPDATE comm_user A
			  JOIN ( SELECT NULL AS TENANT_ID
			              , NULL AS ENTER_CD
			              , NULL AS SABUN
			              , NULL AS PASSWORD
			           FROM DUAL
			          <if test="pwList!=null">
			          <foreach collection="pwList" item="m" separator="">
			          UNION 
			          SELECT ${tenantId} AS TENANT_ID
			               , F_WTM_AES_ENCRYPT(#{enterCd}, #{aesKey}) AS ENTER_CD 
			               , F_WTM_AES_ENCRYPT( #{m.sabun}, #{aesKey}) AS SABUN
						   , #{m.password} AS PASSWORD
						FROM DUAL
					  </foreach>
					  </if>
					) T
				 ON A.tenant_id = T.TENANT_ID
			   AND A.enter_Cd = T.ENTER_CD
			   AND A.login_id = T.SABUN
			 SET A.password = T.PASSWORD
			WHERE A.tenant_id = T.TENANT_ID
			  AND A.enter_Cd = T.ENTER_CD
			  AND A.login_id = T.SABUN
    </update>
    
    <update id="deleteCommUser" parameterType="map">
       DELETE FROM comm_user
	   WHERE (tenant_id, enter_cd, login_id) IN ( SELECT TENANT_ID
	                                                   , F_WTM_AES_ENCRYPT(ENTER_CD, #{aesKey})
	                                                   , F_WTM_AES_ENCRYPT(SABUN, #{aesKey})
	                                                FROM WTM_EMP_HIS
	                                               WHERE EMP_HIS_ID IN (NULL
		                                               <if test="empHisIds!=null">
		                                               <foreach collection="empHisIds" item="empHisId" separator=", ">
		                                               	#{empHisId}
		                                               </foreach>
		                                               </if>
		                                               )
													)
    </update>
	
</mapper>
