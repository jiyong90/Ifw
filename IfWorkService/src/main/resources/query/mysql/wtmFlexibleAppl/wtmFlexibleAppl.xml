<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmFlexibleApplMapper">
	<select id="getLastAppl" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT FA.FLEXIBLE_APPL_ID AS flexibleApplId
			     , FA.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
			     , FA.APPL_ID AS applId
			     , FA.YM AS ym
			     , FA.SYMD AS sYmd
			     , FA.EYMD AS eYmd
			     , FA.WORK_DAY AS workDay
			     , FA.REASON AS reason
			     , A.APPL_SABUN AS sabun
			     , A.APPL_CD AS applCd
			     , A.APPL_STATUS_CD AS applStatusCd
			     , E.FLEXIBLE_EMP_ID AS flexibleEmpId
			     , E.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
			     , M.WORK_SHM AS workShm
			     , M.WORK_EHM AS workEhm
			     , M.CORE_SHM AS coreShm
			     , M.CORE_EHM AS coreEhm
			     , M.CORE_CHK_YN AS coreChkYn
			  FROM WTM_APPL A
			  JOIN WTM_FLEXIBLE_APPL FA
			    ON A.APPL_ID = FA.APPL_ID 
			  LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
			    ON A.TENANT_ID = E.TENANT_ID
			   AND A.ENTER_CD = E.ENTER_CD
			   AND A.APPL_SABUN = E.SABUN
			   AND FA.SYMD = E.SYMD
			   AND FA.EYMD = E.EYMD
			  LEFT OUTER JOIN WTM_FLEXIBLE_STD_MGR M
			    ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD =  #{enterCd}
			   AND A.APPL_STATUS_CD NOT IN ('22','32')
			   AND (A.APPL_SABUN, FA.SYMD) IN (SELECT A.APPL_SABUN, MAX(SYMD)
											     FROM WTM_APPL A
											     JOIN WTM_FLEXIBLE_APPL FA
											       ON A.APPL_ID = FA.APPL_ID 
											    WHERE A.TENANT_ID = #{tenantId}
											      AND A.ENTER_CD =  #{enterCd}
											      AND A.APPL_SABUN = #{sabun}
											   GROUP BY A.APPL_SABUN )	   
	        ]]>
    </select>
    
    <select id="findByApplId" parameterType="Long" resultType="hashmap">
        <![CDATA[
			SELECT FA.FLEXIBLE_APPL_ID AS flexibleApplId
			     , FA.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
			     , FA.APPL_ID AS applId
			     , FA.YM AS ym
			     , FA.SYMD AS sYmd
			     , FA.EYMD AS eYmd
			     , FA.WORK_DAY AS workDay
			     , FA.REASON AS reason
			     , A.APPL_CD AS applCd
			     , A.APPL_STATUS_CD AS applStatusCd
			     , E.FLEXIBLE_EMP_ID AS flexibleEmpId
			     , E.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
			     , M.WORK_SHM AS workShm
			     , M.WORK_EHM AS workEhm
			     , M.CORE_SHM AS coreShm
			     , M.CORE_EHM AS coreEhm
			  FROM WTM_APPL A
			  JOIN WTM_FLEXIBLE_APPL FA
			    ON A.APPL_ID = FA.APPL_ID 
			  LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
			    ON A.TENANT_ID = E.TENANT_ID
			   AND A.ENTER_CD = E.ENTER_CD
			   AND A.APPL_SABUN = E.SABUN
			   AND FA.SYMD = E.SYMD
			   AND FA.EYMD = E.EYMD
			  LEFT OUTER JOIN WTM_FLEXIBLE_STD_MGR M
			    ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			 WHERE A.APPL_ID = #{applId}   
	        ]]>
    </select>
    
    <update id="updateWorkMinuteOfWtmFlexibleEmp" parameterType="map">
    	<![CDATA[
	    	UPDATE WTM_FLEXIBLE_EMP XX
			   SET XX.WORK_MINUTE = (
			   		SELECT FLOOR(X.C) + ( ( X.C -  FLOOR(X.C)) * 60 ) FROM (
						SELECT CASE WHEN PP.INFO_VALUE = 'B' THEN SUM(CASE D.HOLIDAY_YN WHEN 'Y' THEN 0 WHEN 'N' THEN 1 END) * 8
									ELSE FLOOR(SUM(CASE D.HOLIDAY_YN WHEN 'Y' THEN 1 WHEN 'N' THEN 1 END) * F_WTM_TO_NUMBER(P.INFO_VALUE, 'Y') / 7) * 60 END 
							AS C
						  FROM WTM_FLEXIBLE_EMP E
				    	  JOIN WTM_FLEXIBLE_STD_MGR M
				    	    ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID 
						  JOIN (
						  		SELECT X.SUN_YMD, X.MOON_YMD, X.DAY_NM, CASE X.HOL_EXCEPT_YN WHEN 'Y' THEN X.SUN_YN ELSE X.HOLIDAY_YN END AS HOLIDAY_YN, CASE WHEN X.ROWNUM % 7 = 0 THEN 7 ELSE X.ROWNUM % 7  END PATT_SEQ 
								FROM (
									SELECT D.*, @ROWNUM := @ROWNUM + 1 AS ROWNUM, CASE WHEN H.SUN_YN IS NULL THEN 'N' ELSE H.SUN_YN END AS SUN_YN, M.HOL_EXCEPT_YN
									FROM WTM_FLEXIBLE_STD_MGR M
									JOIN WTM_DAY_MGR D
									ON D.SUN_YMD BETWEEN M.USE_SYMD AND M.USE_EYMD
									LEFT OUTER JOIN WTM_HOLIDAY_MGR H
									ON D.SUN_YMD = H.HOLIDAY_YMD
									AND H.TENANT_ID = #{tenantId}
									AND H.ENTER_CD = #{enterCd}
									JOIN (SELECT @ROWNUM := 0) R
									ON 1=1
									WHERE M.FLEXIBLE_STD_MGR_ID = #{flexibleStdMgrId}
									AND D.SUN_YMD BETWEEN #{symd} AND #{eymd}
									ORDER BY D.SUN_YMD
								) X 
							) D
						    ON D.SUN_YMD BETWEEN E.SYMD AND E.EYMD
						  JOIN WTM_PROPERTIE P
						    ON E.TENANT_ID = P.TENANT_ID
						   AND E.ENTER_CD = P.ENTER_CD
						   AND P.INFO_KEY = 'OPTION_MAX_WORKTIME_1WEEK'
						  LEFT OUTER JOIN WTM_PROPERTIE PP
						    ON E.TENANT_ID = PP.TENANT_ID
						   AND E.ENTER_CD = PP.ENTER_CD
						   AND PP.INFO_KEY = 'OPTION_MAX_WORKTIME_1WEEK_CALC_TYPE'
						 WHERE E.TENANT_ID = #{tenantId}
						   AND E.ENTER_CD = #{enterCd}
						   AND E.FLEXIBLE_EMP_ID = #{flexibleEmpId}
						   AND ((M.HOL_EXCEPT_YN = 'Y' AND D.SUN_YMD NOT IN (SELECT H.HOLIDAY_YMD FROM WTM_HOLIDAY_MGR H WHERE H.TENANT_ID = P.TENANT_ID AND H.ENTER_CD = P.ENTER_CD))
						        OR
						        (M.HOL_EXCEPT_YN IS NULL OR M.HOL_EXCEPT_YN != 'Y'))
					) X
				),
				XX.OT_MINUTE = (
			   		SELECT FLOOR(X.C) + ( ( X.C -  FLOOR(X.C)) * 60 ) FROM (
						SELECT FLOOR(SUM(CASE D.HOLIDAY_YN WHEN 'Y' THEN 1 WHEN 'N' THEN 1 END) * F_WTM_TO_NUMBER(P.INFO_VALUE, 'Y') / 7) * 60 
							AS C
						  FROM WTM_FLEXIBLE_EMP E
				    	  JOIN WTM_FLEXIBLE_STD_MGR M
				    	    ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
						  JOIN (
						  		SELECT X.SUN_YMD, X.MOON_YMD, X.DAY_NM, CASE X.HOL_EXCEPT_YN WHEN 'Y' THEN X.SUN_YN ELSE X.HOLIDAY_YN END AS HOLIDAY_YN, CASE WHEN X.ROWNUM % 7 = 0 THEN 7 ELSE X.ROWNUM % 7  END PATT_SEQ 
								FROM (
									SELECT D.*, @ROWNUM := @ROWNUM + 1 AS ROWNUM, CASE WHEN H.SUN_YN IS NULL THEN 'N' ELSE H.SUN_YN END AS SUN_YN, M.HOL_EXCEPT_YN
									FROM WTM_FLEXIBLE_STD_MGR M
									JOIN WTM_DAY_MGR D
									ON D.SUN_YMD BETWEEN M.USE_SYMD AND M.USE_EYMD
									LEFT OUTER JOIN WTM_HOLIDAY_MGR H
									ON D.SUN_YMD = H.HOLIDAY_YMD
									AND H.TENANT_ID = #{tenantId}
									AND H.ENTER_CD = #{enterCd}
									JOIN (SELECT @ROWNUM := 0) R
									ON 1=1
									WHERE M.FLEXIBLE_STD_MGR_ID = #{flexibleStdMgrId}
									AND D.SUN_YMD BETWEEN #{symd} AND #{eymd}
									ORDER BY D.SUN_YMD
								) X 
							) D
						    ON D.SUN_YMD BETWEEN E.SYMD AND E.EYMD
						  JOIN WTM_PROPERTIE P
						    ON E.TENANT_ID = P.TENANT_ID
						   AND E.ENTER_CD = P.ENTER_CD
						   AND P.INFO_KEY = 'OPTION_MAX_WORKTIME_ADD'
						  LEFT OUTER JOIN WTM_PROPERTIE PP
						    ON E.TENANT_ID = PP.TENANT_ID
						   AND E.ENTER_CD = PP.ENTER_CD
						   AND PP.INFO_KEY = 'OPTION_MAX_WORKTIME_1WEEK_CALC_TYPE'
						 WHERE E.TENANT_ID = #{tenantId}
						   AND E.ENTER_CD = #{enterCd}
						   AND E.FLEXIBLE_EMP_ID = #{flexibleEmpId}
						   AND ((M.HOL_EXCEPT_YN = 'Y' AND D.SUN_YMD NOT IN (SELECT H.HOLIDAY_YMD FROM WTM_HOLIDAY_MGR H WHERE H.TENANT_ID = P.TENANT_ID AND H.ENTER_CD = P.ENTER_CD))
						        OR
						        (M.HOL_EXCEPT_YN IS NULL OR M.HOL_EXCEPT_YN != 'Y'))
					) X
				) 
			 WHERE XX.FLEXIBLE_EMP_ID = #{flexibleEmpId}
		 ]]>
    </update>
    
    <select id="getWorkPattern" parameterType="map" resultType="wtmFlexibleApplDet">
        <![CDATA[
			SELECT D.SUN_YMD AS YMD
			     , CASE WHEN #{holExceptYn} = 'Y' AND D.HOLIDAY_YN = 'Y' AND T.HOL_YN = 'N' THEN TM.HOL_TIME_CD_MGR_ID ELSE P.TIME_CD_MGR_ID END AS TIME_CD_MGR_ID
			     , CASE WHEN P.PLAN_SHM IS NOT NULL AND P.PLAN_SHM <> '' THEN F_WTM_STR_CONCAT(D.SUN_YMD, P.PLAN_SHM) ELSE NULL END AS PLAN_SDATE
-- 			     , CASE WHEN P.PLAN_EHM IS NOT NULL AND P.PLAN_EHM <> '' THEN F_WTM_STR_CONCAT(D.SUN_YMD, P.PLAN_EHM) ELSE NULL END AS PLAN_EDATE
			     , CASE WHEN P.PLAN_EHM IS NOT NULL AND P.PLAN_EHM <> '' THEN 
			     		CASE WHEN P.PLAN_SHM >= P.PLAN_EHM THEN F_WTM_STR_CONCAT(DATE_FORMAT(DATE_ADD(STR_TO_DATE(D.SUN_YMD, '%Y%m%d'), INTERVAL 1 DAY), '%Y%m%d') , P.PLAN_EHM) ELSE F_WTM_STR_CONCAT(D.SUN_YMD, P.PLAN_EHM) END
			     	ELSE NULL END AS PLAN_EDATE
			     , P.PLAN_MINUTE
			     , P.OTB_MINUTE
			     , P.OTA_MINUTE
			     , CASE #{holExceptYn} WHEN 'Y' THEN CASE WHEN D.HOLIDAY_YN IS NULL THEN T.HOL_YN ELSE D.HOLIDAY_YN END ELSE T.HOL_YN END AS HOLIDAY_YN
			  FROM WTM_WORK_PATT_DET P
			  JOIN WTM_TIME_CD_MGR TM
				 ON TM.TIME_CD_MGR_ID = P.TIME_CD_MGR_ID
			  JOIN ( SELECT X.SUN_YMD
			              , X.MOON_YMD
							  , X.DAY_NM
							  , CASE #{holExceptYn} WHEN 'Y' THEN X.SUN_YN 
							         ELSE X.HOLIDAY_YN END AS HOLIDAY_YN
							  , CASE WHEN X.ROWNUM % #{maxPattDet} = 0 THEN #{maxPattDet} 
							         ELSE X.ROWNUM % #{maxPattDet}  END PATT_SEQ 
						  FROM ( SELECT D.*, H.SUN_YN, @ROWNUM := @ROWNUM + 1 AS ROWNUM
									  FROM WTM_DAY_MGR D
									  LEFT OUTER JOIN WTM_HOLIDAY_MGR H
										 ON D.SUN_YMD = H.HOLIDAY_YMD
										AND H.TENANT_ID = #{tenantId}
										AND H.ENTER_CD = #{enterCd}
									  JOIN (SELECT @ROWNUM := 0) R
									    ON 1=1
									 WHERE D.SUN_YMD BETWEEN #{sYmd} AND #{eYmd}
									 ORDER BY D.SUN_YMD ) X
					  ) D
				 ON P.SEQ = D.PATT_SEQ
			  JOIN WTM_TIME_CD_MGR T
				 ON P.TIME_CD_MGR_ID = T.TIME_CD_MGR_ID
			 WHERE P.FLEXIBLE_STD_MGR_ID = #{flexibleStdMgrId}
			   AND D.SUN_YMD BETWEEN #{sYmd} AND #{eYmd}
	        ]]>
    </select>
    
    <select id="getElasApplDetail" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT START_YMD AS startYmd
			     , END_YMD AS endYmd
			     , YMD AS ymd
			     , WEEKDAY AS weekday
			     , PLAN_SDATE AS planSdate
			     , PLAN_EDATE AS planEdate
			     , PLAN_MINUTE AS planMinute
			     , OTB_MINUTE AS otbMinute
			     , OTA_MINUTE AS otaMinute
			     , WORK_MINUTE AS workMinute
			     , OT_MINUTE AS otMinute
			     , HOLIDAY_MINUTE AS holidayMinute
			  FROM (
							SELECT START_YMD
							     , END_YMD
							     , YMD
							     , WEEKDAY
							     , F_WTM_DATE_FORMAT(PLAN_SDATE, 'HI') AS PLAN_SDATE
								  , F_WTM_DATE_FORMAT(PLAN_EDATE, 'HI') AS PLAN_EDATE
								  , SUM(PLAN_MINUTE) AS PLAN_MINUTE
								  , SUM(OTB_MINUTE) AS OTB_MINUTE
								  , SUM(OTA_MINUTE) AS OTA_MINUTE
							     , SUM(WORK_MINUTE) AS WORK_MINUTE
							     , SUM(OT_MINUTE) AS OT_MINUTE
							     , SUM(PLAN_MINUTE)-SUM(WORK_MINUTE) AS HOLIDAY_MINUTE
							  FROM ( SELECT F_WTM_DATE_FORMAT(DATE_SUB(YMD, INTERVAL (CASE WHEN DAYOFWEEK(YMD)<startWeekDay THEN maxWeekDay + DAYOFWEEK(YMD) - startWeekDay ELSE DAYOFWEEK(YMD)-startWeekDay END) DAY), 'YMD') AS START_YMD
										  , F_WTM_DATE_FORMAT(DATE_ADD(YMD, INTERVAL (CASE WHEN DAYOFWEEK(YMD)>endWeekDay THEN maxWeekDay - DAYOFWEEK(YMD) + startWeekDay ELSE DAYOFWEEK(YMD)-endWeekDay END) DAY), 'YMD') AS END_YMD
										  , YMD
										   , CASE F_WTM_WEEKDAY(YMD) 
										     WHEN '1' THEN '일' 
											 WHEN '2' THEN '월' 
											 WHEN '3' THEN '화' 
											 WHEN '4' THEN '수' 
											 WHEN '5' THEN '목' 
											 WHEN '6' THEN '금' 
											 WHEN '7' THEN '토' END AS WEEKDAY
									      , HOLIDAY_YN
										  , PLAN_SDATE
										  , PLAN_EDATE
										  , PLAN_MINUTE
										  , OTB_MINUTE
										  , OTA_MINUTE
										  , CASE WHEN HOLIDAY_YN = 'N' AND PLAN_MINUTE IS NOT NULL AND PLAN_MINUTE<>0 THEN PLAN_MINUTE ELSE 0 END AS WORK_MINUTE
						              , CASE WHEN HOLIDAY_YN = 'Y' AND PLAN_MINUTE IS NOT NULL AND PLAN_MINUTE<>0 THEN PLAN_MINUTE ELSE 0 END
											     + CASE WHEN OTB_MINUTE IS NOT NULL AND OTB_MINUTE<>0 THEN OTB_MINUTE ELSE 0 END
											     + CASE WHEN OTA_MINUTE IS NOT NULL AND OTA_MINUTE<>0 THEN OTA_MINUTE ELSE 0 END AS OT_MINUTE
									  FROM ${tableName} D
									  JOIN ( SELECT F_WTM_WEEKDAY(MIN(YMD)) AS startWeekDay, F_WTM_WEEKDAY(MAX(YMD)) AS endWeekDay, MAX(F_WTM_WEEKDAY(YMD)) AS maxWeekDay 
									           FROM ${tableName}
									          WHERE ${key} = ${value}) T  
										 ON 1=1
									 WHERE  ${key} = ${value} ) S
							GROUP BY S.START_YMD, YMD
							WITH ROLLUP 
					) G
			 WHERE START_YMD IS NOT NULL AND START_YMD<>''
			   AND ((#{totalYn}='Y' AND (YMD IS NULL OR YMD=''))
   				OR (#{totalYn}='N' AND START_YMD=#{symd} AND YMD<>''))
   			 ORDER BY START_YMD, YMD
	        ]]>
    </select>
    
    <select id="getImsiFlexAppl" parameterType="map" resultType="wtmFlexibleStd">
    	<![CDATA[
    	SELECT A.APPL_ID AS applId
		     , A.TENANT_ID AS tenantId
		     , A.ENTER_CD AS enterCd
		     , A.APPL_SABUN AS applSabun
		     , A.APPL_CD AS applCd
		     , A.APPL_STATUS_CD AS applStatusCd
		     , F.FLEXIBLE_APPL_ID AS flexibleApplId
		     , F.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
		     , F.SYMD AS sYmd
		     , F.EYMD AS eYmd
		     , F.WORK_DAY AS workDay
		     , F.REASON AS reason
		     , M.WORK_TYPE_CD AS workTypeCd
		     , (SELECT APPL_NM FROM WTM_APPL_CODE WHERE TENANT_ID = A.TENANT_ID AND ENTER_CD = A.ENTER_CD AND APPL_CD = A.APPL_CD) AS workTypeNm
		     , M.FLEXIBLE_NM AS flexibleNm
		     , M.USE_SYMD AS useSymd
		     , M.USE_EYMD AS useEymd
		     , M.WORK_SHM AS workShm
		     , M.WORK_EHM AS workEhm
		     , M.CORE_SHM AS coreShm
		     , M.CORE_EHM AS coreEhm
		     , M.USED_TERM_OPT AS usedTermOpt
		     , CASE F_WTM_WEEKDAY(USE_SYMD) 
				WHEN 1 THEN '일요일'
				WHEN 2 THEN '월요일'
				WHEN 3 THEN '화요일'
				WHEN 4 THEN '수요일'
				WHEN 5 THEN '목요일'
				WHEN 6 THEN '금요일'
				WHEN 7 THEN '토요일' END AS weekDay
		  FROM WTM_APPL A
		  JOIN WTM_FLEXIBLE_APPL F
		    ON A.APPL_ID = F.APPL_ID
		  JOIN WTM_FLEXIBLE_STD_MGR M
		    ON A.TENANT_ID = M.TENANT_ID
		   AND A.ENTER_CD = M.ENTER_CD
		   AND F.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
		 WHERE A.TENANT_ID = #{tenantId}
		   AND A.ENTER_CD = #{enterCd}
		   AND A.APPL_SABUN = #{sabun}
		   AND A.APPL_STATUS_CD = #{applStatusCd}
		 ORDER BY A.APPL_YMD DESC
    	]]>
    </select>
</mapper>
