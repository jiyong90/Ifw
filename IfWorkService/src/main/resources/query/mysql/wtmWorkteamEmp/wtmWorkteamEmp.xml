<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmWorkteamEmpMapper">
    <select id="getWorkteamEmpList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT E.WORKTEAM_EMP_ID as workteamEmpId
			    , E.WORKTEAM_MGR_ID as workteamMgrId
			    , E.SABUN as sabun
			    , E.SYMD as symd
			    , E.EYMD as eymd
			    , E.NOTE as note
			    , C.ORG_CD as orgCd
			    , C.CLASS_CD as classCd
			    , C.EMP_NM as empNm
			    , CASE WHEN E.STATUS = 'I' THEN '근무계획생성중' WHEN E.STATUS = 'Y' THEN '근무계획생성완료' ELSE '' END AS STATUS
            FROM WTM_WORKTEAM_MGR A
                     INNER JOIN WTM_WORKTEAM_EMP E
                                ON A.WORKTEAM_MGR_ID = E.WORKTEAM_MGR_ID
                     INNER JOIN  WTM_EMP_HIS C
                                 ON A.TENANT_ID = C.TENANT_ID
                                     AND A.ENTER_CD = C.ENTER_CD
                                     AND E.SABUN = C.SABUN
			 WHERE C.TENANT_ID= #{tenantId} 
			   AND E.SABUN = C.SABUN 
			   AND C.SYMD <= #{eymd} 
			   AND C.EYMD >= #{symd} 
			   AND #{symd} BETWEEN C.SYMD AND C.EYMD 
			   AND C.STATUS_CD ='AA'
			   AND C.ENTER_CD= #{enterCd}
			   AND E.SYMD <= #{eymd}
  			   AND E.EYMD >= #{symd}
			   AND (E.SABUN like CONCAT('%', #{searchKeyword, jdbcType=VARCHAR}, '%')  OR C.EMP_NM like CONCAT('%', #{searchKeyword, jdbcType=VARCHAR}, '%'))
        ]]>
    </select>
    
    <select id="dupCheckByYmd" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT A.SABUN AS sabun
			     , A.SYMD AS symd
			     , A.EYMD AS eymd
			     , B.TENANT_ID AS tenantId
			     , B.ENTER_CD AS enterCd
			     , B.WORKTEAM_MGR_ID AS workteamMgrId
			     , A.WORKTEAM_EMP_ID AS workteamEmpId
			  FROM WTM_WORKTEAM_EMP A 
			  JOIN WTM_WORKTEAM_MGR B 
			    ON A.WORKTEAM_MGR_ID = B.WORKTEAM_MGR_ID 
			   AND B.TENANT_ID = #{tenantId} 
			   AND B.ENTER_CD = #{enterCd}
			  WHERE A.SABUN=#{sabun} 
			    AND (#{sYmd} BETWEEN A.SYMD AND A.EYMD OR #{eYmd} BETWEEN A.SYMD AND A.EYMD) 
			    AND #{workteamEmpId} != A.WORKTEAM_EMP_ID
        ]]>
    </select>
    
    <select id="dupCheckFlexibleByYmd" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT A.SABUN AS sabun
			     , A.SYMD AS symd
			     , A.EYMD AS eymd
			  FROM WTM_FLEXIBLE_EMP A 
			  JOIN WTM_FLEXIBLE_STD_MGR B 
			    ON A.FLEXIBLE_STD_MGR_ID = B.FLEXIBLE_STD_MGR_ID 
			   AND B.TENANT_ID = #{tenantId} 
			   AND B.ENTER_CD = #{enterCd}
			  WHERE A.SABUN=#{sabun}
			  	AND A.WORK_TYPE_CD NOT IN ('BASE', 'WORKTEAM')
			    AND (#{sYmd} BETWEEN A.SYMD AND A.EYMD OR #{eYmd} BETWEEN A.SYMD AND A.EYMD)
	     ]]>
    </select>
    
    <select id="getWorkteamEmp" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT M.WORKTEAM_MGR_ID AS workteamMgrId
			     , E.WORKTEAM_EMP_ID AS workteamEmpId
			     , E.SABUN AS sabun
			     , E.SYMD AS symd
			     , E.EYMD AS eymd
			     , E.NOTE AS note
			  FROM WTM_WORKTEAM_MGR M
		     JOIN WTM_WORKTEAM_EMP E
		       ON M.WORKTEAM_MGR_ID = E.WORKTEAM_MGR_ID
		    WHERE M.TENANT_ID = #{tenantId}
		      AND M.ENTER_CD = #{enterCd}
		      AND E.SABUN = #{sabun} 
		      AND #{ymd} BETWEEN E.SYMD AND E.EYMD 
        ]]>
    </select>
    
      <select id="getWorkteamMgrIdAndEymd" parameterType="map" resultType="int">
        <![CDATA[
			SELECT count(*)
		    FROM WTM_WORKTEAM_EMP E
		    WHERE E.WORKTEAM_MGR_ID = #{workteamMgrId} 
		    	AND E.EYMD >= #{eymd} 
        ]]>
    </select>
</mapper>
