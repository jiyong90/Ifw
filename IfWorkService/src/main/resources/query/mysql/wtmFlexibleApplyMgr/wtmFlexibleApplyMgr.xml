<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmFlexibleApplyMgrMapper">
	
	<select id="getApplyList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT B.FLEXIBLE_APPLY_ID AS flexibleApplyId
        		 , B.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
        		 , M.WORK_TYPE_CD AS workTypeCd
        		 , B.TENANT_ID AS tenantId
        		 , B.ENTER_CD AS enterCd
        		 , B.APPLY_NM AS applyNm
        		 , B.USE_SYMD AS useSymd
        		 , B.USE_EYMD AS useEymd
        		 , B.REPEAT_TYPE_CD AS repeatTypeCd
        		 , B.REPEAT_CNT AS repeatCnt
        		 , B.WORK_MINUTE AS workMinute
        		 , B.OT_MINUTE AS otMinute
        		 , '0' AS selectImg
        		 , CASE WHEN M.WORK_TYPE_CD='ELAS' THEN '1' ELSE NULL END AS planImg
        		 , B.APPLY_YN as applyYn
			     , CASE WHEN B.APPLY_YN = 'Y' THEN '완료'
			     		WHEN B.APPLY_YN IN ('I', 'C') THEN '처리중'
					    ELSE CONCAT('<a class="basic" onClick="setEndConfirm(', B.FLEXIBLE_APPLY_ID, ')">확정</a>') END AS endImg
				 , CASE WHEN B.APPLY_YN = 'Y' THEN CONCAT('<a class="basic" onClick="setCancleConfirm(', B.FLEXIBLE_APPLY_ID, ')">취소</a>')
			     		WHEN B.APPLY_YN IN ('I', 'C') THEN '처리중' ELSE ''
					    END AS cancleImg
			     , (SELECT COUNT(*) FROM WTM_FLEXIBLE_APPLY_EMP_TEMP A WHERE B.FLEXIBLE_APPLY_ID = A.FLEXIBLE_APPLY_ID) AS CNT
        		 , B.NOTE AS note
			  FROM WTM_FLEXIBLE_APPLY B
			  JOIN WTM_FLEXIBLE_STD_MGR M
			    ON B.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			 WHERE B.TENANT_ID = #{tenantId}
			   AND B.ENTER_CD = #{enterCd} 
			   AND REPLACE(#{sYmd}, '-', '') BETWEEN B.USE_SYMD AND B.USE_EYMD
        ]]>
    </select>
    
    <select id="getEymd" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT F_WTM_GET_FLEXIBLE_APPLYEYMD(#{symd}, #{repeatTypeCd}, #{repeatCnt}) AS eymd
  			  FROM DUAL
        ]]>
    </select>
    
    <select id="getworkTypeList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.CODE_CD AS codeCd
			     , A.CODE_NM AS codeNm
			  FROM WTM_CODE A
			 INNER JOIN WTM_FLEXIBLE_STD_MGR B
			    ON A.TENANT_ID = B.TENANT_ID
			   AND A.ENTER_CD = B.ENTER_CD
			   AND B.FLEXIBLE_STD_MGR_ID = #{flexibleStdMgrId}
			   AND INSTR(A.NOTE, B.WORK_TYPE_CD) > 0
			 ORDER BY A.SEQ
        ]]>
    </select>
    
    <select id="getApplyRepeatList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT USE_SYMD AS useSymd, USE_EYMD AS useEymd, REPEAT_CNT as repeatCnt, REPEAT_TYPE_CD AS repeatTypeCd
  			  FROM WTM_FLEXIBLE_APPLY
			 WHERE FLEXIBLE_APPLY_ID = #{flexibleApplyId}
        ]]>
    </select>
    
    <select id="getApplyConfirmList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT DISTINCT A.USE_SYMD as useSymd
        		 , A.USE_EYMD as useEymd 
        		 , B.SABUN AS sabun, C.WORK_TYPE_CD AS workTypeCd
        		 , A.FLEXIBLE_APPLY_ID AS flexibleApplyId
        		 , A.FLEXIBLE_STD_MGR_ID AS flexibleStdMgrId
        		 , A.APPLY_NM AS flexibleNm
        		 , A.TENANT_ID AS tenantId
        		 , A.ENTER_CD AS enterCd
        		 , A.NOTE AS note
        		 , B.FLEXIBLE_APPLY_TEMP_ID AS flexibleApplyTempId
			  FROM WTM_FLEXIBLE_APPLY A
			 INNER JOIN WTM_FLEXIBLE_APPLY_EMP_TEMP B
			    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
			    AND B.APPLY_YN != 'Y'
			 INNER JOIN WTM_FLEXIBLE_STD_MGR C
			    ON A.FLEXIBLE_STD_MGR_ID = C.FLEXIBLE_STD_MGR_ID
			 WHERE A.FLEXIBLE_APPLY_ID = #{flexibleApplyId}        ]]>
    </select>
    
    <select id="getApplyConfirmCancelList" parameterType="map" resultType="hashmap">
        <![CDATA[
			select
				B.FLEXIBLE_EMP_ID as flexibleEmpId,
				B.TENANT_ID as tenantId,
				B.ENTER_CD as enterCd,
				B.FLEXIBLE_STD_MGR_ID as flexibleStdMgrId,
				B.SABUN as sabun,
				B.SYMD as symd,
				B.EYMD as eymd,
				B.WORK_TYPE_CD as workTypeCd,
				B.WORK_MINUTE as workMinute,
				B.OT_MINUTE as otMinute,
				B.FLEXIBLE_NM as flexibleNm,
				B.NOTE as note,
				B.UPDATE_DATE as updateDate,
				B.UPDATE_ID as updateId
			from
				(
					SELECT
						DISTINCT A.USE_SYMD,
						A.USE_EYMD,
						B.SABUN,
						C.WORK_TYPE_CD,
						A.FLEXIBLE_APPLY_ID,
						A.FLEXIBLE_STD_MGR_ID,
						A.APPLY_NM,
						A.TENANT_ID,
						A.ENTER_CD,
						A.NOTE,
						B.FLEXIBLE_APPLY_TEMP_ID
					FROM
						WTM_FLEXIBLE_APPLY A
					INNER JOIN WTM_FLEXIBLE_APPLY_EMP_TEMP B ON
						A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
						AND B.APPLY_YN = 'Y'
					INNER JOIN WTM_FLEXIBLE_STD_MGR C ON
						A.FLEXIBLE_STD_MGR_ID = C.FLEXIBLE_STD_MGR_ID
					WHERE
						A.FLEXIBLE_APPLY_ID = #{flexibleApplyId}
				) X
			INNER JOIN WTM_FLEXIBLE_EMP B ON
				X.TENANT_ID = B.TENANT_ID
				and X.ENTER_CD = B.ENTER_CD
				and X.FLEXIBLE_STD_MGR_ID = B.FLEXIBLE_STD_MGR_ID
				and X.USE_EYMD >= B.SYMD
				and X.USE_SYMD <= B.EYMD
				and X.SABUN = B.SABUN
				and B.SYMD <= #{eymd}
				and B.EYMD >= #{symd}
		 ]]>
		<if test="sabun!=null">
			and X.SABUN = #{sabun}
		</if>
    </select>
    
    <insert id="insertApplyEmp" parameterType="map" >
    	INSERT INTO WTM_FLEXIBLE_EMP (TENANT_ID, ENTER_CD, FLEXIBLE_STD_MGR_ID, SABUN, SYMD, EYMD, WORK_TYPE_CD, FLEXIBLE_NM, NOTE, UPDATE_DATE, UPDATE_ID)
		VALUES (#{tenantId}, #{enterCd}, #{flexibleStdMgrId}, #{sabun}, #{symd}, #{eymd}, #{workTypeCd}, #{flexibleNm}, #{note}, NOW(), #{userId}
		)
    </insert>
    
    <update id="updateApplyEmp" parameterType="map">
			UPDATE WTM_FLEXIBLE_APPLY SET 
				APPLY_YN = 'Y'
				, UPDATE_DATE = NOW()
				, UPDATE_ID = #{userId}
			WHERE FLEXIBLE_APPLY_ID = #{flexibleApplyId}
	</update>
    
    <select id="setApplyEmpId" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT FLEXIBLE_EMP_ID AS flexibleEmpId
			  FROM WTM_FLEXIBLE_EMP
			 WHERE TENANT_ID = #{tenantId}
			   AND ENTER_CD = #{enterCd}
			   AND FLEXIBLE_STD_MGR_ID = #{flexibleStdMgrId}
			   AND SABUN = #{sabun}
			   AND SYMD = #{symd}
			   AND EYMD = #{eymd}
        ]]>
    </select>
    
	<select id="getApplyGrpList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.FLEXIBLE_APPLY_GROUP_ID AS flexibleApplyGroupId
        		 , A.FLEXIBLE_APPLY_ID AS flexibleApplyId
        		 , A.ORG_CD AS orgCd
        		 , F_WTM_GET_ORG_NM(B.TENANT_ID, B.ENTER_CD, A.ORG_CD, B.USE_SYMD)  AS orgNm
        		 , A.JOB_CD AS jobCd
        		 , A.DUTY_CD AS dutyCd
        		 , A.POS_CD AS posCd
        		 , A.CLASS_CD AS classCd
        		 , A.WORKTEAM_CD AS workteamCd
        		 , A.NOTE AS note
			  FROM WTM_FLEXIBLE_APPLY_GROUP A
			 INNER JOIN WTM_FLEXIBLE_APPLY B
			    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
			 WHERE A.FLEXIBLE_APPLY_ID =  #{flexibleApplyId}
        ]]>
    </select>
    
	<insert id="insertGrp" parameterType="java.util.List" >
        INSERT INTO WTM_FLEXIBLE_APPLY_GROUP (
        	  FLEXIBLE_APPLY_ID
        	, ORG_CD
        	, DUTY_CD
        	, POS_CD
        	, CLASS_CD
        	, WORKTEAM_CD
        	, NOTE
        	, UPDATE_DATE
        	, UPDATE_ID
        ) VALUES 
       <foreach collection="list" item="item" separator=", ">
		(     #{item.flexibleApplyId}
        	, #{item.orgCd}
        	, #{item.dutyCd}
        	, #{item.posCd}
        	, #{item.classCd}
        	, #{item.workteamCd}
        	, #{item.note}
        	, NOW()
        	, #{item.userId}
        )
		</foreach>
    </insert>
    
    <update id="updateGrp" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";">
			UPDATE WTM_FLEXIBLE_APPLY_GROUP SET 
				ORG_CD = #{item.orgCd}
	            , DUTY_CD = #{item.dutyCd}
	            , POS_CD = #{item.posCd}
	            , CLASS_CD = #{item.classCd}
	            , WORKTEAM_CD = #{item.workteamCd}
	            , NOTE = #{item.note}
				, UPDATE_DATE = NOW()
				, UPDATE_ID = #{item.userId}
			WHERE FLEXIBLE_APPLY_GROUP_ID = #{item.flexibleapplyGroupId}
		</foreach>
	</update>
    
    <update id="deleteGrp" parameterType="hashmap">
		DELETE FROM WTM_FLEXIBLE_APPLY_GROUP 
		WHERE FLEXIBLE_APPLY_GROUP_ID IN (
		<foreach collection="list" item="item" separator=", ">
	        ${item.flexibleApplyGroupId}
	    </foreach> 
    		)
	</update>
	
	<select id="getApplyEmpList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT A.FLEXIBLE_APPLY_EMP_ID AS flexibleApplyEmpId
        		 , A.FLEXIBLE_APPLY_ID AS flexibleApplyId
        		 , F_WTM_GET_EMP_ORG_NM(B.TENANT_ID, B.ENTER_CD, A.SABUN, B.USE_SYMD)  AS orgNm
        		 , A.SABUN AS sabun
        		 , F_WTM_GET_EMP_NM(B.TENANT_ID, B.ENTER_CD, A.SABUN, B.USE_SYMD ) AS empNm
        		 , A.NOTE AS note
			  FROM WTM_FLEXIBLE_APPLY_EMP A
			 INNER JOIN WTM_FLEXIBLE_APPLY B
			    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
			 WHERE A.FLEXIBLE_APPLY_ID =  #{flexibleApplyId}
        ]]>
    </select>
    
	<insert id="insertEmp" parameterType="java.util.List" >
        INSERT INTO WTM_FLEXIBLE_APPLY_EMP (
        	  FLEXIBLE_APPLY_ID
        	, SABUN
        	, NOTE
        	, UPDATE_DATE
        	, UPDATE_ID
        ) VALUES 
       <foreach collection="list" item="item" separator=", ">
		(     #{item.flexibleApplyId}
        	, #{item.sabun}
        	, #{item.note}
        	, NOW()
        	, #{item.userId}
        )
		</foreach>
    </insert>
    
    <update id="updateEmp" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";">
			UPDATE WTM_FLEXIBLE_APPLY_EMP SET 
				NOTE = #{item.note}
				, UPDATE_DATE = NOW()
				, UPDATE_ID = #{item.userId}
			WHERE FLEXIBLE_APPLY_EMP_ID = #{item.flexibleApplyEmpId}
		</foreach>
	</update>
    
    <update id="deleteEmp" parameterType="hashmap">
		DELETE FROM WTM_FLEXIBLE_APPLY_EMP 
		 WHERE FLEXIBLE_APPLY_EMP_ID IN (
			<foreach collection="list" item="item" separator="," index="index">
		        ${item.flexibleApplyEmpId}
		    </foreach> 
    		)
	</update>
	
	<update id="deleteApplyEmpTemp" parameterType="map">
		DELETE FROM WTM_FLEXIBLE_APPLY_EMP_TEMP 
		 WHERE FLEXIBLE_APPLY_ID = ${flexibleApplyId}
	</update>
	
	<insert id="insertApplyEmpTemp" parameterType="map" >
        INSERT INTO WTM_FLEXIBLE_APPLY_EMP_TEMP (
        	  FLEXIBLE_APPLY_ID
        	, TENANT_ID
        	, ENTER_CD
        	, SABUN
        	, UPDATE_DATE
        	, UPDATE_ID
        )
        SELECT BB.FLEXIBLE_APPLY_ID, AA.TENANT_ID, AA.ENTER_CD, AA.SABUN, NOW(), #{userId}
		  FROM WTM_EMP_HIS AA
		 INNER JOIN (SELECT A.FLEXIBLE_APPLY_ID, A.TENANT_ID, A.ENTER_CD, A.USE_SYMD, B.ORG_CD, B.JOB_CD, B.DUTY_CD, B.POS_CD, B.CLASS_CD, B.WORKTEAM_CD
							  FROM WTM_FLEXIBLE_APPLY A
							 INNER JOIN WTM_FLEXIBLE_APPLY_GROUP B
							    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
							 WHERE A.FLEXIBLE_APPLY_ID = ${flexibleApplyId}
							   AND IFNULL(B.WORKTEAM_CD, '') = ''
							) BB
		    ON AA.TENANT_ID = BB.TENANT_ID
		   AND AA.ENTER_CD = BB.ENTER_CD
		 WHERE AA.STATUS_CD = 'AA' 
			AND BB.USE_SYMD BETWEEN AA.SYMD AND AA.EYMD
			AND (BB.ORG_CD IS NULL OR BB.ORG_CD = '' OR  AA.ORG_CD = BB.ORG_CD)
			AND (BB.JOB_CD IS NULL OR BB.JOB_CD = '' OR AA.JOB_CD = BB.JOB_CD)
			AND (BB.DUTY_CD IS NULL OR BB.DUTY_CD = '' OR AA.DUTY_CD = BB.DUTY_CD)
			AND (BB.POS_CD IS NULL OR BB.POS_CD = '' OR AA.POS_CD = BB.POS_CD)
			AND (BB.CLASS_CD IS NULL OR BB.CLASS_CD = '' OR AA.CLASS_CD = BB.CLASS_CD)
		UNION
		SELECT C.FLEXIBLE_APPLY_ID, A.TENANT_ID, A.ENTER_CD, B.SABUN, NOW(), #{userId}
		  FROM WTM_WORKTEAM_MGR A
		 INNER JOIN WTM_WORKTEAM_EMP B
		    ON A.WORKTEAM_MGR_ID = B.WORKTEAM_MGR_ID
		 INNER JOIN (SELECT A.FLEXIBLE_APPLY_ID, A.TENANT_ID, A.ENTER_CD, A.USE_SYMD, B.ORG_CD, B.JOB_CD, B.DUTY_CD, B.POS_CD, B.CLASS_CD, B.WORKTEAM_CD
						  FROM WTM_FLEXIBLE_APPLY A
						 INNER JOIN WTM_FLEXIBLE_APPLY_GROUP B
						    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
						 WHERE A.FLEXIBLE_APPLY_ID = ${flexibleApplyId}
						   AND IFNULL(B.WORKTEAM_CD, '') != ''
						) C
		    ON A.TENANT_ID = C.TENANT_ID
		   AND A.ENTER_CD = C.ENTER_CD
		   AND A.WORKTEAM_MGR_ID = C.WORKTEAM_CD
		   AND C.USE_SYMD BETWEEN B.SYMD AND B.EYMD
		UNION
		SELECT A.FLEXIBLE_APPLY_ID, A.TENANT_ID, A.ENTER_CD, B.SABUN, NOW(), #{userId}
		  FROM WTM_FLEXIBLE_APPLY A
		 INNER JOIN WTM_FLEXIBLE_APPLY_EMP B
		    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
		 WHERE A.FLEXIBLE_APPLY_ID = ${flexibleApplyId}
    </insert>
    
    <select id="getApplyEmpPopList" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT B.SABUN AS sabun
				  , C.EMP_NM AS empNm
				  , F_WTM_GET_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.ORG_CD, A.USE_SYMD) AS orgNm
				  , F_WTM_GET_CODE_NM(C.TENANT_ID, C.ENTER_CD, 'DUTY_CD', C.DUTY_CD, A.USE_SYMD) AS dutyNm
				  , F_WTM_GET_CODE_NM(C.TENANT_ID, C.ENTER_CD, 'CLASS_CD', C.CLASS_CD, A.USE_SYMD) AS classNm
				  , F_WTM_GET_CODE_NM(C.TENANT_ID, C.ENTER_CD, 'POS_CD', C.POS_CD, A.USE_SYMD) AS posNm
			  FROM WTM_FLEXIBLE_APPLY A
			 INNER JOIN WTM_FLEXIBLE_APPLY_EMP_TEMP B
			    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
			 INNER JOIN WTM_EMP_HIS C
			    ON A.TENANT_ID = C.TENANT_ID
			   AND A.ENTER_CD = C.ENTER_CD
			   AND B.SABUN = C.SABUN
			   AND A.USE_SYMD BETWEEN C.SYMD AND C.EYMD
			 WHERE A.FLEXIBLE_APPLY_ID =  #{flexibleApplyId}
        ]]>
    </select>
    
  	<update id="updateFlexibleEmpTemp" parameterType="Long">
		UPDATE WTM_FLEXIBLE_APPLY_EMP_TEMP SET
			APPLY_YN = 'Y'
 		WHERE FLEXIBLE_APPLY_TEMP_ID = #{flexibleApplyTempId}
	</update>
  	
  	
 	<update id="updateFlexibleApplyAll" parameterType="Long">
	  	UPDATE WTM_FLEXIBLE_APPLY X
			JOIN (
			SELECT A.FLEXIBLE_APPLY_ID, CASE WHEN B.ALL_CNT = B.APPLY_CNT THEN 'Y' ELSE 'N' END AS APPLY_YN
			  FROM WTM_FLEXIBLE_APPLY A
			 INNER JOIN (SELECT MAX(FLEXIBLE_APPLY_ID) AS FLEXIBLE_APPLY_ID, SUM(1) AS ALL_CNT, SUM(CASE WHEN IFNULL(APPLY_YN, 'N') = 'Y' THEN 1 ELSE 0 END) AS APPLY_CNT
			              FROM WTM_FLEXIBLE_APPLY_EMP_TEMP
			             WHERE FLEXIBLE_APPLY_ID = #{flexibleApplyId}) B
			    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
			)XX
			ON X.FLEXIBLE_APPLY_ID = XX.FLEXIBLE_APPLY_ID
			SET X.APPLY_YN = XX.APPLY_YN
	</update>    
	
	<update id="updateFlexibleTaaReset" parameterType="Long">
		<![CDATA[
	  	UPDATE WTM_APPL X
			JOIN (
				SELECT M.APPL_ID, T.SABUN, D.TAA_CD, D.SYMD, D.EYMD
				  FROM WTM_APPL M
				 INNER JOIN WTM_TAA_APPL T
				    ON M.APPL_ID = T.APPL_ID
				 INNER JOIN WTM_TAA_APPL_DET D
				    ON T.TAA_APPL_ID = D.TAA_APPL_ID
				 INNER JOIN (SELECT A.USE_SYMD AS SYMD, A.USE_EYMD AS EYMD, B.TENANT_ID , B.ENTER_CD, B.SABUN
								  FROM WTM_FLEXIBLE_APPLY A
								 INNER JOIN WTM_FLEXIBLE_APPLY_EMP_TEMP B
								    ON A.FLEXIBLE_APPLY_ID = B.FLEXIBLE_APPLY_ID
								 WHERE A.FLEXIBLE_APPLY_ID = #{flexibleApplyId}
								 ) F
				    ON M.TENANT_ID = F.TENANT_ID
				   AND M.ENTER_CD = F.ENTER_CD
				   AND T.SABUN = F.SABUN
				   AND F.SYMD <= D.EYMD
				   AND F.EYMD >= D.SYMD
				 WHERE M.APPL_CD = 'TAA'
				   AND M.APPL_STATUS_CD = '99'
			)XX
			ON X.APPL_ID = XX.APPL_ID
			SET X.APPL_STATUS_CD = '00'
			  , X.UPDATE_ID = 'FLEX_RE'
		]]>
	</update>
	
	<insert id="copyWtmApplyGroup" parameterType="map">
		INSERT INTO WTM_FLEXIBLE_APPLY_GROUP
			 ( FLEXIBLE_APPLY_ID
			 , ORG_CD
			 , JOB_CD
			 , DUTY_CD
			 , POS_CD
			 , CLASS_CD
			 , WORKTEAM_CD
			 , NOTE
			 , UPDATE_DATE
			 , UPDATE_ID )
		SELECT #{flexibleApplyId}
		     , ORG_CD
		     , JOB_CD
		     , DUTY_CD
		     , POS_CD
		     , CLASS_CD
		     , WORKTEAM_CD
		     , #{note}
		     , NOW()
		     , #{userId}
		FROM WTM_FLEXIBLE_APPLY_GROUP
		WHERE FLEXIBLE_APPLY_ID = #{copyApplyId}
	</insert>
	
	<insert id="copyWtmApplyEmp" parameterType="map">
		INSERT INTO WTM_FLEXIBLE_APPLY_EMP
		 	 ( FLEXIBLE_APPLY_ID
			 , SABUN
			 , NOTE
			 , UPDATE_DATE
			 , UPDATE_ID)			
	    SELECT #{flexibleApplyId}
		     , SABUN
		     , NOTE
		     , NOW()
		     , #{userId}
		  FROM WTM_FLEXIBLE_APPLY_EMP
		 WHERE FLEXIBLE_APPLY_ID = #{copyApplyId}
	</insert>
	
	<insert id="copyWtmApplyEmpTemp" parameterType="map">
		INSERT INTO WTM_FLEXIBLE_APPLY_EMP_TEMP
			 ( FLEXIBLE_APPLY_ID
			 , TENANT_ID
		     , ENTER_CD
		     , SABUN
			 , UPDATE_DATE
			 , UPDATE_ID
			 , APPLY_YN )			
	    SELECT #{flexibleApplyId}
	         , TENANT_ID
	         , ENTER_CD
	         , SABUN
	         , NOW()
	         , #{userId}
	         , APPLY_YN
	      FROM WTM_FLEXIBLE_APPLY_EMP_TEMP
	     WHERE FLEXIBLE_APPLY_ID = #{copyApplyId}
	</insert>

	<select id="getExistCountBySymdAndEymd" parameterType="map" resultType="int">
		select
			COUNT( 1 )
		from
			WTM_FLEXIBLE_EMP
		where
			TENANT_ID = #{tenantId}
			and ENTER_CD = #{enterCd}
			and WORK_TYPE_CD != 'BASE'
			and(
				SYMD BETWEEN #{symd} AND #{eymd}
				or EYMD BETWEEN #{symd} AND #{eymd}
			)
			AND SABUN IN
		<foreach collection="searchList" item="item" open="(" close=")" separator=", ">
			#{item.sabun}
		</foreach>

	</select>
	
</mapper>
