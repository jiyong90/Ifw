<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmWorktimeMapper">
	<!--근태 이상자 조회 -->
  	<select id="getWorktimeCheckList" parameterType="map" resultType="map">
  		SELECT T.TENANT_ID AS tenantId
		     , T.ENTER_CD AS enterCd
		     , T.ORG_NM AS orgNm
		     , T.SABUN AS sabun
		     , T.EMP_NM AS empNm
		     , T.WORK_TYPE_CD AS workTypeCd
		     , T.FLEXIBLE_NM AS workTypeNm
		     , T.FLEXIBLE_SDATE AS flexibleSdate
		     , T.FLEXIBLE_EDATE AS flexibleEdate
		     , T.WEEK_SDATE AS weekSdate
		     , T.WEEK_EDATE AS weekEdate
		     , CONCAT(FLOOR(T.STD_WORK_MINUTE/60),':',LPAD(MOD(T.STD_WORK_MINUTE,60),2,'0')) AS stdWorkMinute
		     , CONCAT(FLOOR(T.STD_OT_MINUTE/60),':',LPAD(MOD(T.STD_OT_MINUTE,60),2,'0')) AS stdOtMinute
		     , CONCAT(FLOOR((T.STD_WORK_MINUTE+T.STD_OT_MINUTE)/60),':',LPAD(MOD((T.STD_WORK_MINUTE+T.STD_OT_MINUTE),60),2,'0')) AS stdMinute
		     , CONCAT(FLOOR(T.APPR_WORK_MINUTE/60),':',LPAD(MOD(T.APPR_WORK_MINUTE,60),2,'0')) AS apprWorkMinute
		     , CONCAT(FLOOR(T.APPR_OT_MINUTE/60),':',LPAD(MOD(T.APPR_OT_MINUTE,60),2,'0')) AS apprOtMinute
		     , CONCAT(FLOOR((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE)/60),':',LPAD(MOD((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE),60),2,'0')) AS apprMinute
			<choose>
			    <when test="searchValue=='ALL'">
	     		, (T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE) - (T.STD_WORK_MINUTE+T.STD_OT_MINUTE) AS diffMinute
	     		</when>
	     		<when test="searchValue=='BASE'">
	     		, T.APPR_WORK_MINUTE - T.STD_WORK_MINUTE AS diffMinute
	     		</when>
	     		<when test="searchValue=='OT'">
	     		, T.APPR_OT_MINUTE - STD_OT_MINUTE AS diffMinute
	     		</when>
	     	</choose>
	     	, 0 AS worktimeDetail
	     	, T.NOTE AS note
  		  FROM (
	  		SELECT E.TENANT_ID
			     , E.ENTER_CD
			     , F_WTM_GET_ORG_NM(E.TENANT_ID, E.ENTER_CD, H.ORG_CD, E.SYMD) AS ORG_NM
			     , E.SABUN
			     , H.EMP_NM
			     , E.WORK_TYPE_CD
			     , M.FLEXIBLE_NM
			     , CASE WHEN T.FLEXIBLE_SDATE IS NULL THEN E.SYMD ELSE T.FLEXIBLE_SDATE END AS FLEXIBLE_SDATE
			     , CASE WHEN T.FLEXIBLE_EDATE IS NULL THEN E.EYMD ELSE T.FLEXIBLE_EDATE END AS FLEXIBLE_EDATE
			     , CASE WHEN CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END IS NULL THEN E.SYMD 
				  			ELSE CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END END AS WEEK_SDATE
			     , CASE WHEN CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END IS NULL THEN E.EYMD 
				  			ELSE CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END END AS WEEK_EDATE
			     , CASE WHEN E.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.WORK_MINUTE
			     			WHEN E.WORK_TYPE_CD = 'ELAS' THEN SUM(T.APPR_WORK_MINUTE)
				  			ELSE 40 * 60 END AS STD_WORK_MINUTE
			     , CASE WHEN E.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.OT_MINUTE
				  			ELSE 12 * 60 END AS STD_OT_MINUTE
			     , SUM(APPR_WORK_MINUTE) AS APPR_WORK_MINUTE
			     , SUM(APPR_OT_MINUTE) AS APPR_OT_MINUTE
			     , T.NOTE
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_EMP_HIS H
			    ON E.TENANT_ID = H.TENANT_ID
			   AND E.ENTER_CD = H.ENTER_CD
			   AND E.SABUN = H.SABUN
			   AND E.SYMD BETWEEN H.SYMD AND H.EYMD
			  JOIN WTM_FLEXIBLE_STD_MGR M
			    ON E.TENANT_ID = M.TENANT_ID
			   AND E.ENTER_CD = M.ENTER_CD
			   AND E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			  LEFT OUTER JOIN WTM_WORK_TERM_TIME T
			    ON T.WORK_TYPE_CD = E.WORK_TYPE_CD
			   AND T.TENANT_ID = E.TENANT_ID
			   AND T.ENTER_CD = E.ENTER_CD
			   AND T.SABUN = E.SABUN
			   AND ((#{searchType}='TERM' AND T.WORK_TYPE_CD IN ('SELE_F','SELE_C') 
					AND E.SYMD BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE AND E.EYMD BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE)
					OR (#{searchType}='WEEK' AND T.WORK_TYPE_CD NOT IN ('SELE_F','SELE_C') 
					AND #{sYmd} BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE 
					AND #{sYmd} BETWEEN T.WEEK_SDATE AND T.WEEK_EDATE) )
			 WHERE E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   <if test="orgList!=null">
			   AND H.ORG_CD IN (NULL, 
		       <foreach collection="orgList" item="org" separator=", ">
				   #{org}
			   </foreach>
			   )
			   </if>
			   AND #{sYmd} BETWEEN E.SYMD AND E.EYMD 
			   AND ( #{searchType}='TERM' AND E.WORK_TYPE_CD IN ('SELE_F','SELE_C') OR #{searchType}='WEEK' AND E.WORK_TYPE_CD NOT IN ('SELE_F','SELE_C'))
			GROUP BY E.TENANT_ID, E.ENTER_CD, E.SABUN, H.EMP_NM, E.WORK_TYPE_CD, M.FLEXIBLE_NM, E.SYMD, E.EYMD
			, T.FLEXIBLE_SDATE, T.FLEXIBLE_EDATE, CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END, CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END
            , E.WORK_MINUTE, E.OT_MINUTE, T.NOTE
		) T
		WHERE 1=1
		  AND (#{searchKeyword}='' OR #{searchKeyword} IS NULL OR #{searchKeyword}=T.SABUN OR T.EMP_NM LIKE CONCAT(#{searchKeyword}, '%'))
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='BASE'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='OT'">
			   		<if test="searchCondition=='more'">
			   			and APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			</choose>
		</if>
		order by flexibleSdate desc, apprWorkMinute desc, apprOtMinute desc
  	</select>
  	
  	<select id="getWorktimeDetail" parameterType="map" resultType="map">
  		SELECT C.YMD AS ymd
		     , M.FLEXIBLE_NM AS flexibleNm
		     , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHI') AS entrySdate
			  , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHI') AS entryEdate 
			  , R.TIME_TYPE_CD AS timeTypeCd
			  , R.TAA_CD AS taaCd
			  , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHI') AS planSdate
			  , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHI') AS planEdate
			  , CONCAT(FLOOR(R.PLAN_MINUTE/60),':',LPAD(MOD(R.PLAN_MINUTE,60),2,'0')) AS planMinute
			  , F_WTM_DATE_FORMAT(R.APPR_SDATE, 'YMDHI') AS apprSdate
			  , F_WTM_DATE_FORMAT(R.APPR_EDATE, 'YMDHI') AS apprEdate
			  , CONCAT(FLOOR(R.APPR_MINUTE/60),':',LPAD(MOD(R.APPR_MINUTE,60),2,'0')) AS apprMinute
			FROM WTM_WORK_CALENDAR C
			JOIN WTM_FLEXIBLE_EMP E
			  ON C.TENANT_ID = E.TENANT_ID
			 AND C.ENTER_CD = E.ENTER_CD
			 AND C.SABUN = E.SABUN
			 AND C.YMD BETWEEN E.SYMD AND E.EYMD
			LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			  ON C.TENANT_ID = R.TENANT_ID
			 AND C.ENTER_CD = R.ENTER_CD 
			 AND C.SABUN = R.SABUN 
			LEFT OUTER JOIN WTM_FLEXIBLE_STD_MGR M
			  ON C.TENANT_ID = M.TENANT_ID
			 AND C.ENTER_CD = M.ENTER_CD
			 AND E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
			  AND C.TENANT_ID = #{tenantId}
			  AND C.ENTER_CD = #{enterCd}
			  AND C.SABUN = #{sabun}
			  AND C.YMD = R.YMD
		ORDER BY ymd desc, apprSdate, planSdate
  	</select>
  	
  	<select id="getEntryCheckList" parameterType="map" resultType="map">
  		SELECT C.TENANT_ID as tenantId
			 , C.ENTER_CD as enterCd
			 , C.SABUN as sabun 
			 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS orgNm
			 , H.EMP_NM AS empNm
			 , C.YMD as ymd
			 , M.FLEXIBLE_NM AS flexibleNm
			 , C.TIME_CD_MGR_ID as timeCdMgrId
			 , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHI') as entrySdate
			 , C.ENTRY_STYPE_CD as entryStypeCd
			 , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHI') as entryEdate
			 , C.ENTRY_ETYPE_CD as enteryEtypeCd
			 , C.WORK_CLOSE_YN as workCloseYn
			 , C.HOLIDAY_YN as holidayYn
			 , C.NOTE as note
		FROM WTM_WORK_CALENDAR C
		JOIN WTM_EMP_HIS H
		  ON C.TENANT_ID = H.TENANT_ID
		 AND C.ENTER_CD = H.ENTER_CD
		 AND C.SABUN = H.SABUN
		 AND C.YMD BETWEEN H.SYMD AND H.EYMD
		JOIN ( SELECT TENANT_ID
					     , ENTER_CD
					     , SABUN
					     , YMD
					     , MIN(PLAN_SDATE) AS PLAN_SDATE
					     , MAX(PLAN_EDATE) AS PLAN_EDATE
					  FROM WTM_WORK_DAY_RESULT
					 WHERE TENANT_ID = #{tenantId}
					   AND ENTER_CD = #{enterCd}
					   AND TIME_TYPE_CD IN ('BASE', 'OT')
					   AND YMD BETWEEN #{sYmd} AND #{eYmd}
					   AND (APPR_SDATE IS NULL OR APPR_EDATE IS NULL)
					GROUP BY TENANT_ID, ENTER_CD, SABUN, YMD) R
		  ON C.TENANT_ID = R.TENANT_ID
		 AND C.ENTER_CD = R.ENTER_CD 
		 AND C.SABUN = R.SABUN 
		 AND C.YMD = R.YMD
		 JOIN WTM_FLEXIBLE_EMP E
		  ON C.TENANT_ID = E.TENANT_ID
		 AND C.ENTER_CD = E.ENTER_CD 
		 AND C.SABUN = E.SABUN 
		 AND C.YMD BETWEEN E.SYMD AND E.EYMD
		 JOIN WTM_FLEXIBLE_STD_MGR M
		   ON E.TENANT_ID = M.TENANT_ID
		  AND E.ENTER_CD = M.ENTER_CD
		  AND E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
		WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
		  AND C.TENANT_ID = #{tenantId}
		  AND C.ENTER_CD = #{enterCd}
		  AND ((R.PLAN_SDATE IS NOT NULL AND C.ENTRY_SDATE IS NULL) OR (R.PLAN_EDATE IS NOT NULL AND C.ENTRY_EDATE IS NULL))
		  <if test="orgList!=null">
		   AND H.ORG_CD IN (NULL, 
	       <foreach collection="orgList" item="org" separator=", ">
			   #{org}
		   </foreach>
		   )
		   </if>
	ORDER BY entrySdate desc
  	</select>
  	
  	<select id="getEntryDiffList" parameterType="map" resultType="map">
  		SELECT tenantId
		     , enterCd
		     , sabun
		     , orgNm
		     , empNm
		     , ymd
		     , flexibleNm
		     , timeCdMgrId
		     , F_WTM_DATE_FORMAT(planSdate, 'YMDHI') AS planSdate
		     , F_WTM_DATE_FORMAT(entrySdate, 'YMDHI') AS entrySdate
		     , diffSminute
		     , F_WTM_DATE_FORMAT(planEdate, 'YMDHI') AS planEdate
		     , F_WTM_DATE_FORMAT(entryEdate, 'YMDHI') AS entryEdate
		     , diffEminute
		     , note
		  FROM ( SELECT C.TENANT_ID as tenantId
							 , C.ENTER_CD as enterCd
							 , C.SABUN as sabun 
							 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS orgNm
							 , H.EMP_NM AS empNm
							 , C.YMD as ymd
							 , M.FLEXIBLE_NM AS flexibleNm
							 , C.TIME_CD_MGR_ID as timeCdMgrId
							 , MIN(R.PLAN_SDATE) as planSdate
							 , C.ENTRY_SDATE as entrySdate
							 , TIMESTAMPDIFF(SECOND, MIN(R.PLAN_SDATE), C.ENTRY_SDATE)/60 AS diffSminute
							 , TIMESTAMPDIFF(SECOND, MIN(R.PLAN_SDATE), C.ENTRY_SDATE) AS diffSsecond
							 , MAX(R.PLAN_EDATE) as planEdate
							 , C.ENTRY_EDATE as entryEdate
							 , TIMESTAMPDIFF(SECOND, MAX(R.PLAN_EDATE), C.ENTRY_EDATE)/60 AS diffEminute
							 , TIMESTAMPDIFF(SECOND, MAX(R.PLAN_EDATE), C.ENTRY_EDATE) AS diffEsecond
							 , C.NOTE as note
						FROM WTM_WORK_CALENDAR C
						JOIN WTM_EMP_HIS H
						  ON C.TENANT_ID = H.TENANT_ID
						 AND C.ENTER_CD = H.ENTER_CD
						 AND C.SABUN = H.SABUN
						 AND C.YMD BETWEEN H.SYMD AND H.EYMD
						JOIN WTM_WORK_DAY_RESULT R
						  ON C.TENANT_ID = R.TENANT_ID
						 AND C.ENTER_CD = R.ENTER_CD 
						 AND C.SABUN = R.SABUN 
						 AND C.YMD = R.YMD
						LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
						  ON C.TENANT_ID = E.TENANT_ID
						 AND C.ENTER_CD = E.ENTER_CD
						 AND C.SABUN = E.SABUN
						 AND C.YMD BETWEEN E.SYMD AND E.EYMD
						 JOIN WTM_FLEXIBLE_STD_MGR M
						  ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
						WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
						  AND C.TENANT_ID = #{tenantId}
						  AND C.ENTER_CD = #{enterCd}
						  AND R.TIME_TYPE_CD IN ('BASE', 'OT')
						   <if test="orgList!=null">
						   AND H.ORG_CD IN (NULL, 
					       <foreach collection="orgList" item="org" separator=", ">
							   #{org}
						   </foreach>
						   )
						   </if>
					GROUP BY C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD
		  ) T
		 WHERE 1=1
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and (planSdate IS NOT NULL and entrySdate IS NOT NULL or planEdate IS NOT NULL and entryEdate IS NOT NULL)
			   			and (diffSminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y') OR diffEminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (planSdate IS NULL or entrySdate IS NULL or planEdate IS NULL or entryEdate IS NULL
			   			or diffSminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y') OR diffSminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			   	<when test="searchValue=='IN'">
			   		<if test="searchCondition=='more'">
			   			and planSdate IS NOT NULL and entrySdate IS NOT NULL
			   			and diffSminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (planSdate IS NULL or entrySdate IS NULL or diffSminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			   	<when test="searchValue=='OUT'">
			   		<if test="searchCondition=='more'">
			   			and planEdate IS NOT NULL and entryEdate IS NOT NULL
			   			and diffEminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (planEdate IS NULL or entryEdate IS NULL or diffEminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			</choose>
		</if>
		ORDER BY ymd desc, sabun, planSdate
  	</select>
  	
  	<select id="getTermList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT CONCAT(DATE_FORMAT(STR_TO_DATE(SDATE, '%Y%m%d'),'%Y.%m.%d'),' ~ ', DATE_FORMAT(STR_TO_DATE(EDATE, '%Y%m%d'),'%Y.%m.%d')) AS title, 
				WORK_TYPE_NM AS caption_rb, CONCAT(SDATE, '@',  #{month}, '@', WORK_TYPE_CD) AS key2
			FROM(
				SELECT DISTINCT T.WORK_TYPE_CD, T.SDATE, T.EDATE, WORK_TYPE_NM, H.ORG_CD
					FROM (SELECT CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_SDATE ELSE WEEK_SDATE END AS SDATE
				           , CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_EDATE ELSE WEEK_EDATE END AS EDATE
				           , SABUN
				           , WORK_TYPE_CD
				           , TENANT_ID
				           , ENTER_CD
				           , F_WTM_GET_CODE_NM(#{tenantId}, #{enterCd},'WORK_TYPE_CD', WORK_TYPE_CD, F_WTM_DATE_FORMAT(NOW(), 'YMD')) AS WORK_TYPE_NM
				        FROM WTM_WORK_TERM_TIME
				        WHERE TENANT_ID=#{tenantId} 
				        AND  ENTER_CD=#{enterCd} ) T
				  JOIN WTM_EMP_HIS H 
				   ON H.TENANT_ID = T.TENANT_ID 
				   AND H.ENTER_CD = T.ENTER_CD 
				   ]]>
				    <if test="orgList!=null">
				   AND H.ORG_CD IN (NULL,
				       <foreach collection="orgList" item="org" separator=", ">
						   #{org}
					   </foreach>	   
				   )
				    </if>
				    <![CDATA[
				   AND H.SABUN = T.SABUN
				   AND H.EYMD = '29991231'
				   AND H.STATUS_CD = 'AA'
				 WHERE #{month} BETWEEN LEFT(T.SDATE, 6) AND LEFT(T.EDATE, 6)
				   AND F_WTM_DATE_FORMAT(NOW(), 'YMD') > T.SDATE) X
		    GROUP BY WORK_TYPE_CD, SDATE, EDATE
		    ORDER BY KEY2 DESC
        ]]>
    </select>
    
    <select id="getTeamList" parameterType="map" resultType="hashmap">
        <![CDATA[
			SELECT CONCAT(T.SABUN,'@',T.SDATE,'@',T.EDATE) AS key2, 
				H.EMP_NM AS title, 
				T.WORK_TYPE_CD as workTypeCd, 
				T.SDATE as sdate, 
				T.EDATE as edate, 
				F_WTM_SUM_FLEXIBLE_EMP_TIME(T.TENANT_ID, T.ENTER_CD, T.SABUN, T.SDATE, T.EDATE) as caption_rb,
				TIME_FORMAT(SEC_TO_TIME((SUM(T.APPR_WORK_MINUTE)+SUM(T.APPR_OT_MINUTE))*60), '%H:%i') as status, 
				TIME_FORMAT(SEC_TO_TIME(SUM(T.APPR_OT_MINUTE)*60), '%H:%i') as test,
				H.ORG_CD, F_WTM_GET_ORG_NM(T.TENANT_ID, T.ENTER_CD, H.ORG_CD, F_WTM_DATE_FORMAT(now(), 'YMD')) as caption_lb				
				FROM (SELECT CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_SDATE ELSE WEEK_SDATE END AS SDATE
				           , CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_EDATE ELSE WEEK_EDATE END AS EDATE
				           , SABUN
				           , WORK_TYPE_CD
				           , APPR_WORK_MINUTE
				           , APPR_OT_MINUTE
				           , TENANT_ID
				           , ENTER_CD
				        FROM WTM_WORK_TERM_TIME
				        WHERE TENANT_ID=#{tenantId}
				        AND  ENTER_CD=#{enterCd} ) T
				JOIN WTM_EMP_HIS H 
				   ON H.TENANT_ID = T.TENANT_ID 
				   AND H.ENTER_CD = T.ENTER_CD 
				   ]]>
				    <if test="orgList!=null">
				   AND H.ORG_CD IN (NULL,
				       <foreach collection="orgList" item="org" separator=", ">
						   #{org}
					   </foreach>	   
				   )
				    </if>
				    <![CDATA[
				   AND H.SABUN = T.SABUN
				   AND H.EYMD = '29991231'
				   AND H.STATUS_CD = 'AA'
				WHERE 1=1
				      AND T.SDATE = #{sdate}
				      AND T.WORK_TYPE_CD = #{workTypeCd}
				GROUP BY T.TENANT_ID, T.ENTER_CD, T.SABUN, H.EMP_NM, T.WORK_TYPE_CD, T.SDATE, T.EDATE
				ORDER BY H.ORG_CD
        ]]>
    </select>
    
    <select id="getWorkPlan" parameterType="map" resultType="hashmap">
  		SELECT C.YMD AS ymd
		     , C.SABUN AS sabun
		     , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS orgNm
			  , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS empNm
		     , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS flexibleNm
		     , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHIS') AS entrySdate
			  , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHIS') AS entryEdate 
			  , C.TIME_CD_MGR_ID AS timeCdMgrId
			  , R.TIME_TYPE_CD AS timeTypeCd
			  , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHIS') AS planSdate
			  , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHIS') AS planEdate
			  , CONCAT(FLOOR(R.PLAN_MINUTE/60),':',LPAD(MOD(R.PLAN_MINUTE,60),2,'0')) AS planMinute
			FROM WTM_FLEXIBLE_EMP E
			JOIN WTM_WORK_CALENDAR C
			  ON E.TENANT_ID = C.TENANT_ID
			 AND E.ENTER_CD = C.ENTER_CD
			 AND E.SABUN = C.SABUN
			 AND C.YMD BETWEEN E.SYMD AND E.EYMD
			JOIN WTM_WORK_DAY_RESULT R
			  ON C.TENANT_ID = R.TENANT_ID
			 AND C.ENTER_CD = R.ENTER_CD 
			 AND C.SABUN = R.SABUN 
			 AND C.YMD = R.YMD
			WHERE E.TENANT_ID = ${tenantId}
			  AND E.ENTER_CD = #{enterCd}
			  AND E.WORK_TYPE_CD NOT IN ('SELE_C','SELE_F','ELAS')
			  AND C.YMD = #{ymd}
			  AND R.TIME_TYPE_CD = 'BASE'
			  AND E.SABUN IN ( NULL
			   <if test="empList!=null">
			   <foreach collection="empList" item="sabun" >
			   ,#{sabun}
			   </foreach>
			   </if>
			   )
		ORDER BY ymd desc, sabun, planSdate
  	</select>
  	
  	<select id="getWorkTimeChangeTarget" parameterType="map" resultType="hashmap">
        <![CDATA[
        	SELECT *
        	  FROM (
			        	SELECT EMP_HIS_ID AS empHisId
							 , ENTER_CD AS enterCd
							 , SABUN AS sabun
							 , EMP_NM AS empNm
							 , EMP_ENG_NM AS empEngNm
							 , SYMD AS symd
							 , EYMD AS eymd
							 , STATUS_CD AS statusCd
							 , ORG_CD AS orgCd
							 , BUSINESS_PLACE_CD AS businessPlaceCd
							 , DUTY_CD AS dutyCd
							 , POS_CD AS posCd
							 , CLASS_CD AS classCd
							 , JOB_GROUP_CD AS jobGroupCd
							 , JOB_CD AS jobCd
							 , PAY_TYPE_CD AS payTypeCd
							 , LEADER_YN AS leaderYn
							 , NOTE AS note
							 , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS orgNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'DUTY_CD', DUTY_CD, SYMD) AS dutyNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'POS_CD', POS_CD, SYMD) AS posNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'CLASS_CD', CLASS_CD, SYMD) AS classNm
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'JOB_CD', JOB_CD, SYMD) AS jobNm
							 , EMP_ID AS empId
						  FROM WTM_EMP_HIS
						 WHERE TENANT_ID = #{tenantId}
						   AND ENTER_CD = #{enterCd} 
							AND CASE WHEN #{ymd} = '' THEN F_WTM_DATE_FORMAT(now(),'YMD')
							         ELSE REPLACE(#{ymd}, '-', '') END BETWEEN SYMD AND EYMD
			        ]]>
			        		<if test="orgList!=null">
						   AND ORG_CD IN (NULL, 
					       <foreach collection="orgList" item="org" separator=", ">
							   #{org}
						   </foreach>
						   )
						   </if>
						   AND SABUN IN ( SELECT SABUN
										  FROM WTM_WORK_DAY_RESULT
										 WHERE YMD = #{ymd}
										   AND TENANT_ID = #{tenantId}
										   AND ENTER_CD = #{enterCd}
										GROUP BY TENANT_ID, ENTER_CD, YMD, SABUN
										HAVING SUM(CASE WHEN TIME_TYPE_CD NOT IN ('BASE','FIXOT') THEN 1 ELSE 0 END)=0 )
						   
				) T
			WHERE 1=1
			  AND (sabun LIKE CONCAT(#{searchKeyword}, '%')
			    OR empNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR orgNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR dutyNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR posNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR classNm LIKE CONCAT('%', #{searchKeyword}, '%')
			    OR jobNm LIKE CONCAT('%', #{searchKeyword}, '%'))
    </select>
</mapper>
