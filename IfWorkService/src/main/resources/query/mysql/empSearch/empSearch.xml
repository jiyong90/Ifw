<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.EmpSearchMapper">

	<!-- 직원 정보 조회 -->
	<select id="getSearchEmpList" parameterType="hashmap" resultType="empsearch">
		SELECT    A.SABUN									AS EMP_SABUN		--사번
				, A.ENTER_CD								AS ENTER_CD		--회사코드
				, E.ENTER_NM								AS COMPANY_NM		--회사명
				, E.ENTER_ENG_NM							AS SSN_ENTER_ENG_NM	--회사영문명
				, E.ALIAS									AS SSN_ALIAS		--회사 ALIAS
				, F_COM_GET_NAMES( A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) AS EMP_NM	--성명
				, B.ORG_CD									AS SSN_ORG_CD		--조직코드
				, A.ENTER_CD||'@'||A.SABUN AS USER_KEY
				, B.STATUS_NM
				, (SELECT CONT_ADDRESS FROM THRM124 WHERE ENTER_CD = #{loginEnterCd} AND SABUN = A.SABUN AND CONT_TYPE IN ('HP')) AS EMAIL
				, (SELECT CONT_ADDRESS FROM THRM124 WHERE ENTER_CD = #{loginEnterCd} AND SABUN = A.SABUN AND CONT_TYPE IN ('IM')) AS PHONE_NO
				, WORK_TYPE_NM AS JOB_NM
				, F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H20030' , B.JIKWEE_CD, #{ssnLocaleCd}) AS JIKWEE_NM
				, F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H20010' , B.JIKGUB_CD, #{ssnLocaleCd}) AS JIKGUB_NM
				, F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H20020' , B.JIKCHAK_CD, #{ssnLocaleCd}) AS JIKCHAK_NM
				, F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H10050' , B.JIKCHAK_CD, #{ssnLocaleCd}) AS SSN_WORK_TYPE_NM
				, F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD , TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM

				, TO_CHAR(SYSDATE, 'YYYYMMDD')				AS SSN_BASE_DATE
				, CASE 	WHEN D.CHKDATE &gt;= ADD_MONTHS(SYSDATE,-NVL(H.ATTRIBUTE_3,1)) THEN 'N'
						WHEN D.CHKDATE &lt;  ADD_MONTHS(SYSDATE,-NVL(H.ATTRIBUTE_3,1)) THEN 'Y'
					END 										AS SSN_PW_EDIT_YN
				, NVL(D.SKIN_TYPE, 'theme4') 					AS SSN_SKIN_TYPE
				, NVL(D.FONT_TYPE, 'nanum') 					AS SSN_FONT_TYPE
				, NVL(F_COM_GET_LAST_LOGIN_DATE(D.ENTER_CD,A.SABUN), TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI')) AS SSN_LAST_LOGIN
				, F_SYS_GET_PRIVACY_AGREEMENT_YN(A.ENTER_CD,TO_CHAR(SYSDATE,'YYYYMMDD'),A.SABUN,NULL) AS SSN_PRIVACY_AGREEMENT_YN
				, F_SEC_GET_ENCODED_KEY AS SSN_ENCODED_KEY
				, NVL(#{ssnLocaleCd}, #{baseLang, jdbcType=VARCHAR} ) AS SSN_LOCALE_CD
				, NVL(E.LANG_USE_YN, '0') AS SSN_LANG_USE_YN
				, DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = A.ENTER_CD AND SABUN = A.SABUN),'','N','Y') AS SSN_PAP_ADMIN_YN
				, F_COM_GET_ADMIN_GRP_YN(A.ENTER_CD, A.SABUN) AS SSN_ADMIN_GRP_YN  -- 관리자 그룹 보유 여부
				, NVL(F_COM_GET_STD_CD_VALUE(A.ENTER_CD , 'SYS_COMPANY_MGR_YN'),'N') AS SSN_COMPANY_MGR_YN
		FROM THRM100 A
	   INNER JOIN THRM151 B
		  ON A.ENTER_CD  = B.ENTER_CD
		 AND NVL(B.STATUS_CD,'RA') &lt;&gt; 'RA'
		 AND A.SABUN 	= B.SABUN
		 AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
	   INNER JOIN TSYS305 D
	      ON A.ENTER_CD 	= D.ENTER_CD
	     AND A.SABUN 	= D.SABUN
	   INNER JOIN TORG900 E
	      ON A.ENTER_CD  = E.ENTER_CD
	    LEFT OUTER JOIN TORG999 H
	      ON A.ENTER_CD 	= H.ENTER_CD
	   WHERE 1=1
		 AND D.ENTER_CD 	= #{loginEnterCd}
		 AND (UPPER(D.SABUN) IN ((NULL)
		 <if test="searchRows!=null and searchRows.size()>0">
			 <foreach collection="searchRows" item="rm">
				,TRIM( #{rm.searchSabun} )
			 </foreach>
		 </if>
		)
		<if test="searchWord!=null and !searchWord.equals('')">
			OR ( F_COM_GET_NAMES(A.ENTER_CD, A.SABUN) LIKE '%'|| #{searchWord} || '%' OR  A.SABUN LIKE '%'|| #{searchWord} || '%')
		</if>
		)
		 AND D.ROCKING_YN = 'N'
	</select>
</mapper>
