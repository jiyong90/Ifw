<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmWorktimeMapper">
	<!--근태 이상자 조회 -->
  	<select id="getWorktimeCheckList" parameterType="map" resultType="wtmGeneral">
  		SELECT T.TENANT_ID 
		     , T.ENTER_CD 
		     , T.ORG_NM 
		     , T.SABUN 
		     , T.EMP_NM 
		     , T.WORK_TYPE_CD 
		     , T.FLEXIBLE_NM 
		     , T.FLEXIBLE_SDATE 
		     , T.FLEXIBLE_EDATE 
		     , T.WEEK_SDATE 
		     , T.WEEK_EDATE 
		     , CONCAT(FLOOR(T.STD_WORK_MINUTE/60),':',LPAD(MOD(T.STD_WORK_MINUTE,60),2,'0')) AS STD_WORK_MINUTE
		     , CONCAT(FLOOR(T.STD_OT_MINUTE/60),':',LPAD(MOD(T.STD_OT_MINUTE,60),2,'0')) AS STD_OT_MINUTE
		     , CONCAT(FLOOR((T.STD_WORK_MINUTE+T.STD_OT_MINUTE)/60),':',LPAD(MOD((T.STD_WORK_MINUTE+T.STD_OT_MINUTE),60),2,'0')) AS STD_MINUTE
		     , CONCAT(FLOOR(T.APPR_WORK_MINUTE/60),':',LPAD(MOD(T.APPR_WORK_MINUTE,60),2,'0')) AS APPR_WORK_MINUTE
		     , CONCAT(FLOOR(T.APPR_OT_MINUTE/60),':',LPAD(MOD(T.APPR_OT_MINUTE,60),2,'0')) AS APPR_OT_MINUTE
		     , CONCAT(FLOOR((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE)/60),':',LPAD(MOD((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE),60),2,'0')) AS APPR_MINUTE
			<choose>
			    <when test="searchValue=='ALL'">
	     		, T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE - T.STD_WORK_MINUTE+T.STD_OT_MINUTE AS DIFF_MINUTE
	     		</when>
	     		<when test="searchValue=='BASE'">
	     		, T.APPR_WORK_MINUTE - T.STD_WORK_MINUTE AS DIFF_MINUTE
	     		</when>
	     		<when test="searchValue=='OT'">
	     		, T.APPR_OT_MINUTE - STD_OT_MINUTE AS DIFF_MINUTE
	     		</when>
	     	</choose>
	     	, 0 AS WORKTIME_DETAIL
	     	, T.NOTE
  		  FROM (
	  		SELECT T.TENANT_ID
			     , T.ENTER_CD
			     , F_WTM_GET_EMP_ORG_NM(T.TENANT_ID, T.ENTER_CD, T.SABUN, F_WTM_DATE_FORMAT(T.FLEXIBLE_SDATE, 'YMD')) AS ORG_NM
			     , T.SABUN
			     , F_WTM_GET_EMP_NM(T.TENANT_ID, T.ENTER_CD, T.SABUN, F_WTM_DATE_FORMAT(T.FLEXIBLE_SDATE, 'YMD')) AS EMP_NM
			     , T.WORK_TYPE_CD 
			     , F_WTM_GET_FLEXIBLE_NM(T.TENANT_ID, T.ENTER_CD, T.SABUN, F_WTM_DATE_FORMAT(T.FLEXIBLE_SDATE, 'YMD')) AS FLEXIBLE_NM
			     , T.FLEXIBLE_SDATE
			     , T.FLEXIBLE_EDATE
			     , CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END AS WEEK_SDATE
			     , CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END AS WEEK_EDATE
			     , CASE WHEN T.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.WORK_MINUTE
			     			WHEN T.WORK_TYPE_CD = 'ELAS' THEN SUM(T.APPR_WORK_MINUTE)
				  			ELSE 40 * 60 END AS STD_WORK_MINUTE
			     , CASE WHEN T.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.OT_MINUTE
				  			ELSE 12 * 60 END AS STD_OT_MINUTE
			     , SUM(APPR_WORK_MINUTE) AS APPR_WORK_MINUTE
			     , SUM(APPR_OT_MINUTE) AS APPR_OT_MINUTE
			     , T.NOTE
			  FROM WTM_WORK_TERM_TIME T
			  JOIN WTM_FLEXIBLE_EMP E
			    ON T.WORK_TYPE_CD = E.WORK_TYPE_CD
			   AND T.TENANT_ID = E.TENANT_ID
			   AND T.ENTER_CD = E.ENTER_CD
			   AND T.SABUN = E.SABUN
			   AND T.FLEXIBLE_SDATE = E.SYMD
			   AND T.FLEXIBLE_EDATE = E.EYMD
			 WHERE T.TENANT_ID = #{tenantId}
			   AND T.ENTER_CD = #{enterCd}
			   AND (#{searchType}='TERM' AND T.WORK_TYPE_CD IN ('SELE_F','SELE_C') AND #{sYmd} BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE
					    OR #{searchType}='WEEK' AND T.WORK_TYPE_CD NOT IN ('SELE_F','SELE_C') AND #{sYmd} BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE 
						 AND #{sYmd} BETWEEN T.WEEK_SDATE AND T.WEEK_EDATE )
			GROUP BY T.TENANT_ID, T.ENTER_CD, T.SABUN, T.WORK_TYPE_CD, T.FLEXIBLE_SDATE, T.FLEXIBLE_EDATE
		) T
		WHERE 1=1
		  AND (#{searchKeyword}='' OR #{searchKeyword} IS NULL OR #{searchKeyword}=T.SABUN OR T.EMP_NM LIKE CONCAT(#{searchKeyword}, '%'))
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='BASE'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='OT'">
			   		<if test="searchCondition=='more'">
			   			and APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			</choose>
		</if>
		order by FLEXIBLE_SDATE desc
  	</select>
  	
  	<select id="getWorktimeDetail" parameterType="map" resultType="wtmGeneral">
  		SELECT C.YMD 
		     , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS FLEXIBLE_NM
		     , C.ENTRY_SDATE 
			  , C.ENTRY_EDATE 
			  , R.TIME_TYPE_CD
			  , R.TAA_CD
			  , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHI') AS PLAN_SDATE
			  , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHI') AS PLAN_EDATE
			  , CONCAT(FLOOR(R.PLAN_MINUTE/60),':',LPAD(MOD(R.PLAN_MINUTE,60),2,'0')) AS PLAN_MINUTE
			  , F_WTM_DATE_FORMAT(R.APPR_SDATE, 'YMDHI') AS APPR_SDATE
			  , F_WTM_DATE_FORMAT(R.APPR_EDATE, 'YMDHI') AS APPR_EDATE
			  , CONCAT(FLOOR(R.APPR_MINUTE/60),':',LPAD(MOD(R.APPR_MINUTE,60),2,'0')) AS APPR_MINUTE
			FROM WTM_WORK_CALENDAR C
			LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			  ON C.TENANT_ID = R.TENANT_ID
			 AND C.ENTER_CD = R.ENTER_CD 
			 AND C.SABUN = R.SABUN 
			 AND C.YMD = R.YMD
			WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
			  AND C.YMD = R.YMD
			  AND C.TENANT_ID = #{tenantId}
			  AND C.ENTER_CD = #{enterCd}
			  AND C.SABUN = #{sabun}
		ORDER BY ymd desc, apprSdate, planSdate
  	</select>
  	
  	<select id="getEntryCheckList" parameterType="map" resultType="wtmGeneral">
  		SELECT C.TENANT_ID 
			 , C.ENTER_CD 
			 , C.SABUN 
			 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS ORG_NM
			 , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS EMP_NM
			 , C.YMD 
			 , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS FLEXIBLE_NM
			 , C.TIME_CD_MGR_ID 
			 , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHI') as ENTRY_SDATE
			 , C.ENTRY_STYPE_CD 
			 , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHI') as ENTRY_EDATE
			 , C.ENTRY_ETYPE_CD 
			 , C.WORK_CLOSE_YN 
			 , C.HOLIDAY_YN 
			 , C.NOTE
		FROM WTM_WORK_CALENDAR C
		JOIN ( SELECT TENANT_ID
					     , ENTER_CD
					     , SABUN
					     , YMD
					     , MIN(PLAN_SDATE) AS PLAN_SDATE
					     , MAX(PLAN_EDATE) AS PLAN_EDATE
					  FROM WTM_WORK_DAY_RESULT
					 WHERE TENANT_ID = #{tenantId}
					   AND ENTER_CD = #{enterCd}
					   AND TIME_TYPE_CD IN ('BASE', 'OT')
					   AND YMD BETWEEN #{sYmd} AND #{eYmd}
					   AND (APPR_SDATE IS NULL OR APPR_EDATE IS NULL)
					GROUP BY TENANT_ID, ENTER_CD, SABUN, YMD) R
		  ON C.TENANT_ID = R.TENANT_ID
		 AND C.ENTER_CD = R.ENTER_CD 
		 AND C.SABUN = R.SABUN 
		 AND C.YMD = R.YMD
		WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
		  AND C.TENANT_ID = #{tenantId}
		  AND C.ENTER_CD = #{enterCd}
		  AND ((R.PLAN_SDATE IS NOT NULL AND C.ENTRY_SDATE IS NULL) OR (R.PLAN_EDATE IS NOT NULL AND C.ENTRY_EDATE IS NULL))
	ORDER BY ENTRY_SDATE desc
  	</select>
  	
  	<select id="getEntryDiffList" parameterType="map" resultType="wtmGeneral">
  		SELECT TENANT_ID
		     , ENTER_CD
		     , SABUN
		     , ORG_NM
		     , EMP_NM
		     , YMD
		     , FLEXIBLE_NM
		     , TIME_CD_MGR_ID
		     , F_WTM_DATE_FORMAT(planSdate, 'YMDHI') AS PLAN_SDATE
		     , F_WTM_DATE_FORMAT(entrySdate, 'YMDHI') AS ENTRY_SDATE
		     , CASE WHEN DIFF_SSECOND is not null THEN 
			  					CASE WHEN DIFF_SSECOND&lt;0 THEN CONCAT('-',FLOOR(ABS(DIFF_SSECOND)/60),':',LPAD(MOD(ABS(DIFF_SSECOND),60),2,'0')) 
			  						  WHEN DIFF_SSECOND=0 THEN NULL
			  						  ELSE CONCAT(FLOOR(DIFF_SSECOND/60),':',LPAD(MOD(DIFF_SSECOND,60),2,'0')) END
						ELSE DIFF_SSECOND END AS DIFF_SMINUTE
		     , F_WTM_DATE_FORMAT(PLAN_EDATE, 'YMDHI') AS PLAN_EDATE
		     , F_WTM_DATE_FORMAT(ENTRY_EDATE, 'YMDHI') AS ENTRY_EDATE
		     , CASE WHEN DIFF_ESECOND is not null THEN 
			  					CASE WHEN DIFF_ESECOND&lt;0 THEN CONCAT(FLOOR(ABS(DIFF_ESECOND)/60),':',LPAD(MOD(ABS(DIFF_ESECOND),60),2,'0')) 
			  						  WHEN DIFF_ESECOND=0 THEN NULL
			  						  ELSE CONCAT('-',FLOOR(DIFF_ESECOND/60),':',LPAD(MOD(DIFF_ESECOND,60),2,'0')) END
						ELSE DIFF_ESECOND END AS DIFF_EMINUTE
		     , NOTE
		  FROM ( SELECT C.TENANT_ID 
							 , C.ENTER_CD
							 , C.SABUN
							 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS ORG_NM
							 , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS EMP_NM
							 , C.YMD 
							 , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS FLEXIBLE_NM
							 , C.TIME_CD_MGR_ID 
							 , MIN(R.PLAN_SDATE) as PLAN_SDATE
							 , C.ENTRY_SDATE 
							 , TIMESTAMPDIFF(SECOND, MIN(R.PLAN_SDATE), C.ENTRY_SDATE)/60 AS DIFF_SMINUTE
							 , TIMESTAMPDIFF(SECOND, MIN(R.PLAN_SDATE), C.ENTRY_SDATE) AS DIFF_SSECOND
							 , MAX(R.PLAN_EDATE) as PLAN_EDATE
							 , C.ENTRY_EDATE
							 , TIMESTAMPDIFF(SECOND, MAX(R.PLAN_EDATE), C.ENTRY_EDATE)/60 AS DIFF_EMINUTE
							 , TIMESTAMPDIFF(SECOND, MAX(R.PLAN_EDATE), C.ENTRY_EDATE) AS DIFF_ESECOND
							 , C.NOTE
						FROM WTM_WORK_CALENDAR C
						JOIN WTM_WORK_DAY_RESULT R
						  ON C.TENANT_ID = R.TENANT_ID
						 AND C.ENTER_CD = R.ENTER_CD 
						 AND C.SABUN = R.SABUN 
						 AND C.YMD = R.YMD
						WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
						  AND C.TENANT_ID = #{tenantId}
						  AND C.ENTER_CD = #{enterCd}
						  AND R.TIME_TYPE_CD IN ('BASE', 'OT')
					GROUP BY C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD
		  ) T
		 WHERE 1=1
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and (DIFF_SMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y') OR DIFF_EMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (DIFF_SMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y') OR DIFF_EMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			   	<when test="searchValue=='IN'">
			   		<if test="searchCondition=='more'">
			   			and DIFF_SMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and DIFF_SMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   	</when>
			   	<when test="searchValue=='OUT'">
			   		<if test="searchCondition=='more'">
			   			and DIFF_EMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and DIFF_EMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   	</when>
			</choose>
		</if>
		ORDER BY YMD desc, SABUN, PLAN_SDATE
  	</select>
</mapper>
