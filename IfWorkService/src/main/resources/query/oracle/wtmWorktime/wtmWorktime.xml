<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmWorktimeMapper">
	<!--근태 이상자 조회 -->
  	<select id="getWorktimeCheckList" parameterType="map" resultType="wtmGeneral">
  		SELECT T.TENANT_ID AS tenantId
		     , T.ENTER_CD AS enterCd
		     , T.ORG_NM AS orgNm
		     , T.SABUN AS sabun
		     , T.EMP_NM AS empNm
		     , T.WORK_TYPE_CD AS workTypeCd
		     , T.FLEXIBLE_NM AS workTypeNm
		     , T.FLEXIBLE_SDATE AS flexibleSdate
		     , T.FLEXIBLE_EDATE AS flexibleEdate
		     , T.WEEK_SDATE AS weekSdate
		     , T.WEEK_EDATE AS weekEdate
		     , CONCAT(FLOOR(T.STD_WORK_MINUTE/60),':',LPAD(MOD(T.STD_WORK_MINUTE,60),2,'0')) AS stdWorkMinute
		     , CONCAT(FLOOR(T.STD_OT_MINUTE/60),':',LPAD(MOD(T.STD_OT_MINUTE,60),2,'0')) AS stdOtMinute
		     , CONCAT(FLOOR((T.STD_WORK_MINUTE+T.STD_OT_MINUTE)/60),':',LPAD(MOD((T.STD_WORK_MINUTE+T.STD_OT_MINUTE),60),2,'0')) AS stdMinute
		     , CONCAT(FLOOR(T.APPR_WORK_MINUTE/60),':',LPAD(MOD(T.APPR_WORK_MINUTE,60),2,'0')) AS apprWorkMinute
		     , CONCAT(FLOOR(T.APPR_OT_MINUTE/60),':',LPAD(MOD(T.APPR_OT_MINUTE,60),2,'0')) AS apprOtMinute
		     , CONCAT(FLOOR((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE)/60),':',LPAD(MOD((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE),60),2,'0')) AS apprMinute
			<choose>
			    <when test="searchValue=='ALL'">
	     		, T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE - T.STD_WORK_MINUTE+T.STD_OT_MINUTE AS diffMinute
	     		</when>
	     		<when test="searchValue=='BASE'">
	     		, T.APPR_WORK_MINUTE - T.STD_WORK_MINUTE AS diffMinute
	     		</when>
	     		<when test="searchValue=='OT'">
	     		, T.APPR_OT_MINUTE - STD_OT_MINUTE AS diffMinute
	     		</when>
	     	</choose>
	     	, 0 AS worktimeDetail
	     	, T.NOTE AS note
  		  FROM (
	  		SELECT T.TENANT_ID
			     , T.ENTER_CD
			     , F_WTM_GET_EMP_ORG_NM(T.TENANT_ID, T.ENTER_CD, T.SABUN, F_WTM_DATE_FORMAT(T.FLEXIBLE_SDATE, 'YMD')) AS ORG_NM
			     , T.SABUN
			     , F_WTM_GET_EMP_NM(T.TENANT_ID, T.ENTER_CD, T.SABUN, F_WTM_DATE_FORMAT(T.FLEXIBLE_SDATE, 'YMD')) AS EMP_NM
			     , T.WORK_TYPE_CD 
			     , F_WTM_GET_FLEXIBLE_NM(T.TENANT_ID, T.ENTER_CD, T.SABUN, F_WTM_DATE_FORMAT(T.FLEXIBLE_SDATE, 'YMD')) AS FLEXIBLE_NM
			     , T.FLEXIBLE_SDATE
			     , T.FLEXIBLE_EDATE
			     , CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END AS WEEK_SDATE
			     , CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END AS WEEK_EDATE
			     , CASE WHEN T.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.WORK_MINUTE
			     			WHEN T.WORK_TYPE_CD = 'ELAS' THEN SUM(T.APPR_WORK_MINUTE)
				  			ELSE 40 * 60 END AS STD_WORK_MINUTE
			     , CASE WHEN T.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.OT_MINUTE
				  			ELSE 12 * 60 END AS STD_OT_MINUTE
			     , SUM(APPR_WORK_MINUTE) AS APPR_WORK_MINUTE
			     , SUM(APPR_OT_MINUTE) AS APPR_OT_MINUTE
			     , T.NOTE
			  FROM WTM_WORK_TERM_TIME T
			  JOIN WTM_FLEXIBLE_EMP E
			    ON T.WORK_TYPE_CD = E.WORK_TYPE_CD
			   AND T.TENANT_ID = E.TENANT_ID
			   AND T.ENTER_CD = E.ENTER_CD
			   AND T.SABUN = E.SABUN
			   AND T.FLEXIBLE_SDATE = E.SYMD
			   AND T.FLEXIBLE_EDATE = E.EYMD
			 WHERE T.TENANT_ID = #{tenantId}
			   AND T.ENTER_CD = #{enterCd}
			   AND (#{searchType}='TERM' AND T.WORK_TYPE_CD IN ('SELE_F','SELE_C') AND #{sYmd} BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE
					    OR #{searchType}='WEEK' AND T.WORK_TYPE_CD NOT IN ('SELE_F','SELE_C') AND #{sYmd} BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE 
						 AND #{sYmd} BETWEEN T.WEEK_SDATE AND T.WEEK_EDATE )
			GROUP BY T.TENANT_ID, T.ENTER_CD, T.SABUN, T.WORK_TYPE_CD, T.FLEXIBLE_SDATE, T.FLEXIBLE_EDATE
		) T
		WHERE 1=1
		  AND (#{searchKeyword}='' OR #{searchKeyword} IS NULL OR #{searchKeyword}=T.SABUN OR T.EMP_NM LIKE CONCAT(#{searchKeyword}, '%'))
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='BASE'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='OT'">
			   		<if test="searchCondition=='more'">
			   			and APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			</choose>
		</if>
		order by flexibleSdate desc
  	</select>
  	
  	<select id="getWorktimeDetail" parameterType="map" resultType="wtmGeneral">
  		SELECT C.YMD AS ymd
		     , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS flexibleNm
		     , C.ENTRY_SDATE AS entrySdate
			  , C.ENTRY_EDATE AS entryEdate
			  , R.TIME_TYPE_CD AS timeTypeCd
			  , R.TAA_CD AS taaCd
			  , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHI') AS planSdate
			  , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHI') AS planEdate
			  , CONCAT(FLOOR(R.PLAN_MINUTE/60),':',LPAD(MOD(R.PLAN_MINUTE,60),2,'0')) AS planMinute
			  , F_WTM_DATE_FORMAT(R.APPR_SDATE, 'YMDHI') AS apprSdate
			  , F_WTM_DATE_FORMAT(R.APPR_EDATE, 'YMDHI') AS apprEdate
			  , CONCAT(FLOOR(R.APPR_MINUTE/60),':',LPAD(MOD(R.APPR_MINUTE,60),2,'0')) AS apprMinute
			FROM WTM_WORK_CALENDAR C
			LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			  ON C.TENANT_ID = R.TENANT_ID
			 AND C.ENTER_CD = R.ENTER_CD 
			 AND C.SABUN = R.SABUN 
			 AND C.YMD = R.YMD
			WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
			  AND C.YMD = R.YMD
			  AND C.TENANT_ID = #{tenantId}
			  AND C.ENTER_CD = #{enterCd}
			  AND C.SABUN = #{sabun}
		ORDER BY ymd desc, apprSdate, planSdate
  	</select>
  	
  	<select id="getEntryCheckList" parameterType="map" resultType="wtmGeneral">
  		SELECT C.TENANT_ID as tenantId
			 , C.ENTER_CD as enterCd
			 , C.SABUN as sabun 
			 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS orgNm
			 , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS empNm
			 , C.YMD as ymd
			 , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS flexibleNm
			 , C.TIME_CD_MGR_ID as timeCdMgrId
			 , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHI') as entrySdate
			 , C.ENTRY_STYPE_CD as entryStypeCd
			 , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHI') as entryEdate
			 , C.ENTRY_ETYPE_CD as enteryEtypeCd
			 , C.WORK_CLOSE_YN as workCloseYn
			 , C.HOLIDAY_YN as holidayYn
			 , C.NOTE as note
		FROM WTM_WORK_CALENDAR C
		JOIN ( SELECT TENANT_ID
					     , ENTER_CD
					     , SABUN
					     , YMD
					     , MIN(PLAN_SDATE) AS PLAN_SDATE
					     , MAX(PLAN_EDATE) AS PLAN_EDATE
					  FROM WTM_WORK_DAY_RESULT
					 WHERE TENANT_ID = #{tenantId}
					   AND ENTER_CD = #{enterCd}
					   AND TIME_TYPE_CD IN ('BASE', 'OT')
					   AND YMD BETWEEN #{sYmd} AND #{eYmd}
					   AND (APPR_SDATE IS NULL OR APPR_EDATE IS NULL)
					GROUP BY TENANT_ID, ENTER_CD, SABUN, YMD) R
		  ON C.TENANT_ID = R.TENANT_ID
		 AND C.ENTER_CD = R.ENTER_CD 
		 AND C.SABUN = R.SABUN 
		 AND C.YMD = R.YMD
		WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
		  AND C.TENANT_ID = #{tenantId}
		  AND C.ENTER_CD = #{enterCd}
		  AND ((R.PLAN_SDATE IS NOT NULL AND C.ENTRY_SDATE IS NULL) OR (R.PLAN_EDATE IS NOT NULL AND C.ENTRY_EDATE IS NULL))
	ORDER BY entrySdate desc
  	</select>
  	
  	<select id="getEntryDiffList" parameterType="map" resultType="wtmGeneral">
  		SELECT tenantId
		     , enterCd
		     , sabun
		     , orgNm
		     , empNm
		     , ymd
		     , flexibleNm
		     , timeCdMgrId
		     , F_WTM_DATE_FORMAT(planSdate, 'YMDHI') AS planSdate
		     , F_WTM_DATE_FORMAT(entrySdate, 'YMDHI') AS entrySdate
		     , CASE WHEN diffSsecond is not null THEN 
			  					CASE WHEN diffSsecond&lt;0 THEN CONCAT('-',FLOOR(ABS(diffSsecond)/60),':',LPAD(MOD(ABS(diffSsecond),60),2,'0')) 
			  						  WHEN diffSsecond=0 THEN NULL
			  						  ELSE CONCAT(FLOOR(diffSsecond/60),':',LPAD(MOD(diffSsecond,60),2,'0')) END
						ELSE diffSsecond END AS diffSminute
		     , F_WTM_DATE_FORMAT(planEdate, 'YMDHI') AS planEdate
		     , F_WTM_DATE_FORMAT(entryEdate, 'YMDHI') AS entryEdate
		     , CASE WHEN diffEsecond is not null THEN 
			  					CASE WHEN diffEsecond&lt;0 THEN CONCAT(FLOOR(ABS(diffEsecond)/60),':',LPAD(MOD(ABS(diffEsecond),60),2,'0')) 
			  						  WHEN diffEsecond=0 THEN NULL
			  						  ELSE CONCAT('-',FLOOR(diffEsecond/60),':',LPAD(MOD(diffEsecond,60),2,'0')) END
						ELSE diffEsecond END AS diffEminute
		     , note
		  FROM ( SELECT C.TENANT_ID as tenantId
							 , C.ENTER_CD as enterCd
							 , C.SABUN as sabun 
							 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS orgNm
							 , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS empNm
							 , C.YMD as ymd
							 , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS flexibleNm
							 , C.TIME_CD_MGR_ID as timeCdMgrId
							 , MIN(R.PLAN_SDATE) as planSdate
							 , C.ENTRY_SDATE as entrySdate
							 , TIMESTAMPDIFF(SECOND, MIN(R.PLAN_SDATE), C.ENTRY_SDATE)/60 AS diffSminute
							 , TIMESTAMPDIFF(SECOND, MIN(R.PLAN_SDATE), C.ENTRY_SDATE) AS diffSsecond
							 , MAX(R.PLAN_EDATE) as planEdate
							 , C.ENTRY_EDATE as entryEdate
							 , TIMESTAMPDIFF(SECOND, MAX(R.PLAN_EDATE), C.ENTRY_EDATE)/60 AS diffEminute
							 , TIMESTAMPDIFF(SECOND, MAX(R.PLAN_EDATE), C.ENTRY_EDATE) AS diffEsecond
							 , C.NOTE as note
						FROM WTM_WORK_CALENDAR C
						JOIN WTM_WORK_DAY_RESULT R
						  ON C.TENANT_ID = R.TENANT_ID
						 AND C.ENTER_CD = R.ENTER_CD 
						 AND C.SABUN = R.SABUN 
						 AND C.YMD = R.YMD
						WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
						  AND C.TENANT_ID = #{tenantId}
						  AND C.ENTER_CD = #{enterCd}
						  AND R.TIME_TYPE_CD IN ('BASE', 'OT')
					GROUP BY C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD
		  ) T
		 WHERE 1=1
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and (diffSminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y') OR diffEminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (diffSminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y') OR diffSminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			   	<when test="searchValue=='IN'">
			   		<if test="searchCondition=='more'">
			   			and diffSminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and diffSminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   	</when>
			   	<when test="searchValue=='OUT'">
			   		<if test="searchCondition=='more'">
			   			and diffEminute &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and diffEminute &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   	</when>
			</choose>
		</if>
		ORDER BY ymd desc, sabun, planSdate
  	</select>
</mapper>
