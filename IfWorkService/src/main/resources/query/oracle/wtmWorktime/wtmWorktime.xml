<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmWorktimeMapper">
	<!--근태 이상자 조회 -->
  	<select id="getWorktimeCheckList" parameterType="map" resultType="wtmGeneral">
  		SELECT T.TENANT_ID 
		     , T.ENTER_CD 
		     , T.ORG_NM 
		     , T.SABUN 
		     , T.EMP_NM 
		     , T.WORK_TYPE_CD 
		     , T.FLEXIBLE_NM AS WORK_TYPE_NM
		     , T.FLEXIBLE_SDATE 
		     , T.FLEXIBLE_EDATE 
		     , T.WEEK_SDATE 
		     , T.WEEK_EDATE 
		     , FLOOR(T.STD_WORK_MINUTE/60) || ':' || LPAD(MOD(T.STD_WORK_MINUTE,60),2,'0') AS STD_WORK_MINUTE
		     , FLOOR(T.STD_OT_MINUTE/60) || ':' || LPAD(MOD(T.STD_OT_MINUTE,60),2,'0') AS STD_OT_MINUTE
		     , FLOOR((T.STD_WORK_MINUTE+T.STD_OT_MINUTE)/60) || ':' || LPAD(MOD((T.STD_WORK_MINUTE+T.STD_OT_MINUTE),60),2,'0') AS STD_MINUTE
		     , FLOOR(T.APPR_WORK_MINUTE/60) || ':' || LPAD(MOD(T.APPR_WORK_MINUTE,60),2,'0') AS APPR_WORK_MINUTE
		     , FLOOR(T.APPR_OT_MINUTE/60) || ':' || LPAD(MOD(T.APPR_OT_MINUTE,60),2,'0') AS APPR_OT_MINUTE
		     , FLOOR((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE)/60) || ':' || LPAD(MOD((T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE),60),2,'0') AS APPR_MINUTE
			<choose>
			    <when test="searchValue=='ALL'">
	     		, T.APPR_WORK_MINUTE+T.APPR_OT_MINUTE - T.STD_WORK_MINUTE+T.STD_OT_MINUTE AS DIFF_MINUTE
	     		</when>
	     		<when test="searchValue=='BASE'">
	     		, T.APPR_WORK_MINUTE - T.STD_WORK_MINUTE AS DIFF_MINUTE
	     		</when>
	     		<when test="searchValue=='OT'">
	     		, T.APPR_OT_MINUTE - STD_OT_MINUTE AS DIFF_MINUTE
	     		</when>
	     	</choose>
	     	, 0 AS WORKTIME_DETAIL
	     	, T.NOTE
  		  FROM (
	  		SELECT E.TENANT_ID
			     , E.ENTER_CD
			     , F_WTM_GET_ORG_NM(E.TENANT_ID, E.ENTER_CD, H.ORG_CD, E.SYMD) AS ORG_NM
			     , E.SABUN
			     , H.EMP_NM
			     , E.WORK_TYPE_CD
			     , M.FLEXIBLE_NM
			     , CASE WHEN T.FLEXIBLE_SDATE IS NULL THEN E.SYMD ELSE T.FLEXIBLE_SDATE END AS FLEXIBLE_SDATE
			     , CASE WHEN T.FLEXIBLE_EDATE IS NULL THEN E.EYMD ELSE T.FLEXIBLE_EDATE END AS FLEXIBLE_EDATE
			     , CASE WHEN CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END IS NULL THEN E.SYMD 
				  			ELSE CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_SDATE ELSE T.WEEK_SDATE END END AS WEEK_SDATE
			     , CASE WHEN CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END IS NULL THEN E.EYMD 
				  			ELSE CASE WHEN #{searchType}='TERM' THEN T.FLEXIBLE_EDATE ELSE T.WEEK_EDATE END END AS WEEK_EDATE
			     , CASE WHEN E.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.WORK_MINUTE
			     			WHEN E.WORK_TYPE_CD = 'ELAS' THEN SUM(T.APPR_WORK_MINUTE)
				  			ELSE 40 * 60 END AS STD_WORK_MINUTE
			     , CASE WHEN E.WORK_TYPE_CD IN ('SELE_F','SELE_C') THEN E.OT_MINUTE
				  			ELSE 12 * 60 END AS STD_OT_MINUTE
			     , SUM(APPR_WORK_MINUTE) AS APPR_WORK_MINUTE
			     , SUM(APPR_OT_MINUTE) AS APPR_OT_MINUTE
			     , T.NOTE
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_EMP_HIS H
			    ON E.TENANT_ID = H.TENANT_ID
			   AND E.ENTER_CD = H.ENTER_CD
			   AND E.SABUN = H.SABUN
			   AND E.SYMD BETWEEN H.SYMD AND H.EYMD
			  JOIN WTM_FLEXIBLE_STD_MGR M
			    ON E.TENANT_ID = M.TENANT_ID
			   AND E.ENTER_CD = M.ENTER_CD
			   AND E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			  LEFT OUTER JOIN WTM_WORK_TERM_TIME T
			    ON T.WORK_TYPE_CD = E.WORK_TYPE_CD
			   AND T.TENANT_ID = E.TENANT_ID
			   AND T.ENTER_CD = E.ENTER_CD
			   AND T.SABUN = E.SABUN
			   AND ((#{searchType}='TERM' AND T.WORK_TYPE_CD IN ('SELE_F','SELE_C') 
			        AND E.SYMD BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE AND E.EYMD BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE)
					OR (#{searchType}='WEEK' AND T.WORK_TYPE_CD NOT IN ('SELE_F','SELE_C') 
					AND #{sYmd} BETWEEN T.FLEXIBLE_SDATE AND T.FLEXIBLE_EDATE 
					AND #{sYmd} BETWEEN T.WEEK_SDATE AND T.WEEK_EDATE) )
			 WHERE E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   <if test="orgList!=null">
			   AND H.ORG_CD IN (NULL, 
		       <foreach collection="orgList" item="org" separator=", ">
				   #{org}
			   </foreach>
			   )
			   </if>
			   AND #{sYmd} BETWEEN E.SYMD AND E.EYMD 
			   AND ( #{searchType}='TERM' AND E.WORK_TYPE_CD IN ('SELE_F','SELE_C') OR #{searchType}='WEEK' AND E.WORK_TYPE_CD NOT IN ('SELE_F','SELE_C'))
			GROUP BY E.TENANT_ID, E.ENTER_CD, H.ORG_CD, E.SABUN, H.EMP_NM, E.WORK_TYPE_CD, M.FLEXIBLE_NM, E.SYMD, E.EYMD
			, T.FLEXIBLE_SDATE, T.FLEXIBLE_EDATE ,WEEK_EDATE, WEEK_SDATE
            , E.WORK_MINUTE, E.OT_MINUTE, T.NOTE
        ) T
		WHERE 1=1
		  AND (#{searchKeyword, jdbcType=VARCHAR}='' OR #{searchKeyword, jdbcType=VARCHAR} IS NULL OR #{searchKeyword, jdbcType=VARCHAR}=T.SABUN OR T.EMP_NM LIKE #{searchKeyword, jdbcType=VARCHAR} || '%')
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE+APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='BASE'">
			   		<if test="searchCondition=='more'">
			   			and APPR_WORK_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_WORK_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			   	<when test="searchValue=='OT'">
			   		<if test="searchCondition=='more'">
			   			and APPR_OT_MINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and APPR_OT_MINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y')* 60
			   		</if>
			   	</when>
			</choose>
		</if>
		order by FLEXIBLE_SDATE DESC, APPR_WORK_MINUTE DESC, APPR_OT_MINUTE DESC
  	</select>
  	
  	<select id="getWorktimeDetail" parameterType="map" resultType="wtmGeneral">
  		SELECT C.YMD 
		     , M.FLEXIBLE_NM
		     , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHI') AS ENTRY_SDATE
			  , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHI') AS ENTRY_EDATE 
			  , R.TIME_TYPE_CD
			  , R.TAA_CD
			  , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHI') AS PLAN_SDATE
			  , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHI') AS PLAN_EDATE
			  , FLOOR(R.PLAN_MINUTE/60) || ':' || LPAD(MOD(R.PLAN_MINUTE,60),2,'0') AS PLAN_MINUTE
			  , F_WTM_DATE_FORMAT(R.APPR_SDATE, 'YMDHI') AS APPR_SDATE
			  , F_WTM_DATE_FORMAT(R.APPR_EDATE, 'YMDHI') AS APPR_EDATE
			  , FLOOR(R.APPR_MINUTE/60) || ':' || LPAD(MOD(R.APPR_MINUTE,60),2,'0') AS APPR_MINUTE
			FROM WTM_WORK_CALENDAR C
			JOIN WTM_FLEXIBLE_EMP E
			  ON C.TENANT_ID = E.TENANT_ID
			 AND C.ENTER_CD = E.ENTER_CD
			 AND C.SABUN = E.SABUN
			 AND C.YMD BETWEEN E.SYMD AND E.EYMD
			LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			  ON C.TENANT_ID = R.TENANT_ID
			 AND C.ENTER_CD = R.ENTER_CD 
			 AND C.SABUN = R.SABUN 
			LEFT OUTER JOIN WTM_FLEXIBLE_STD_MGR M
			  ON C.TENANT_ID = M.TENANT_ID
			 AND C.ENTER_CD = M.ENTER_CD
			 AND E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
			WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
			  AND C.TENANT_ID = #{tenantId}
			  AND C.ENTER_CD = #{enterCd}
			  AND C.SABUN = #{sabun}
			  AND C.YMD = R.YMD
		ORDER BY C.YMD desc, APPR_SDATE, PLAN_SDATE
  	</select>
  	
  	<select id="getEntryCheckList" parameterType="map" resultType="wtmGeneral">
  		SELECT C.TENANT_ID 
			 , C.ENTER_CD 
			 , C.SABUN 
			 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS ORG_NM
			 , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS EMP_NM
			 , C.YMD 
			 , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS FLEXIBLE_NM
			 , C.TIME_CD_MGR_ID 
			 , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHI') as ENTRY_SDATE
			 , C.ENTRY_STYPE_CD 
			 , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHI') as ENTRY_EDATE
			 , C.ENTRY_ETYPE_CD 
			 , C.WORK_CLOSE_YN 
			 , C.HOLIDAY_YN 
			 , C.NOTE
		FROM WTM_WORK_CALENDAR C
		JOIN WTM_EMP_HIS H
		  ON C.TENANT_ID = H.TENANT_ID
		 AND C.ENTER_CD = H.ENTER_CD
		 AND C.SABUN = H.SABUN
		 AND C.YMD BETWEEN H.SYMD AND H.EYMD
		JOIN ( SELECT TENANT_ID
					     , ENTER_CD
					     , SABUN
					     , YMD
					     , MIN(PLAN_SDATE) AS PLAN_SDATE
					     , MAX(PLAN_EDATE) AS PLAN_EDATE
					  FROM WTM_WORK_DAY_RESULT
					 WHERE TENANT_ID = #{tenantId}
					   AND ENTER_CD = #{enterCd}
					   AND TIME_TYPE_CD IN ('BASE', 'OT')
					   AND YMD BETWEEN #{sYmd} AND #{eYmd}
					   AND (APPR_SDATE IS NULL OR APPR_EDATE IS NULL)
					GROUP BY TENANT_ID, ENTER_CD, SABUN, YMD) R
		  ON C.TENANT_ID = R.TENANT_ID
		 AND C.ENTER_CD = R.ENTER_CD 
		 AND C.SABUN = R.SABUN 
		 AND C.YMD = R.YMD
		WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
		  AND C.TENANT_ID = #{tenantId}
		  AND C.ENTER_CD = #{enterCd}
		  AND ((R.PLAN_SDATE IS NOT NULL AND C.ENTRY_SDATE IS NULL) OR (R.PLAN_EDATE IS NOT NULL AND C.ENTRY_EDATE IS NULL))
		  <if test="orgList!=null">
		   AND H.ORG_CD IN (NULL, 
	       <foreach collection="orgList" item="org" separator=", ">
			   #{org}
		   </foreach>
		   )
		   </if>
	ORDER BY ENTRY_SDATE desc
  	</select>
  	
  	<select id="getEntryDiffList" parameterType="map" resultType="wtmGeneral">
  		SELECT TENANT_ID
		     , ENTER_CD
		     , SABUN
		     , ORG_NM
		     , EMP_NM
		     , YMD
		     , FLEXIBLE_NM
		     , TIME_CD_MGR_ID
		     , F_WTM_DATE_FORMAT(PLAN_SDATE, 'YMDHI') AS PLAN_SDATE
		     , F_WTM_DATE_FORMAT(ENTRY_SDATE, 'YMDHI') AS ENTRY_SDATE
		     , DIFF_SMINUTE
		     , F_WTM_DATE_FORMAT(PLAN_EDATE, 'YMDHI') AS PLAN_EDATE
		     , F_WTM_DATE_FORMAT(ENTRY_EDATE, 'YMDHI') AS ENTRY_EDATE
		     , DIFF_EMINUTE
		     , NOTE
		  FROM ( SELECT C.TENANT_ID 
							 , C.ENTER_CD
							 , C.SABUN
							 , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS ORG_NM
							 , H.EMP_NM
							 , C.YMD 
							 , M.FLEXIBLE_NM 
							 , C.TIME_CD_MGR_ID 
							 , MIN(R.PLAN_SDATE) as PLAN_SDATE
							 , C.ENTRY_SDATE 
							 , F_WTM_TIMESTAMPDIFF('MINUTE', MIN(R.PLAN_SDATE), C.ENTRY_SDATE) AS DIFF_SMINUTE
							 , F_WTM_TIMESTAMPDIFF('SECOND', MIN(R.PLAN_SDATE), C.ENTRY_SDATE) AS DIFF_SSECOND
							 , MAX(R.PLAN_EDATE) as PLAN_EDATE
							 , C.ENTRY_EDATE
							 , F_WTM_TIMESTAMPDIFF('MINUTE', MAX(R.PLAN_EDATE), C.ENTRY_EDATE) AS DIFF_EMINUTE
							 , F_WTM_TIMESTAMPDIFF('SECOND', MAX(R.PLAN_EDATE), C.ENTRY_EDATE) AS DIFF_ESECOND
							 , C.NOTE
						FROM WTM_WORK_CALENDAR C
						JOIN WTM_EMP_HIS H
						  ON C.TENANT_ID = H.TENANT_ID
						 AND C.ENTER_CD = H.ENTER_CD
						 AND C.SABUN = H.SABUN
						 AND C.YMD BETWEEN H.SYMD AND H.EYMD
						JOIN WTM_WORK_DAY_RESULT R
						  ON C.TENANT_ID = R.TENANT_ID
						 AND C.ENTER_CD = R.ENTER_CD 
						 AND C.SABUN = R.SABUN 
						 AND C.YMD = R.YMD
						 LEFT OUTER JOIN WTM_FLEXIBLE_EMP E
						  ON C.TENANT_ID = E.TENANT_ID
						 AND C.ENTER_CD = E.ENTER_CD
						 AND C.SABUN = E.SABUN
						 AND C.YMD BETWEEN E.SYMD AND E.EYMD
						 JOIN WTM_FLEXIBLE_STD_MGR M
						  ON E.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID
						WHERE C.YMD BETWEEN #{sYmd} AND #{eYmd}
						  AND C.TENANT_ID = #{tenantId}
						  AND C.ENTER_CD = #{enterCd}
						  AND R.TIME_TYPE_CD IN ('BASE', 'OT')
						  <if test="orgList!=null">
						   AND H.ORG_CD IN (NULL, 
					       <foreach collection="orgList" item="org" separator=", ">
							   #{org}
						   </foreach>
						   )
						   </if>
					GROUP BY C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD, C.TIME_CD_MGR_ID, C.ENTRY_SDATE, C.ENTRY_EDATE, C.NOTE
		  ) T
		 WHERE 1=1
		<if test="searchValue!='' and searchMinute!='' and searchCondition!=''">
			<choose>
			    <when test="searchValue=='ALL'">
			   		<if test="searchCondition=='more'">
			   		    and (PLAN_SDATE IS NOT NULL and ENTRY_SDATE IS NOT NULL or PLAN_EDATE IS NOT NULL and ENTRY_EDATE IS NOT NULL)
			   			and (DIFF_SMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y') OR  DIFF_EMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (PLAN_SDATE IS NULL or ENTRY_SDATE IS NULL or PLAN_EDATE IS NULL or ENTRY_EDATE IS NULL
			   			or DIFF_SMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y') OR DIFF_EMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			   	<when test="searchValue=='IN'">
			   		<if test="searchCondition=='more'">
			   		    and PLAN_SDATE IS NOT NULL and ENTRY_SDATE IS NOT NULL
			   			and DIFF_SMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (PLAN_SDATE IS NULL or ENTRY_SDATE IS NULL or DIFF_SMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			   	<when test="searchValue=='OUT'">
			   		<if test="searchCondition=='more'">
			   			and PLAN_EDATE IS NOT NULL and ENTRY_EDATE IS NOT NULL
			   			and DIFF_EMINUTE &gt;= F_WTM_TO_NUMBER(#{searchMinute},'Y')
			   		</if>
			   		<if test="searchCondition=='under'">
			   			and (PLAN_EDATE IS NULL or ENTRY_EDATE IS NULL or DIFF_EMINUTE &lt; F_WTM_TO_NUMBER(#{searchMinute},'Y'))
			   		</if>
			   	</when>
			</choose>
		</if>
		ORDER BY YMD desc, SABUN, PLAN_SDATE
  	</select>
  	
  	<select id="getTermList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT F_WTM_DATE_FORMAT(SDATE, 'YMD') || ' ~ ' || F_WTM_DATE_FORMAT(EDATE, 'YMD') AS TITLE,  
				WORK_TYPE_NM AS CAPTION_RB, SDATE || '@' || #{month} || '@' || WORK_TYPE_CD AS KEY2
			FROM(
				SELECT DISTINCT T.WORK_TYPE_CD, T.SDATE, T.EDATE, WORK_TYPE_NM, H.ORG_CD
					FROM (SELECT CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_SDATE ELSE WEEK_SDATE END AS SDATE
				           , CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_EDATE ELSE WEEK_EDATE END AS EDATE
				           , SABUN
				           , WORK_TYPE_CD
				           , TENANT_ID
				           , ENTER_CD
				           , F_WTM_GET_CODE_NM(#{tenantId}, #{enterCd},'WORK_TYPE_CD', WORK_TYPE_CD, F_WTM_DATE_FORMAT(SYSDATE, 'YMD')) AS WORK_TYPE_NM
				        FROM WTM_WORK_TERM_TIME
				        WHERE TENANT_ID=#{tenantId} 
				        AND  ENTER_CD=#{enterCd} ) T
				  JOIN WTM_EMP_HIS H 
				   ON H.TENANT_ID = T.TENANT_ID 
				   AND H.ENTER_CD = T.ENTER_CD 
				   ]]>
				    <if test="orgList!=null">
				   AND H.ORG_CD IN (NULL,
				       <foreach collection="orgList" item="org" separator=", ">
						   #{org}
					   </foreach>	   
				   )
				    </if>
				    <![CDATA[
				   AND H.SABUN = T.SABUN
				   AND H.EYMD = '29991231'
				   AND H.STATUS_CD = 'AA'
				 WHERE #{month} BETWEEN SUBSTR(T.SDATE, 1, 6) AND SUBSTR(T.EDATE, 1, 6)
				   AND F_WTM_DATE_FORMAT(SYSDATE, 'YMD') > T.SDATE) X
		    GROUP BY WORK_TYPE_CD, SDATE, EDATE, WORK_TYPE_NM
		    ORDER BY KEY2 DESC
        ]]>
    </select>
    
    <select id="getTeamList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT T.SABUN || '@' || T.SDATE || '@' ||T.EDATE AS KEY2, 
				H.EMP_NM AS TITLE, 
				T.WORK_TYPE_CD as WORK_TYPE_CD, 
				T.SDATE as SDATE, 
				T.EDATE as EDATE, 
				F_WTM_SUM_FLEXIBLE_EMP_TIME(T.TENANT_ID, T.ENTER_CD, T.SABUN, T.SDATE, T.EDATE) as CAPTION_RB,
				TO_CHAR(TRUNC(SUM(T.APPR_WORK_MINUTE)/60),'FM9900') || ':' ||     TO_CHAR(TRUNC(MOD(SUM(T.APPR_WORK_MINUTE),60)),'FM9900')  as CAPTION_RB, 
				TO_CHAR(TRUNC(SUM(T.APPR_OT_MINUTE)/60),'FM9900') || ':' ||     TO_CHAR(TRUNC(MOD(SUM(T.APPR_OT_MINUTE),60)),'FM9900')  as STATUS, 
				H.ORG_CD, F_WTM_GET_ORG_NM(T.TENANT_ID, T.ENTER_CD, H.ORG_CD, F_WTM_DATE_FORMAT(SYSDATE, 'YMD')) as CAPTION_LB				
					FROM (SELECT CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_SDATE ELSE WEEK_SDATE END AS SDATE
				           , CASE WHEN WORK_TYPE_CD LIKE 'SELE%' THEN FLEXIBLE_EDATE ELSE WEEK_EDATE END AS EDATE
				           , SABUN
				           , WORK_TYPE_CD
				           , APPR_WORK_MINUTE
				           , APPR_OT_MINUTE
				           , TENANT_ID
				           , ENTER_CD
				        FROM WTM_WORK_TERM_TIME
				        WHERE TENANT_ID=#{tenantId}
				        AND  ENTER_CD=#{enterCd} ) T
				JOIN WTM_EMP_HIS H 
				   ON H.TENANT_ID = T.TENANT_ID 
				   AND H.ENTER_CD = T.ENTER_CD 
				   ]]>
				    <if test="orgList!=null">
				   AND H.ORG_CD IN (NULL,
				       <foreach collection="orgList" item="org" separator=", ">
						   #{org}
					   </foreach>	   
				   )
				    </if>
				    <![CDATA[
				   AND H.SABUN = T.SABUN
				   AND H.EYMD = '29991231'
				   AND H.STATUS_CD = 'AA'
				WHERE 1=1
				      AND T.SDATE = #{sdate}
				      AND T.WORK_TYPE_CD = #{workTypeCd}
				GROUP BY T.TENANT_ID, T.ENTER_CD, T.SABUN, H.EMP_NM, T.WORK_TYPE_CD, T.SDATE, T.EDATE, H.ORG_CD
				ORDER BY H.ORG_CD
        ]]>
    </select>
    
    <select id="getWorkPlan" parameterType="map" resultType="wtmGeneral">
  		SELECT C.YMD 
		     , C.SABUN
		     , F_WTM_GET_EMP_ORG_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS ORG_NM
			  , F_WTM_GET_EMP_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS EMP_NM
		     , F_WTM_GET_FLEXIBLE_NM(C.TENANT_ID, C.ENTER_CD, C.SABUN, C.YMD) AS FLEXIBLE_NM
		     , F_WTM_DATE_FORMAT(C.ENTRY_SDATE, 'YMDHIS') AS ENTRY_SDATE
			  , F_WTM_DATE_FORMAT(C.ENTRY_EDATE, 'YMDHIS') AS ENTRY_EDATE
			  , C.TIME_CD_MGR_ID
			  , R.TIME_TYPE_CD
			  , F_WTM_DATE_FORMAT(R.PLAN_SDATE, 'YMDHIS') AS PLAN_SDATE
			  , F_WTM_DATE_FORMAT(R.PLAN_EDATE, 'YMDHIS') AS PLAN_EDATE
			  , CONCAT(FLOOR(R.PLAN_MINUTE/60),':',LPAD(MOD(R.PLAN_MINUTE,60),2,'0')) AS PLAN_MINUTE
			FROM WTM_FLEXIBLE_EMP E
			JOIN WTM_WORK_CALENDAR C
			  ON E.TENANT_ID = C.TENANT_ID
			 AND E.ENTER_CD = C.ENTER_CD
			 AND E.SABUN = C.SABUN
			 AND C.YMD BETWEEN E.SYMD AND E.EYMD
			JOIN WTM_WORK_DAY_RESULT R
			  ON C.TENANT_ID = R.TENANT_ID
			 AND C.ENTER_CD = R.ENTER_CD 
			 AND C.SABUN = R.SABUN 
			 AND C.YMD = R.YMD
			WHERE E.TENANT_ID = ${tenantId}
			  AND E.ENTER_CD = #{enterCd}
			  AND E.WORK_TYPE_CD NOT IN ('SELE_C','SELE_F','ELAS')
			  AND C.YMD = #{ymd}
			  AND R.TIME_TYPE_CD = 'BASE'
			  AND E.SABUN IN ( NULL
			   <if test="empList!=null">
			   <foreach collection="empList" item="sabun" >
			   ,#{sabun}
			   </foreach>
			   </if>
			   )
		ORDER BY ymd desc, sabun, planSdate
  	</select>
  	
  	<select id="getWorkTimeChangeTarget" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
        	SELECT *
        	  FROM (
			        	SELECT EMP_HIS_ID 
							 , ENTER_CD
							 , SABUN
							 , EMP_NM 
							 , EMP_ENG_NM
							 , SYMD 
							 , EYMD 
							 , STATUS_CD 
							 , ORG_CD
							 , BUSINESS_PLACE_CD
							 , DUTY_CD 
							 , POS_CD 
							 , CLASS_CD
							 , JOB_GROUP_CD
							 , JOB_CD 
							 , PAY_TYPE_CD 
							 , LEADER_YN
							 , NOTE 
							 , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS ORG_NM
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'DUTY_CD', DUTY_CD, SYMD) AS DUTY_NM
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'POS_CD', POS_CD, SYMD) AS POS_NM
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'CLASS_CD', CLASS_CD, SYMD) AS CLASS_NM
							 , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'JOB_CD', JOB_CD, SYMD) AS JOB_NM
							 , EMP_ID
						  FROM WTM_EMP_HIS
						 WHERE TENANT_ID = #{tenantId}
						   AND ENTER_CD = #{enterCd} 
							AND CASE WHEN length(#{ymd, jdbcType=VARCHAR}) > 0 THEN REPLACE(#{ymd, jdbcType=VARCHAR}, '-', '')
							         ELSE F_WTM_DATE_FORMAT(SYSDATE,'YMD') END BETWEEN SYMD AND EYMD
		]]>
			        	   <if test="orgList!=null">
						   AND ORG_CD IN (NULL, 
					       <foreach collection="orgList" item="org" separator=", ">
							   #{org}
						   </foreach>
						   )
						   </if>
						   AND SABUN IN ( SELECT SABUN
										  FROM WTM_WORK_DAY_RESULT
										 WHERE YMD = #{ymd}
										   AND TENANT_ID = #{tenantId}
										   AND ENTER_CD = #{enterCd}
										GROUP BY TENANT_ID, ENTER_CD, YMD, SABUN
										HAVING SUM(CASE WHEN TIME_TYPE_CD NOT IN ('BASE','FIXOT') THEN 1 ELSE 0 END)=0 )
			) T
			WHERE 1=1
			  AND (SABUN LIKE #{searchKeyword, jdbcType=VARCHAR} || '%'
				OR EMP_NM LIKE '%' ||  #{searchKeyword, jdbcType=VARCHAR} ||'%'
				OR ORG_NM LIKE '%' ||  #{searchKeyword, jdbcType=VARCHAR} ||'%'
				OR DUTY_NM LIKE '%' ||  #{searchKeyword, jdbcType=VARCHAR} ||'%'
				OR POS_NM LIKE '%' ||  #{searchKeyword, jdbcType=VARCHAR} ||'%'
				OR CLASS_NM LIKE '%' ||  #{searchKeyword, jdbcType=VARCHAR} ||'%'
				OR JOB_NM LIKE '%' ||  #{searchKeyword, jdbcType=VARCHAR} ||'%') 
						  
    </select>
</mapper>
