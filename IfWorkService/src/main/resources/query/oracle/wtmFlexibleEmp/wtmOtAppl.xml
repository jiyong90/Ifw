<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmOtApplMapper">
	 <update id="calcOtMinute" parameterType="map">
	 	UPDATE WTM_OT_APPL O
		   SET OT_MINUTE = (
			SELECT F_WTM_CALC_MINUTE(F_WTM_DATE_FORMAT(O.OT_SDATE, 'HI') ,F_WTM_DATE_FORMAT(O.OT_EDATE, 'HI'),  '','','') -  SUM(F_WTM_CALC_MINUTE(B.SHM, B.EHM,F_WTM_DATE_FORMAT(O.OT_SDATE, 'HI') ,F_WTM_DATE_FORMAT(O.OT_EDATE, 'HI'),  '')) 
			  FROM WTM_FLEXIBLE_EMP E
			  JOIN WTM_WORK_CALENDAR C
			    ON E.TENANT_ID = C.TENANT_ID
			   AND E.ENTER_CD = C.ENTER_CD
			   AND E.SABUN = C.SABUN
			   AND C.YMD BETWEEN E.SYMD AND E.EYMD
			  JOIN WTM_TIME_CD_MGR T
			    ON C.TIME_CD_MGR_ID = T.TIME_CD_MGR_ID 
			  JOIN WTM_TIME_BREAK_MGR B
			    ON T.TIME_CD_MGR_ID = B.TIME_CD_MGR_ID 
			 WHERE C.YMD BETWEEN E.SYMD AND E.EYMD
			   AND E.TENANT_ID = #{tenantId}
			   AND E.ENTER_CD = #{enterCd}
			   AND E.SABUN = #{sabun}
			   AND C.YMD = #{ymd}
		)
		 WHERE O.APPL_ID = #{applId}
	 </update>
	 
	 <select id="otApplfindByApplId" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT O.OT_APPL_ID
			     , O.APPL_ID
			     , O.YMD 
			     , O.HOLIDAY_YN 
			     , O.OT_SDATE 
			     , O.OT_EDATE 
			     , O.OT_MINUTE 
			     , O.RET_OT_MINUTE 
			     , O.REASON_CD 
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'REASON_CD', O.REASON_CD, A.APPL_YMD) AS REASON_NM
			     , O.REASON 
			     , O.SUB_YN 
			     , O.OLD_OT_APPL_ID 
			     , O.CANCEL_YN 
			     , A.APPL_SABUN 
			     , A.TENANT_ID
			     , A.ENTER_CD
			     , O.SABUN
			     , A.APPL_SABUN
			     , A.APPL_CD 
			     , A.APPL_STATUS_CD
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'APPL_STATUS_CD', A.APPL_STATUS_CD, A.APPL_YMD) AS APPL_STATUS_NM
			     , R.WORK_DAY_RESULT_ID 
			  FROM WTM_APPL A
			  JOIN WTM_OT_APPL O
			    ON A.APPL_ID = O.APPL_ID
			  LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			    ON A.TENANT_ID = R.TENANT_ID
			   AND A.ENTER_CD = R.ENTER_CD
			   AND A.APPL_SABUN = R.SABUN
				AND A.APPL_ID = R.APPL_ID
				AND O.YMD = R.YMD
			 WHERE O.APPL_ID = #{applId}   
			   AND (A.APPL_SABUN = #{sabun} OR O.SABUN IS NULL OR O.SABUN = #{sabun})
			   AND (R.TIME_TYPE_CD IS NULL OR R.TIME_TYPE_CD = 'OT')
			 ORDER BY O.OT_SDATE
	        ]]>
    </select>
    
    <select id="otSubsApplfindByOtApplId" parameterType="Long" resultType="wtmGeneral">
        <![CDATA[
			SELECT S.OT_SUBS_APPL_ID 
			     , S.OT_APPL_ID 
			     , S.APPL_ID
			     , S.HOLIDAY_TYPE 
			     , S.SUB_YMD
			     , S.SUBS_SDATE 
			     , S.SUBS_EDATE 
			     , S.SUBS_MINUTE 
			     , S.OLD_SUBS_APPL_ID 
			     , T.WORK_S_DATE
			     , T.WORK_E_DATE
			  FROM WTM_OT_SUBS_APPL S
			  LEFT OUTER JOIN ( SELECT S.OT_SUBS_APPL_ID
			                       , S.SUB_YMD
			                       , MIN(R.PLAN_SDATE) AS WORK_S_DATE
			                       , MAX(R.PLAN_EDATE) AS WORK_E_DATE
			                    FROM WTM_OT_SUBS_APPL S
			                    JOIN WTM_APPL A
			                      ON S.APPL_ID = A.APPL_ID
			                    JOIN WTM_WORK_DAY_RESULT R
			                      ON A.TENANT_ID = R.TENANT_ID
			                     AND A.ENTER_CD = R.ENTER_CD
			                     AND A.APPL_SABUN = R.SABUN
			                     AND S.SUB_YMD = R.YMD
			                     AND ( S.SUBS_SDATE BETWEEN R.PLAN_SDATE AND R.PLAN_EDATE OR S.SUBS_EDATE BETWEEN R.PLAN_SDATE AND R.PLAN_EDATE )
			                   WHERE S.OT_APPL_ID = #{otApplId} 
			                  GROUP BY S.OT_SUBS_APPL_ID, S.SUB_YMD ) T
			    ON S.OT_SUBS_APPL_ID = T.OT_SUBS_APPL_ID
			 WHERE S.OT_APPL_ID = #{otApplId}
			ORDER BY S.SUB_YMD, S.SUBS_SDATE
	        ]]>
    </select>
    
    <select id="getPrevOtSubsApplList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT O.YMD 
			     , O.OT_SDATE AS S_DATE
			     , O.OT_EDATE AS E_DATE
			     , O.OT_MINUTE AS OT_MINUTE
			     , CASE F_WTM_WEEKDAY(F_WTM_DATE_FORMAT(O.OT_SDATE, 'YMD')) 
			  			WHEN 1 THEN '일' 
						WHEN 2 THEN '월'
						WHEN 3 THEN '화' 
						WHEN 4 THEN '수' 
						WHEN 5 THEN '목' 
						WHEN 6 THEN '금' 
						WHEN 7 THEN '토' END AS S_DAY
				  , CASE F_WTM_WEEKDAY(F_WTM_DATE_FORMAT(O.OT_EDATE, 'YMD')) 
			  			WHEN 1 THEN '일' 
						WHEN 2 THEN '월'
						WHEN 3 THEN '화' 
						WHEN 4 THEN '수' 
						WHEN 5 THEN '목' 
						WHEN 6 THEN '금' 
						WHEN 7 THEN '토' END AS E_DAY
			  FROM WTM_OT_APPL O
			  JOIN WTM_APPL A
			    ON O.APPL_ID = A.APPL_ID
			 WHERE A.TENANT_ID = #{tenantId}
			   AND A.ENTER_CD = #{enterCd}
			   AND A.APPL_SABUN = #{sabun}
			   AND O.HOLIDAY_YN = 'Y'
	        ]]>
    </select>
    
    <select id="getTotOtMinuteBySymdAndEymd" parameterType="map" resultType="wtmGeneral">
    <![CDATA[
    	SELECT SUM(CASE WHEN X.OT_MINUTE IS NULL OR X.OT_MINUTE='' THEN 0 ELSE X.OT_MINUTE END) AS TOT_OT_MINUTE
		  FROM (
			SELECT F_WTM_NVL(SUM(F_WTM_NVL(O.OT_MINUTE,0)) - SUM(F_WTM_NVL(S.SUBS_MINUTE,0)),0) AS OT_MINUTE
			  FROM WTM_APPL A
			  JOIN WTM_OT_APPL O
			    ON A.APPL_ID = O.APPL_ID
			  LEFT OUTER JOIN WTM_OT_SUBS_APPL S
			    ON A.APPL_ID = S.APPL_ID
			   AND S.SUB_YMD BETWEEN #{symd} AND #{eymd}
			 WHERE A.APPL_STATUS_CD IN ('21','31')
			   AND O.YMD BETWEEN #{symd} AND #{eymd}
			   AND A.APPL_IN_SABUN = #{sabun}
			   AND (A.APPL_ID <> #{applId, jdbcType=BIGINT} OR #{applId, jdbcType=BIGINT} IS NULL OR #{applId, jdbcType=BIGINT} = '') 
			 UNION ALL
			SELECT F_WTM_NVL(CASE WHEN R.APPR_MINUTE IS NULL THEN R.PLAN_MINUTE ELSE R.APPR_MINUTE END,0) AS OT_MINUTE
			  FROM WTM_WORK_DAY_RESULT R
			 WHERE R.TENANT_ID = #{tenantId}
			   AND R.ENTER_CD = #{enterCd}
			   AND R.YMD BETWEEN #{symd} AND #{eymd}
			   AND R.TIME_TYPE_CD IN ('OT','FIXOT')
			   AND R.SABUN = #{sabun}
		) X
	]]>
    </select>
   
    <select id="getRestOtMinute" parameterType="map" resultType="wtmGeneral">
		 SELECT E.TENANT_ID
		     , E.ENTER_CD
		     , E.SABUN
		     , E.EMP_NM
		     , F_WTM_GET_ORG_NM(TENANT_ID, ENTER_CD, ORG_CD, SYMD) AS ORG_NM
			  , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'DUTY_CD', DUTY_CD, SYMD) AS DUTY_NM
			  , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'POS_CD', POS_CD, SYMD) AS POS_NM
			  , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'CLASS_CD', CLASS_CD, SYMD) AS CLASS_NM
			  , F_WTM_GET_CODE_NM(TENANT_ID, ENTER_CD, 'JOB_CD', JOB_CD, SYMD) AS JOB_NM
		     , F_WTM_GET_WORK_MINUTE(E.TENANT_ID, E.ENTER_CD, E.SABUN, #{ymd}, 'R', 'OT') AS REST_OT_MINUTE
		  FROM WTM_EMP_HIS E
		 WHERE E.TENANT_ID = #{tenantId}
		   AND E.ENTER_CD = #{enterCd}
		   <if test="sabuns!=null">
		   AND E.SABUN IN (NULL, 
	       <foreach collection="sabuns" item="sabun" separator=", ">
			   #{sabun}
		   </foreach>
		   )
		   </if>
		   <if test="sabuns==null">
		   AND E.SABUN = NULL
		   </if>
		   AND #{ymd} BETWEEN E.SYMD AND E.EYMD
  	</select>
  	
   	 <select id="otApplDetailByApplId" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT 	DATE_FORMAT(O.OT_SDATE, '%Y.%m.%d %H:%i') AS OT_SDATE
			     , DATE_FORMAT(O.OT_EDATE, '%Y.%m.%d %H:%i') AS OT_EDATE
			     , F_WTM_GET_CODE_NM(A.TENANT_ID, A.ENTER_CD, 'REASON_CD', O.REASON_CD, A.APPL_YMD) AS REASON_NM
			     , O.REASON AS REASON
			     , CASE WHEN O.SUB_YN = 'Y' THEN '휴일대체' ELSE '위로금/시급지급' END AS SUB_YN
			     , CASE WHEN O.SUB_YN = 'Y' THEN 
			     	(select group_concat(CONCAT(DATE_FORMAT(SUBS_SDATE, '%Y.%m.%d %H:%i'), ' ~ ', DATE_FORMAT(SUBS_EDATE, '%H:%i'))) from WTM_OT_SUBS_APPL where APPL_ID =#{applId}) 
			      ELSE '-' END AS SUBS_YMD
			  FROM WTM_APPL A
			  JOIN WTM_OT_APPL O
			    ON A.APPL_ID = O.APPL_ID
			  LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
			    ON A.TENANT_ID = R.TENANT_ID
			   AND A.ENTER_CD = R.ENTER_CD
			   AND A.APPL_SABUN = R.SABUN
				AND A.APPL_ID = R.APPL_ID
				AND O.YMD = R.YMD
			 WHERE O.APPL_ID = #{applId}   
			   AND (R.TIME_TYPE_CD IS NULL OR R.TIME_TYPE_CD = 'OT')
			 ORDER BY O.OT_SDATE
	        ]]>
    </select>
    
    <select id="subsCreateTarget" parameterType="map" resultType="wtmGeneral">
  		<![CDATA[
		 SELECT distinct O.OT_APPL_ID
		  FROM WTM_OT_APPL O
		  JOIN WTM_OT_SUBS_APPL S
		    ON O.OT_APPL_ID = S.OT_APPL_ID
		  JOIN WTM_APPL A
		    ON O.APPL_ID = A.APPL_ID
		  LEFT OUTER JOIN WTM_WORK_DAY_RESULT R
		    ON A.APPL_ID = R.APPL_ID
		   AND A.TENANT_ID = R.TENANT_ID
		   AND A.ENTER_CD = R.ENTER_CD
		   AND R.TIME_TYPE_CD = 'SUBS'
		   AND R.YMD = S.SUB_YMD
		  LEFT OUTER JOIN WTM_WORK_DAY_RESULT T
		    ON A.APPL_ID = T.APPL_ID
		   AND A.TENANT_ID = T.TENANT_ID
		   AND A.ENTER_CD = T.ENTER_CD
		   AND T.TIME_TYPE_CD IN ('OT','NIGHT')
		   AND T.YMD = O.YMD
		   AND T.APPR_SDATE IS NOT NULL AND T.APPR_EDATE IS NOT NULL
		 WHERE A.TENANT_ID = ${tenantId}
		   AND A.ENTER_CD = #{enterCd}
		   AND A.APPL_STATUS_CD = '99'
		   AND O.SABUN = #{sabun}
		   AND O.HOLIDAY_YN = 'Y'
			AND O.SUB_YN = 'Y'
			AND (O.CANCEL_YN IS NULL OR O.CANCEL_YN <> 'Y')
			AND F_WTM_DATE_FORMAT(O.OT_SDATE,'YMD') BETWEEN #{sYmd} AND #{eYmd}
			AND R.WORK_DAY_RESULT_ID IS NULL
			AND (#{otApplId, jdbcType=VARCHAR} IS NULL OR O.OT_APPL_ID = #{otApplId, jdbcType=VARCHAR})
		]]>
  	</select>
    
</mapper>
