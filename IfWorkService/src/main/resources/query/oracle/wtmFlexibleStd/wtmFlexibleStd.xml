<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmFlexibleStdMapper">
    <select id="getWtmFlexibleStd" parameterType="map" resultType="wtmFlexibleStd">
        <![CDATA[
			SELECT C.APPL_NM AS WORK_TYPE_NM 
			     , S.*
			     , C.*
			     , CASE F_WTM_WEEKDAY(use_symd) 
						WHEN 1 THEN '일요일'
						WHEN 2 THEN '월요일'
						WHEN 3 THEN '화요일'
						WHEN 4 THEN '수요일'
						WHEN 5 THEN '목요일'
						WHEN 6 THEN '금요일'
						WHEN 7 THEN '토요일' END AS WEEK_DAY
			  FROM WTM_FLEXIBLE_STD_MGR S 
			  JOIN WTM_APPL_CODE C
			    ON C.ENTER_CD = S.ENTER_CD
			   AND C.TENANT_ID = S.TENANT_ID
			   AND S.WORK_TYPE_CD = C.APPL_CD
			 WHERE S.TENANT_ID = #{tenantId}
			   AND S.ENTER_CD = #{enterCd}
			   AND #{d} BETWEEN S.USE_SYMD AND S.USE_EYMD
			   AND S.BASE_WORK_YN = 'N'
			   AND S.APPL_YN = 'Y'
			 ORDER BY S.USE_SYMD DESC
        ]]>
    </select>
    <select id="checkRequestDate" parameterType="map" resultType="wtmGeneral"> 
        <![CDATA[
        	SELECT SUM(XX.CNT) AS CNT FROM (
			SELECT COUNT(*) AS CNT
			  FROM WTM_APPL A
			  JOIN WTM_FLEXIBLE_APPL F
			   ON A.APPL_ID = F.APPL_ID
			  JOIN (
				SELECT A.TENANT_ID, A.ENTER_CD, A.APPL_ID, A.APPL_SABUN, F.SYMD, F.EYMD
				  FROM WTM_APPL A
				  JOIN WTM_FLEXIBLE_APPL F
				    ON A.APPL_ID = F.APPL_ID
				   AND A.APPL_ID = #{applId, jdbcType=NUMERIC}
			  ) X
			   ON A.TENANT_ID = X.TENANT_ID AND A.ENTER_CD = X.ENTER_CD AND A.APPL_SABUN = X.APPL_SABUN
			WHERE A.APPL_STATUS_CD NOT IN ('11','22','44','32','99') 
			  AND (X.SYMD BETWEEN F.SYMD AND F.EYMD OR X.EYMD BETWEEN F.SYMD AND F.EYMD)
			  AND A.APPL_ID <> X.APPL_ID
			UNION
		   SELECT COUNT(*)
		     FROM WTM_FLEXIBLE_EMP A
		     JOIN WTM_FLEXIBLE_STD_MGR M
		       ON A.FLEXIBLE_STD_MGR_ID = M.FLEXIBLE_STD_MGR_ID  
            WHERE A.TENANT_ID = #{tenantId} AND A.ENTER_CD = #{enterCd} AND A.SABUN = #{sabun}
              AND (#{symd} BETWEEN A.SYMD AND A.EYMD OR #{eymd} BETWEEN A.SYMD AND A.EYMD)
              AND M.BASE_WORK_YN = 'N' 
            ) XX
        ]]>
    </select>
     
    <select id="getWtmFlexibleStdList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT FLEXIBLE_STD_MGR_ID as CODE
			     , FLEXIBLE_NM as CODE_NM
			  FROM WTM_FLEXIBLE_STD_MGR 
			 WHERE TENANT_ID = #{tenantId}
			   AND ENTER_CD = #{enterCd}
			 ORDER BY FLEXIBLE_STD_MGR_ID
        ]]>
    </select>
    
    <select id="getWtmFlexibleStdWorkTypeList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT FLEXIBLE_STD_MGR_ID as CODE
			     , FLEXIBLE_NM as CODE_NM
			  FROM WTM_FLEXIBLE_STD_MGR 
			 WHERE TENANT_ID = #{tenantId}
			   AND ENTER_CD = #{enterCd}
			   AND WORK_TYPE_CD = #{workTypeCd}
			 ORDER BY FLEXIBLE_STD_MGR_ID
        ]]>
    </select>
    
    <select id="getRangeWeekDay" parameterType="map" resultType="wtmGeneral">
    	<![CDATA[
    	SELECT X.FIRST_DAY AS "symd"
    		 , F_WTM_DATE_FORMAT(F_WTM_DATE_ADD(F_WTM_TO_DATE(X.FIRST_DAY,'YMD'), 6, 'D'), 'YMD')  AS "eymd"
		  FROM (
		SELECT CASE WHEN  P.INFO_VALUE < F_WTM_WEEKDAY(#{d}) THEN MAX(D.SUN_YMD)
				  	WHEN  P.INFO_VALUE > F_WTM_WEEKDAY(#{d}) THEN MIN(D.SUN_YMD)
                    ELSE D.SUN_YMD END AS FIRST_DAY
		  FROM WTM_DAY_MGR D
		  JOIN WTM_PROPERTIE P
		    ON 1=1
		 WHERE 1=1
		   AND (
			( P.INFO_VALUE < F_WTM_WEEKDAY(#{d}) AND D.SUN_YMD BETWEEN F_WTM_DATE_ADD(F_WTM_TO_DATE(#{d},'YMD'), -6, 'D') AND  #{d}  AND D.DAY_NM = P.INFO_VALUE)
			OR
			( P.INFO_VALUE > F_WTM_WEEKDAY(#{d}) AND D.SUN_YMD BETWEEN  #{d} AND F_WTM_DATE_ADD(F_WTM_TO_DATE(#{d},'YMD'), 6, 'D')   AND D.DAY_NM = P.INFO_VALUE)
		    OR 
		    ( P.INFO_VALUE = F_WTM_WEEKDAY(#{d}) AND D.SUN_YMD =  #{d} )
		 	)
		   AND P.TENANT_ID = #{tenantId}
		   AND P.ENTER_CD = #{enterCd}
		   AND P.INFO_KEY = 'OPTION_FIRSTDAY_OF_WEEK'
		   AND D.SUN_YMD BETWEEN #{sYmd} AND #{eYmd}
		   GROUP BY D.SUN_YMD, P.INFO_VALUE
		 ) X
		 ]]>
    </select>
    
    <update id="insertFlexibleStd" parameterType="java.util.HashMap">
		<foreach collection="list" item="item" separator="; ">
		INSERT INTO WTM_FLEXIBLE_STD_MGR 
				(TENANT_ID, 
				ENTER_CD, 
				WORK_TYPE_CD, 
				FLEXIBLE_NM, 
				USE_SYMD, 
				USE_EYMD, 
				BASE_WORK_YN,
				UPDATE_DATE,
				UPDATE_ID)
			VALUES
				(#{item.tenantId},
				 #{item.enterCd} ,
				 #{item.workTypeCd} ,
				 #{item.flexibleNm} ,
				 #{item.useSymd} ,
				 #{item.useEymd} ,
				 #{item.baseWorkYn} ,
				 SYSDATE,
				 #{item.userId}
				)
			</foreach>
	</update>

	<update id="updateFlexibleStd" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";">
			UPDATE WTM_FLEXIBLE_STD_MGR SET 
				USE_EYMD =  #{item.useEymd, jdbcType=VARCHAR}
				, WORK_SHM = #{item.workShm, jdbcType=VARCHAR} 
				, WORK_EHM = #{item.workEhm, jdbcType=VARCHAR} 
				, CORE_SHM = #{item.coreShm, jdbcType=VARCHAR} 
				, CORE_EHM = #{item.coreEhm, jdbcType=VARCHAR} 
				, DEFAULT_WORK_USE_YN = #{item.defaultWorkUseYn, jdbcType=VARCHAR}
				, UNIT_MINUTE = #{item.unitMinute, jdbcType=VARCHAR} 
				, EXHAUSTION_YN = #{item.exhaustionYn, jdbcType=VARCHAR} 
				, HOL_EXCEPT_YN = #{item.holExceptYn, jdbcType=VARCHAR} 
				, WORK_DAYS_OPT = #{item.workDaysOpt, jdbcType=VARCHAR} 
				, USED_TERM_OPT = #{item.usedTermOpt, jdbcType=VARCHAR} 
				, APPL_TERM_OPT = #{item.applTermOpt, jdbcType=VARCHAR} 
				, CORE_CHK_YN = #{item.coreChkYn, jdbcType=VARCHAR} 
				, REGARD_TIME_CD_ID = #{item.regardTimeCdId, jdbcType=NUMERIC} 
				, FIXOT_USE_TYPE = #{item.fixotUseType, jdbcType=VARCHAR} 
				, FIXOT_USE_LIMIT = #{item.fixotUseLimit, jdbcType=NUMERIC}
				, TAA_TIME_YN = #{item.taaTimeYn, jdbcType=VARCHAR}
				, TAA_WORK_YN = #{item.taaWorkYn, jdbcType=VARCHAR}
				, DAY_OPEN_TYPE = #{item.dayOpenType, jdbcType=VARCHAR}
				, DAY_CLOSE_TYPE = #{item.dayCloseType, jdbcType=VARCHAR}
				, UNPLANNED_YN = #{item.unplannedYn, jdbcType=VARCHAR} 
				, APPL_YN = #{item.applYn, jdbcType=VARCHAR} 
				, TODAY_PLAN_EDIT_YN = #{item.todayPlanEditYn, jdbcType=VARCHAR} 
				, APPLY_ENTRY_SDATE_YN = #{item.applyEntrySdateYn, jdbcType=VARCHAR} 
				, APPLY_ENTRY_EDATE_YN = #{item.applyEntryEdateYn, jdbcType=VARCHAR} 
				, NOTE = #{item.note, jdbcType=VARCHAR}  
				, UPDATE_DATE = SYSDATE
				, UPDATE_ID = #{item.userId, jdbcType=NUMERIC}
			WHERE FLEXIBLE_STD_MGR_ID = #{item.flexibleStdMgrId, jdbcType=NUMERIC}
		</foreach>
	</update>
	
	<select id="getStdListWeb" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
			SELECT FLEXIBLE_STD_MGR_ID 
				 , TENANT_ID 
				 , ENTER_CD 
				 , WORK_TYPE_CD 
				 , FLEXIBLE_NM
				 , USE_SYMD 
				 , USE_EYMD 
				 , WORK_SHM 
				 , WORK_EHM 
				 , CORE_SHM
				 , CORE_EHM 
				 , DEFAULT_WORK_USE_YN 
				 , UNIT_MINUTE 
				 , EXHAUSTION_YN 
				 , HOL_EXCEPT_YN
				 , USED_TERM_OPT 
				 , APPL_TERM_OPT 
				 , CORE_CHK_YN 
				 , BASE_WORK_YN 
				 , REGARD_TIME_CD_ID
				 , FIXOT_USE_TYPE
				 , FIXOT_USE_LIMIT 
				 , TAA_TIME_YN 
				 , TAA_WORK_YN 
				 , DAY_OPEN_TYPE 
				 , DAY_CLOSE_TYPE 
				 , UNPLANNED_YN 
				 , CASE F_WTM_WEEKDAY(use_symd) 
						WHEN 1 THEN '일요일'
						WHEN 2 THEN '월요일'
						WHEN 3 THEN '화요일'
						WHEN 4 THEN '수요일'
						WHEN 5 THEN '목요일'
						WHEN 6 THEN '금요일'
						WHEN 7 THEN '토요일' END AS BASE_DAY
				 , APPL_YN
				 , TODAY_PLAN_EDIT_YN
				 , APPLY_ENTRY_SDATE_YN
				 , APPLY_ENTRY_EDATE_YN
				 , NOTE 
		      FROM WTM_FLEXIBLE_STD_MGR 
		     WHERE TENANT_ID = #{tenantId}
			   AND ENTER_CD = #{enterCd}
			   AND REPLACE(#{ymd}, '-', '') BETWEEN USE_SYMD AND F_WTM_NVL(USE_EYMD, '99991231') 
			 ORDER BY WORK_TYPE_CD, USE_SYMD DESC
        ]]> 
    </select>
    
     <select id="getWeekday" parameterType="String" resultType="wtmGeneral">
        <![CDATA[
			SELECT CASE F_WTM_WEEKDAY(#{value}) 
						WHEN 1 THEN '일요일'
						WHEN 2 THEN '월요일'
						WHEN 3 THEN '화요일'
						WHEN 4 THEN '수요일'
						WHEN 5 THEN '목요일'
						WHEN 6 THEN '금요일'
						WHEN 7 THEN '토요일' END AS WEEK_DAY
		      FROM DUAL 
        ]]>
    </select>
</mapper>
