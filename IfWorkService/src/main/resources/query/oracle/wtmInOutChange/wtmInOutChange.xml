<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.isu.ifw.mapper.WtmInOutChangeMapper">
	<select id="getInOutChangeList" parameterType="map" resultType="wtmGeneral">
        <![CDATA[
		        SELECT A.SABUN , 
					B.EMP_NM , 
					A.YMD , 
					F_WTM_GET_ORG_NM(A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD) AS ORG_NM,
					F_WTM_GET_FLEXIBLE_NM(A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD) AS FLEXIBLE_NM,
					F_WTM_GET_TIME_NM(A.TENANT_ID, A.ENTER_CD, A.SABUN, A.YMD) AS TIME_NM,
					F_WTM_DATE_FORMAT(A.ENTRY_SDATE, 'YMDHI') as ENTRY_SDATE,
					A.ENTRY_STYPE_CD ,
					F_WTM_DATE_FORMAT(A.ENTRY_EDATE, 'YMDHI') as ENTRY_EDATE,
					A.ENTRY_ETYPE_CD ,
					F_WTM_DATE_FORMAT(A.CHG_SDATE, 'YMDHI') as CHG_SDATE,
					F_WTM_DATE_FORMAT(A.CHG_EDATE, 'YMDHI') as CHG_EDATE,
					A.REASON ,
					A.UPDATE_ID,
					F_WTM_DATE_FORMAT(A.UPDATE_DATE, 'YMDHIS') as UPDATE_DATE
				FROM WTM_INOUT_CHG_HIS A
				 INNER JOIN WTM_EMP_HIS B
				    ON A.TENANT_ID = B.TENANT_ID
				    AND A.ENTER_CD = B.ENTER_CD
				    AND A.SABUN = B.SABUN
				    AND A.YMD BETWEEN B.SYMD AND B.EYMD
				WHERE A.TENANT_ID=#{tenantId} 
					AND A.ENTER_CD=#{enterCd}
					AND A.YMD BETWEEN  REPLACE(#{sYmd}, '-', '') AND REPLACE(#{eYmd}, '-', '') 
				]]>
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					AND (A.SABUN LIKE #{searchKeyword} || '%' OR B.EMP_NM LIKE '%'|| #{searchKeyword} || '%')
				</if>
	</select>
    
    <update id="setInOutChangeList" parameterType="map">
    	<if test="insertRows!=null and insertRows.size()>0">
			<foreach collection="insertRows" item="item" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">
		        INTO WTM_INOUT_CHG_HIS 
					(TENANT_ID,
					ENTER_CD, 
					SABUN, 
					YMD, 
					ENTRY_SDATE, 
					ENTRY_STYPE_CD, 
					ENTRY_EDATE, 
					ENTRY_ETYPE_CD, 
					CHG_SDATE, 
					CHG_EDATE, 
					REASON, 
					UPDATE_DATE, 
					UPDATE_ID)
				VALUES 
					(#{tenantId}, 
					#{enterCd}, 
					#{item.sabun}, 
					#{item.ymd},
					CASE WHEN #{item.entrySdate, jdbcType=VARCHAR} IS NULL THEN NULL ELSE F_WTM_TO_DATE(#{item.entrySdate, jdbcType=VARCHAR}, 'YMDHI') END, 
					#{item.entryStypeCd, jdbcType=VARCHAR},
					CASE WHEN #{item.entryEdate, jdbcType=VARCHAR} IS NULL THEN NULL ELSE F_WTM_TO_DATE(#{item.entryEdate, jdbcType=VARCHAR}, 'YMDHI') END,
					#{item.entryEtypeCd, jdbcType=VARCHAR},
					CASE WHEN #{item.chgSdate, jdbcType=VARCHAR} IS NULL THEN NULL ELSE F_WTM_TO_DATE(#{item.chgSdate, jdbcType=VARCHAR}, 'YMDHI') END,
					CASE WHEN #{item.chgEdate, jdbcType=VARCHAR} IS NULL THEN NULL ELSE F_WTM_TO_DATE(#{item.chgEdate, jdbcType=VARCHAR}, 'YMDHI') END,
					#{item.reason}, 
					SYSDATE, 
					#{userId})	
			</foreach>
		</if>
    </update>
</mapper>
